{"ast":null,"code":"var _jsxFileName = \"/home/crawlins/IdeaProjects/IOTAVis/reactClient/src/components/Tangle.js\";\n\n/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3Scale from 'd3-scale';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Axis = ({\n  x,\n  endX,\n  y,\n  startVal,\n  endVal,\n  ticks\n}) => {\n  const tickSize = 5;\n  const xScale = d3Scale.scaleLinear().domain([startVal, endVal]);\n  xScale.range([x, endX]);\n  const tickValues = xScale.ticks(ticks);\n  return /*#__PURE__*/_jsxDEV(\"g\", {\n    fill: \"none\",\n    className: \"unselectable axis\",\n    children: [/*#__PURE__*/_jsxDEV(\"text\", {\n      x: (x + endX) / 2,\n      y: y - tickSize,\n      children: \"Time\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"line\", {\n      stroke: \"#000\",\n      strokeWidth: \"1\",\n      x1: x,\n      x2: endX,\n      y1: y,\n      y2: y\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), tickValues.map(value => /*#__PURE__*/_jsxDEV(\"line\", {\n      stroke: \"#000\",\n      strokeWidth: \"2\",\n      x1: xScale(value),\n      y1: y,\n      x2: xScale(value),\n      y2: y + tickSize\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 9\n    }, this)), tickValues.map(value => /*#__PURE__*/_jsxDEV(\"text\", {\n      fontSize: \"12\",\n      x: xScale(value),\n      y: y + 3.2 * tickSize,\n      children: value\n    }, value, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 9\n    }, this)), \"}\"]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 5\n  }, this);\n};\n\n_c = Axis;\nAxis.propTypes = {\n  x: PropTypes.number.isRequired,\n  endX: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  startVal: PropTypes.number.isRequired,\n  endVal: PropTypes.number.isRequired,\n  ticks: PropTypes.number.isRequired\n};\n\nconst Marker = ({\n  color,\n  id,\n  nodeRadius\n}) => /*#__PURE__*/_jsxDEV(\"marker\", {\n  id: id,\n  viewBox: \"0 -5 10 10\",\n  refX: 0,\n  refY: 0,\n  markerWidth: 10,\n  markerHeight: 6,\n  fill: color,\n  markerUnits: \"userSpaceOnUse\",\n  orient: \"auto\",\n  children: /*#__PURE__*/_jsxDEV(\"path\", {\n    d: \"M0,-5L10,0L0,5\"\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 60,\n  columnNumber: 3\n}, this);\n\n_c2 = Marker;\nMarker.propTypes = {\n  color: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  nodeRadius: PropTypes.number.isRequired\n};\n\nconst Node = ({\n  nodeRadius,\n  mouseEntersNodeHandler,\n  mouseLeavesNodeHandler,\n  name\n}) => /*#__PURE__*/_jsxDEV(\"rect\", {\n  width: nodeRadius,\n  height: nodeRadius,\n  x: -nodeRadius / 2,\n  y: -nodeRadius / 2,\n  rx: nodeRadius / 5,\n  ry: nodeRadius / 5,\n  stroke: \"black\",\n  strokeWidth: \"1px\",\n  fill: \"white\",\n  name: name,\n  onMouseEnter: mouseEntersNodeHandler,\n  onMouseLeave: mouseLeavesNodeHandler\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 80,\n  columnNumber: 3\n}, this);\n\n_c3 = Node;\nNode.propTypes = {\n  nodeRadius: PropTypes.number.isRequired,\n  mouseEntersNodeHandler: PropTypes.any,\n  mouseLeavesNodeHandler: PropTypes.any,\n  name: PropTypes.string\n};\n\nconst generateLinkPath = ({\n  link,\n  nodeRadius\n}) => {\n  const arrowheadSpace = nodeRadius;\n  const pathVector = {\n    x: link.target.x - link.source.x,\n    y: link.target.y - link.source.y\n  };\n  const radius = Math.sqrt(Math.pow(pathVector.x, 2) + Math.pow(pathVector.y, 2));\n  const scalingFactor = (radius - arrowheadSpace) / radius;\n  const arrowX = link.source.x + scalingFactor * pathVector.x;\n  const arrowY = link.source.y + scalingFactor * pathVector.y;\n  return `M ${link.source.x} ${link.source.y} ` + `L ${arrowX} ${arrowY}`;\n};\n\nconst Tangle = props => /*#__PURE__*/_jsxDEV(\"div\", {\n  children: /*#__PURE__*/_jsxDEV(\"svg\", {\n    width: props.width,\n    height: props.height,\n    children: [/*#__PURE__*/_jsxDEV(\"defs\", {\n      children: [/*#__PURE__*/_jsxDEV(Marker, {\n        color: \"black\",\n        id: \"arrowhead\",\n        nodeRadius: props.nodeRadius\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        color: \"red\",\n        id: \"arrowhead-approved\",\n        nodeRadius: props.nodeRadius\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Marker, {\n        color: \"blue\",\n        id: \"arrowhead-approving\",\n        nodeRadius: props.nodeRadius\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      children: props.links.map(link => /*#__PURE__*/_jsxDEV(\"path\", {\n        className: `links${props.approvedLinks.has(link) ? ' approved' : props.approvingLinks.has(link) ? ' approving' : ''}`,\n        d: generateLinkPath({\n          link,\n          nodeRadius: props.nodeRadius\n        }),\n        markerEnd: props.approvedLinks.has(link) ? 'url(#arrowhead-approved)' : props.approvingLinks.has(link) ? 'url(#arrowhead-approving)' : 'url(#arrowhead)'\n      }, `${link.source.name}->${link.target.name}` + Math.random().toString(36).substr(2, 9), false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      children: props.nodes.map(node => /*#__PURE__*/_jsxDEV(\"g\", {\n        transform: `translate(${node.x},${node.y})`,\n        className: `${props.approvedNodes.has(node) ? 'approved' : props.approvingNodes.has(node) ? 'approving' : props.tips.has(node) ? 'tip' : ''}`,\n        children: [props.hoveredNode === node && /*#__PURE__*/_jsxDEV(\"g\", {\n          style: {\n            opacity: 0.4\n          },\n          children: [/*#__PURE__*/_jsxDEV(Node, {\n            nodeRadius: props.nodeRadius * 1.6\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Node, {\n            nodeRadius: props.nodeRadius * 1.3\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Node, {\n          nodeRadius: props.nodeRadius,\n          name: node.name,\n          mouseEntersNodeHandler: props.mouseEntersNodeHandler,\n          mouseLeavesNodeHandler: props.mouseLeavesNodeHandler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 13\n        }, this), props.showLabels && /*#__PURE__*/_jsxDEV(\"text\", {\n          className: \"unselectable\",\n          fill: \"#666\",\n          fontFamily: \"Helvetica\",\n          alignmentBaseline: \"middle\",\n          textAnchor: \"middle\",\n          pointerEvents: \"none\",\n          children: node.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 34\n        }, this)]\n      }, node.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 138,\n        columnNumber: 11\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"g\", {\n      children: /*#__PURE__*/_jsxDEV(Axis, {\n        x: props.leftMargin,\n        endX: props.width - props.rightMargin,\n        y: props.height - 30,\n        ticks: 8,\n        startVal: 0,\n        endVal: props.nodes.length < 2 ? 1 : Math.max(...props.nodes.map(n => n.time))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 163,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this)\n}, void 0, false, {\n  fileName: _jsxFileName,\n  lineNumber: 118,\n  columnNumber: 3\n}, this);\n\n_c4 = Tangle;\nTangle.propTypes = {\n  links: PropTypes.array.isRequired,\n  nodes: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  leftMargin: PropTypes.number.isRequired,\n  rightMargin: PropTypes.number.isRequired,\n  nodeRadius: PropTypes.number.isRequired,\n  mouseEntersNodeHandler: PropTypes.func,\n  mouseLeavesNodeHandler: PropTypes.func,\n  approvedNodes: PropTypes.any,\n  approvedLinks: PropTypes.any,\n  approvingNodes: PropTypes.any,\n  approvingLinks: PropTypes.any,\n  hoveredNode: PropTypes.any\n};\nexport default Tangle;\n\nvar _c, _c2, _c3, _c4;\n\n$RefreshReg$(_c, \"Axis\");\n$RefreshReg$(_c2, \"Marker\");\n$RefreshReg$(_c3, \"Node\");\n$RefreshReg$(_c4, \"Tangle\");","map":{"version":3,"sources":["/home/crawlins/IdeaProjects/IOTAVis/reactClient/src/components/Tangle.js"],"names":["React","PropTypes","d3Scale","Axis","x","endX","y","startVal","endVal","ticks","tickSize","xScale","scaleLinear","domain","range","tickValues","map","value","propTypes","number","isRequired","Marker","color","id","nodeRadius","string","Node","mouseEntersNodeHandler","mouseLeavesNodeHandler","name","any","generateLinkPath","link","arrowheadSpace","pathVector","target","source","radius","Math","sqrt","pow","scalingFactor","arrowX","arrowY","Tangle","props","width","height","links","approvedLinks","has","approvingLinks","random","toString","substr","nodes","node","approvedNodes","approvingNodes","tips","hoveredNode","opacity","showLabels","leftMargin","rightMargin","length","max","n","time","array","func"],"mappings":"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","sourcesContent":["/* eslint-disable */\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as d3Scale from 'd3-scale';\n\nconst Axis = ({x, endX, y, startVal, endVal, ticks}) => {\n  const tickSize = 5;\n\n  const xScale = d3Scale.scaleLinear().domain([startVal, endVal]);\n  xScale.range([x, endX]);\n  const tickValues = xScale.ticks(ticks);\n\n  return (\n    <g fill='none' className='unselectable axis'>\n      <text\n        x={(x+endX)/2}\n        y={y - tickSize}>\n        Time\n      </text>\n      <line\n        stroke='#000'\n        strokeWidth='1'\n        x1={x}\n        x2={endX}\n        y1={y}\n        y2={y} />\n      {tickValues.map(value =>\n        <line\n          key={value}\n          stroke='#000'\n          strokeWidth='2'\n          x1={xScale(value)}\n          y1={y}\n          x2={xScale(value)}\n          y2={y + tickSize} />\n      )}\n      {tickValues.map(value =>\n        <text\n          key={value}\n          fontSize='12'\n          x={xScale(value)}\n          y={y + 3.2 * tickSize}>\n          {value}\n        </text>\n      )}}\n    </g>\n  );\n};\n\nAxis.propTypes = {\n  x: PropTypes.number.isRequired,\n  endX: PropTypes.number.isRequired,\n  y: PropTypes.number.isRequired,\n  startVal: PropTypes.number.isRequired,\n  endVal: PropTypes.number.isRequired,\n  ticks: PropTypes.number.isRequired,\n};\n\nconst Marker = ({color, id, nodeRadius}) =>\n  <marker\n    id={id}\n    viewBox='0 -5 10 10'\n    refX={0}\n    refY={0}\n    markerWidth={10}\n    markerHeight={6}\n    fill={color}\n    markerUnits='userSpaceOnUse'\n    orient='auto' >\n    <path d='M0,-5L10,0L0,5'/>\n  </marker>;\n\nMarker.propTypes = {\n  color: PropTypes.string.isRequired,\n  id: PropTypes.string.isRequired,\n  nodeRadius: PropTypes.number.isRequired,\n};\n\nconst Node = ({nodeRadius, mouseEntersNodeHandler, mouseLeavesNodeHandler, name}) =>\n  <rect width={nodeRadius} height={nodeRadius}\n    x={-nodeRadius/2}\n    y={-nodeRadius/2}\n    rx={nodeRadius/5}\n    ry={nodeRadius/5}\n    stroke='black'\n    strokeWidth='1px'\n    fill='white'\n    name={name}\n    onMouseEnter={mouseEntersNodeHandler}\n    onMouseLeave={mouseLeavesNodeHandler} >\n  </rect>;\n\nNode.propTypes = {\n  nodeRadius: PropTypes.number.isRequired,\n  mouseEntersNodeHandler: PropTypes.any,\n  mouseLeavesNodeHandler: PropTypes.any,\n  name: PropTypes.string,\n};\n\nconst generateLinkPath = ({link, nodeRadius}) => {\n  const arrowheadSpace = nodeRadius;\n\n  const pathVector = {\n    x: link.target.x - link.source.x,\n    y: link.target.y - link.source.y,\n  };\n  const radius = Math.sqrt(Math.pow(pathVector.x, 2) + Math.pow(pathVector.y, 2));\n\n  const scalingFactor = (radius - arrowheadSpace) / radius;\n  const arrowX = link.source.x + scalingFactor * pathVector.x;\n  const arrowY = link.source.y + scalingFactor * pathVector.y;\n\n  return `M ${link.source.x} ${link.source.y} ` +\n         `L ${arrowX} ${arrowY}`;\n};\n\nconst Tangle = props =>\n  <div>\n    <svg width={props.width} height={props.height}>\n      <defs>\n        <Marker color='black' id='arrowhead' nodeRadius={props.nodeRadius} />\n        <Marker color='red' id='arrowhead-approved' nodeRadius={props.nodeRadius} />\n        <Marker color='blue' id='arrowhead-approving' nodeRadius={props.nodeRadius} />\n      </defs>\n      <g>\n        {props.links.map(link =>\n          <path className={`links${props.approvedLinks.has(link) ? ' approved' :\n                                   props.approvingLinks.has(link) ? ' approving' : ''}`}\n            key={`${link.source.name}->${link.target.name}` + Math.random().toString(36).substr(2, 9)}\n            d={generateLinkPath({link, nodeRadius: props.nodeRadius})}\n            markerEnd={props.approvedLinks.has(link) ? 'url(#arrowhead-approved)' :\n                       props.approvingLinks.has(link) ? 'url(#arrowhead-approving)' :\n                       'url(#arrowhead)'}\n          /> )}\n      </g>\n      <g>\n        {props.nodes.map(node =>\n          <g transform={`translate(${node.x},${node.y})`} key={node.name}\n            className={\n              `${props.approvedNodes.has(node) ? 'approved' :\n                 props.approvingNodes.has(node) ? 'approving' :\n                 props.tips.has(node) ? 'tip' : ''}`}>\n            {props.hoveredNode === node &&\n              <g style={{opacity: 0.4}}>\n                <Node nodeRadius={props.nodeRadius*1.6} />\n                <Node nodeRadius={props.nodeRadius*1.3} />\n              </g>}\n            <Node\n              nodeRadius={props.nodeRadius}\n              name={node.name}\n              mouseEntersNodeHandler={props.mouseEntersNodeHandler}\n              mouseLeavesNodeHandler={props.mouseLeavesNodeHandler} />\n            {props.showLabels && <text\n              className='unselectable'\n              fill='#666' fontFamily='Helvetica'\n              alignmentBaseline='middle' textAnchor='middle'\n              pointerEvents='none'>\n              {node.name}\n            </text>}\n          </g>)}\n      </g>\n      <g>\n        <Axis\n          x={props.leftMargin}\n          endX={props.width - props.rightMargin}\n          y={props.height - 30}\n          ticks={8}\n          startVal={0}\n          endVal={props.nodes.length < 2 ? 1 : Math.max(...props.nodes.map(n => n.time))}\n          />\n      </g>\n    </svg>\n  </div>;\n\nTangle.propTypes = {\n  links: PropTypes.array.isRequired,\n  nodes: PropTypes.array.isRequired,\n  width: PropTypes.number.isRequired,\n  height: PropTypes.number.isRequired,\n  leftMargin: PropTypes.number.isRequired,\n  rightMargin: PropTypes.number.isRequired,\n  nodeRadius: PropTypes.number.isRequired,\n  mouseEntersNodeHandler: PropTypes.func,\n  mouseLeavesNodeHandler: PropTypes.func,\n  approvedNodes: PropTypes.any,\n  approvedLinks: PropTypes.any,\n  approvingNodes: PropTypes.any,\n  approvingLinks: PropTypes.any,\n  hoveredNode: PropTypes.any,\n};\n\nexport default Tangle;\n"]},"metadata":{},"sourceType":"module"}