{"ast":null,"code":"(function (window, factory) {\n  if (typeof exports === 'object') {\n    module.exports = factory();\n  } else if (typeof define === 'function' && define.amd) {\n    define(factory);\n  } else {\n    window.jStat = factory();\n  }\n})(this, function () {\n  var jStat = function (Math, undefined) {\n    console.warn('The npm package jStat is no longer maintained. Instead use jstat (lowercase).');\n    console.warn('Visit https://www.npmjs.com/package/jstat for more information.'); // For quick reference.\n\n    var concat = Array.prototype.concat;\n    var slice = Array.prototype.slice;\n    var toString = Object.prototype.toString; // Calculate correction for IEEE error\n    // TODO: This calculation can be improved.\n\n    function calcRdx(n, m) {\n      var val = n > m ? n : m;\n      return Math.pow(10, 17 - ~~(Math.log(val > 0 ? val : -val) * Math.LOG10E));\n    }\n\n    var isArray = Array.isArray || function isArray(arg) {\n      return toString.call(arg) === '[object Array]';\n    };\n\n    function isFunction(arg) {\n      return toString.call(arg) === '[object Function]';\n    }\n\n    function isNumber(arg) {\n      return typeof arg === 'number' && arg === arg;\n    } // Converts the jStat matrix to vector.\n\n\n    function toVector(arr) {\n      return concat.apply([], arr);\n    } // The one and only jStat constructor.\n\n\n    function jStat() {\n      return new jStat._init(arguments);\n    } // TODO: Remove after all references in src files have been removed.\n\n\n    jStat.fn = jStat.prototype; // By separating the initializer from the constructor it's easier to handle\n    // always returning a new instance whether \"new\" was used or not.\n\n    jStat._init = function _init(args) {\n      // If first argument is an array, must be vector or matrix.\n      if (isArray(args[0])) {\n        // Check if matrix.\n        if (isArray(args[0][0])) {\n          // See if a mapping function was also passed.\n          if (isFunction(args[1])) args[0] = jStat.map(args[0], args[1]); // Iterate over each is faster than this.push.apply(this, args[0].\n\n          for (var i = 0; i < args[0].length; i++) this[i] = args[0][i];\n\n          this.length = args[0].length; // Otherwise must be a vector.\n        } else {\n          this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n          this.length = 1;\n        } // If first argument is number, assume creation of sequence.\n\n      } else if (isNumber(args[0])) {\n        this[0] = jStat.seq.apply(null, args);\n        this.length = 1; // Handle case when jStat object is passed to jStat.\n      } else if (args[0] instanceof jStat) {\n        // Duplicate the object and pass it back.\n        return jStat(args[0].toArray()); // Unexpected argument value, return empty jStat object.\n        // TODO: This is strange behavior. Shouldn't this throw or some such to let\n        // the user know they had bad arguments?\n      } else {\n        this[0] = [];\n        this.length = 1;\n      }\n\n      return this;\n    };\n\n    jStat._init.prototype = jStat.prototype;\n    jStat._init.constructor = jStat; // Utility functions.\n    // TODO: for internal use only?\n\n    jStat.utils = {\n      calcRdx: calcRdx,\n      isArray: isArray,\n      isFunction: isFunction,\n      isNumber: isNumber,\n      toVector: toVector\n    };\n    jStat._random_fn = Math.random;\n\n    jStat.setRandom = function setRandom(fn) {\n      if (typeof fn !== 'function') throw new TypeError('fn is not a function');\n      jStat._random_fn = fn;\n    }; // Easily extend the jStat object.\n    // TODO: is this seriously necessary?\n\n\n    jStat.extend = function extend(obj) {\n      var i, j;\n\n      if (arguments.length === 1) {\n        for (j in obj) jStat[j] = obj[j];\n\n        return this;\n      }\n\n      for (i = 1; i < arguments.length; i++) {\n        for (j in arguments[i]) obj[j] = arguments[i][j];\n      }\n\n      return obj;\n    }; // Returns the number of rows in the matrix.\n\n\n    jStat.rows = function rows(arr) {\n      return arr.length || 1;\n    }; // Returns the number of columns in the matrix.\n\n\n    jStat.cols = function cols(arr) {\n      return arr[0].length || 1;\n    }; // Returns the dimensions of the object { rows: i, cols: j }\n\n\n    jStat.dimensions = function dimensions(arr) {\n      return {\n        rows: jStat.rows(arr),\n        cols: jStat.cols(arr)\n      };\n    }; // Returns a specified row as a vector or return a sub matrix by pick some rows\n\n\n    jStat.row = function row(arr, index) {\n      if (isArray(index)) {\n        return index.map(function (i) {\n          return jStat.row(arr, i);\n        });\n      }\n\n      return arr[index];\n    }; // return row as array\n    // rowa([[1,2],[3,4]],0) -> [1,2]\n\n\n    jStat.rowa = function rowa(arr, i) {\n      return jStat.row(arr, i);\n    }; // Returns the specified column as a vector or return a sub matrix by pick some\n    // columns\n\n\n    jStat.col = function col(arr, index) {\n      if (isArray(index)) {\n        var submat = jStat.arange(arr.length).map(function () {\n          return new Array(index.length);\n        });\n        index.forEach(function (ind, i) {\n          jStat.arange(arr.length).forEach(function (j) {\n            submat[j][i] = arr[j][ind];\n          });\n        });\n        return submat;\n      }\n\n      var column = new Array(arr.length);\n\n      for (var i = 0; i < arr.length; i++) column[i] = [arr[i][index]];\n\n      return column;\n    }; // return column as array\n    // cola([[1,2],[3,4]],0) -> [1,3]\n\n\n    jStat.cola = function cola(arr, i) {\n      return jStat.col(arr, i).map(function (a) {\n        return a[0];\n      });\n    }; // Returns the diagonal of the matrix\n\n\n    jStat.diag = function diag(arr) {\n      var nrow = jStat.rows(arr);\n      var res = new Array(nrow);\n\n      for (var row = 0; row < nrow; row++) res[row] = [arr[row][row]];\n\n      return res;\n    }; // Returns the anti-diagonal of the matrix\n\n\n    jStat.antidiag = function antidiag(arr) {\n      var nrow = jStat.rows(arr) - 1;\n      var res = new Array(nrow);\n\n      for (var i = 0; nrow >= 0; nrow--, i++) res[i] = [arr[i][nrow]];\n\n      return res;\n    }; // Transpose a matrix or array.\n\n\n    jStat.transpose = function transpose(arr) {\n      var obj = [];\n      var objArr, rows, cols, j, i; // Make sure arr is in matrix format.\n\n      if (!isArray(arr[0])) arr = [arr];\n      rows = arr.length;\n      cols = arr[0].length;\n\n      for (i = 0; i < cols; i++) {\n        objArr = new Array(rows);\n\n        for (j = 0; j < rows; j++) objArr[j] = arr[j][i];\n\n        obj.push(objArr);\n      } // If obj is vector, return only single array.\n\n\n      return obj.length === 1 ? obj[0] : obj;\n    }; // Map a function to an array or array of arrays.\n    // \"toAlter\" is an internal variable.\n\n\n    jStat.map = function map(arr, func, toAlter) {\n      var row, nrow, ncol, res, col;\n      if (!isArray(arr[0])) arr = [arr];\n      nrow = arr.length;\n      ncol = arr[0].length;\n      res = toAlter ? arr : new Array(nrow);\n\n      for (row = 0; row < nrow; row++) {\n        // if the row doesn't exist, create it\n        if (!res[row]) res[row] = new Array(ncol);\n\n        for (col = 0; col < ncol; col++) res[row][col] = func(arr[row][col], row, col);\n      }\n\n      return res.length === 1 ? res[0] : res;\n    }; // Cumulatively combine the elements of an array or array of arrays using a function.\n\n\n    jStat.cumreduce = function cumreduce(arr, func, toAlter) {\n      var row, nrow, ncol, res, col;\n      if (!isArray(arr[0])) arr = [arr];\n      nrow = arr.length;\n      ncol = arr[0].length;\n      res = toAlter ? arr : new Array(nrow);\n\n      for (row = 0; row < nrow; row++) {\n        // if the row doesn't exist, create it\n        if (!res[row]) res[row] = new Array(ncol);\n        if (ncol > 0) res[row][0] = arr[row][0];\n\n        for (col = 1; col < ncol; col++) res[row][col] = func(res[row][col - 1], arr[row][col]);\n      }\n\n      return res.length === 1 ? res[0] : res;\n    }; // Destructively alter an array.\n\n\n    jStat.alter = function alter(arr, func) {\n      return jStat.map(arr, func, true);\n    }; // Generate a rows x cols matrix according to the supplied function.\n\n\n    jStat.create = function create(rows, cols, func) {\n      var res = new Array(rows);\n      var i, j;\n\n      if (isFunction(cols)) {\n        func = cols;\n        cols = rows;\n      }\n\n      for (i = 0; i < rows; i++) {\n        res[i] = new Array(cols);\n\n        for (j = 0; j < cols; j++) res[i][j] = func(i, j);\n      }\n\n      return res;\n    };\n\n    function retZero() {\n      return 0;\n    } // Generate a rows x cols matrix of zeros.\n\n\n    jStat.zeros = function zeros(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retZero);\n    };\n\n    function retOne() {\n      return 1;\n    } // Generate a rows x cols matrix of ones.\n\n\n    jStat.ones = function ones(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retOne);\n    }; // Generate a rows x cols matrix of uniformly random numbers.\n\n\n    jStat.rand = function rand(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, jStat._random_fn);\n    };\n\n    function retIdent(i, j) {\n      return i === j ? 1 : 0;\n    } // Generate an identity matrix of size row x cols.\n\n\n    jStat.identity = function identity(rows, cols) {\n      if (!isNumber(cols)) cols = rows;\n      return jStat.create(rows, cols, retIdent);\n    }; // Tests whether a matrix is symmetric\n\n\n    jStat.symmetric = function symmetric(arr) {\n      var size = arr.length;\n      var row, col;\n      if (arr.length !== arr[0].length) return false;\n\n      for (row = 0; row < size; row++) {\n        for (col = 0; col < size; col++) if (arr[col][row] !== arr[row][col]) return false;\n      }\n\n      return true;\n    }; // Set all values to zero.\n\n\n    jStat.clear = function clear(arr) {\n      return jStat.alter(arr, retZero);\n    }; // Generate sequence.\n\n\n    jStat.seq = function seq(min, max, length, func) {\n      if (!isFunction(func)) func = false;\n      var arr = [];\n      var hival = calcRdx(min, max);\n      var step = (max * hival - min * hival) / ((length - 1) * hival);\n      var current = min;\n      var cnt; // Current is assigned using a technique to compensate for IEEE error.\n      // TODO: Needs better implementation.\n\n      for (cnt = 0; current <= max && cnt < length; cnt++, current = (min * hival + step * hival * cnt) / hival) {\n        arr.push(func ? func(current, cnt) : current);\n      }\n\n      return arr;\n    }; // arange(5) -> [0,1,2,3,4]\n    // arange(1,5) -> [1,2,3,4]\n    // arange(5,1,-1) -> [5,4,3,2]\n\n\n    jStat.arange = function arange(start, end, step) {\n      var rl = [];\n      var i;\n      step = step || 1;\n\n      if (end === undefined) {\n        end = start;\n        start = 0;\n      }\n\n      if (start === end || step === 0) {\n        return [];\n      }\n\n      if (start < end && step < 0) {\n        return [];\n      }\n\n      if (start > end && step > 0) {\n        return [];\n      }\n\n      if (step > 0) {\n        for (i = start; i < end; i += step) {\n          rl.push(i);\n        }\n      } else {\n        for (i = start; i > end; i += step) {\n          rl.push(i);\n        }\n      }\n\n      return rl;\n    }; // A=[[1,2,3],[4,5,6],[7,8,9]]\n    // slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n    // slice(A,1,{start:1}) -> [5,6]\n    // as numpy code A[:2,1:]\n\n\n    jStat.slice = function () {\n      function _slice(list, start, end, step) {\n        // note it's not equal to range.map mode it's a bug\n        var i;\n        var rl = [];\n        var length = list.length;\n\n        if (start === undefined && end === undefined && step === undefined) {\n          return jStat.copy(list);\n        }\n\n        start = start || 0;\n        end = end || list.length;\n        start = start >= 0 ? start : length + start;\n        end = end >= 0 ? end : length + end;\n        step = step || 1;\n\n        if (start === end || step === 0) {\n          return [];\n        }\n\n        if (start < end && step < 0) {\n          return [];\n        }\n\n        if (start > end && step > 0) {\n          return [];\n        }\n\n        if (step > 0) {\n          for (i = start; i < end; i += step) {\n            rl.push(list[i]);\n          }\n        } else {\n          for (i = start; i > end; i += step) {\n            rl.push(list[i]);\n          }\n        }\n\n        return rl;\n      }\n\n      function slice(list, rcSlice) {\n        var colSlice, rowSlice;\n        rcSlice = rcSlice || {};\n\n        if (isNumber(rcSlice.row)) {\n          if (isNumber(rcSlice.col)) return list[rcSlice.row][rcSlice.col];\n          var row = jStat.rowa(list, rcSlice.row);\n          colSlice = rcSlice.col || {};\n          return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n        }\n\n        if (isNumber(rcSlice.col)) {\n          var col = jStat.cola(list, rcSlice.col);\n          rowSlice = rcSlice.row || {};\n          return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n        }\n\n        rowSlice = rcSlice.row || {};\n        colSlice = rcSlice.col || {};\n\n        var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n\n        return rows.map(function (row) {\n          return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n        });\n      }\n\n      return slice;\n    }(); // A=[[1,2,3],[4,5,6],[7,8,9]]\n    // sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n    // A=[[1,2,3],[4,0,0],[7,0,0]]\n\n\n    jStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n      var nl, ml;\n\n      if (isNumber(rcSlice.row)) {\n        if (isNumber(rcSlice.col)) return A[rcSlice.row][rcSlice.col] = B;\n        rcSlice.col = rcSlice.col || {};\n        rcSlice.col.start = rcSlice.col.start || 0;\n        rcSlice.col.end = rcSlice.col.end || A[0].length;\n        rcSlice.col.step = rcSlice.col.step || 1;\n        nl = jStat.arange(rcSlice.col.start, Math.min(A.length, rcSlice.col.end), rcSlice.col.step);\n        var m = rcSlice.row;\n        nl.forEach(function (n, i) {\n          A[m][n] = B[i];\n        });\n        return A;\n      }\n\n      if (isNumber(rcSlice.col)) {\n        rcSlice.row = rcSlice.row || {};\n        rcSlice.row.start = rcSlice.row.start || 0;\n        rcSlice.row.end = rcSlice.row.end || A.length;\n        rcSlice.row.step = rcSlice.row.step || 1;\n        ml = jStat.arange(rcSlice.row.start, Math.min(A[0].length, rcSlice.row.end), rcSlice.row.step);\n        var n = rcSlice.col;\n        ml.forEach(function (m, j) {\n          A[m][n] = B[j];\n        });\n        return A;\n      }\n\n      if (B[0].length === undefined) {\n        B = [B];\n      }\n\n      rcSlice.row.start = rcSlice.row.start || 0;\n      rcSlice.row.end = rcSlice.row.end || A.length;\n      rcSlice.row.step = rcSlice.row.step || 1;\n      rcSlice.col.start = rcSlice.col.start || 0;\n      rcSlice.col.end = rcSlice.col.end || A[0].length;\n      rcSlice.col.step = rcSlice.col.step || 1;\n      ml = jStat.arange(rcSlice.row.start, Math.min(A.length, rcSlice.row.end), rcSlice.row.step);\n      nl = jStat.arange(rcSlice.col.start, Math.min(A[0].length, rcSlice.col.end), rcSlice.col.step);\n      ml.forEach(function (m, i) {\n        nl.forEach(function (n, j) {\n          A[m][n] = B[i][j];\n        });\n      });\n      return A;\n    }; // [1,2,3] ->\n    // [[1,0,0],[0,2,0],[0,0,3]]\n\n\n    jStat.diagonal = function diagonal(diagArray) {\n      var mat = jStat.zeros(diagArray.length, diagArray.length);\n      diagArray.forEach(function (t, i) {\n        mat[i][i] = t;\n      });\n      return mat;\n    }; // return copy of A\n\n\n    jStat.copy = function copy(A) {\n      return A.map(function (row) {\n        if (isNumber(row)) return row;\n        return row.map(function (t) {\n          return t;\n        });\n      });\n    }; // TODO: Go over this entire implementation. Seems a tragic waste of resources\n    // doing all this work. Instead, and while ugly, use new Function() to generate\n    // a custom function for each static method.\n    // Quick reference.\n\n\n    var jProto = jStat.prototype; // Default length.\n\n    jProto.length = 0; // For internal use only.\n    // TODO: Check if they're actually used, and if they are then rename them\n    // to _*\n\n    jProto.push = Array.prototype.push;\n    jProto.sort = Array.prototype.sort;\n    jProto.splice = Array.prototype.splice;\n    jProto.slice = Array.prototype.slice; // Return a clean array.\n\n    jProto.toArray = function toArray() {\n      return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n    }; // Map a function to a matrix or vector.\n\n\n    jProto.map = function map(func, toAlter) {\n      return jStat(jStat.map(this, func, toAlter));\n    }; // Cumulatively combine the elements of a matrix or vector using a function.\n\n\n    jProto.cumreduce = function cumreduce(func, toAlter) {\n      return jStat(jStat.cumreduce(this, func, toAlter));\n    }; // Destructively alter an array.\n\n\n    jProto.alter = function alter(func) {\n      jStat.alter(this, func);\n      return this;\n    }; // Extend prototype with methods that have no argument.\n\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function (func) {\n          var self = this,\n              results; // Check for callback.\n\n          if (func) {\n            setTimeout(function () {\n              func.call(self, jProto[passfunc].call(self));\n            });\n            return this;\n          }\n\n          results = jStat[passfunc](this);\n          return isArray(results) ? jStat(results) : results;\n        };\n      })(funcs[i]);\n    })('transpose clear symmetric rows cols dimensions diag antidiag'.split(' ')); // Extend prototype with methods that have one argument.\n\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function (index, func) {\n          var self = this; // check for callback\n\n          if (func) {\n            setTimeout(function () {\n              func.call(self, jProto[passfunc].call(self, index));\n            });\n            return this;\n          }\n\n          return jStat(jStat[passfunc](this, index));\n        };\n      })(funcs[i]);\n    })('row col'.split(' ')); // Extend prototype with simple shortcut methods.\n\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function () {\n          return jStat(jStat[passfunc].apply(null, arguments));\n        };\n      })(funcs[i]);\n    })('create zeros ones rand identity'.split(' ')); // Exposing jStat.\n\n\n    return jStat;\n  }(Math);\n\n  (function (jStat, Math) {\n    var isFunction = jStat.utils.isFunction; // Ascending functions for sort\n\n    function ascNum(a, b) {\n      return a - b;\n    }\n\n    function clip(arg, min, max) {\n      return Math.max(min, Math.min(arg, max));\n    } // sum of an array\n\n\n    jStat.sum = function sum(arr) {\n      var sum = 0;\n      var i = arr.length;\n\n      while (--i >= 0) sum += arr[i];\n\n      return sum;\n    }; // sum squared\n\n\n    jStat.sumsqrd = function sumsqrd(arr) {\n      var sum = 0;\n      var i = arr.length;\n\n      while (--i >= 0) sum += arr[i] * arr[i];\n\n      return sum;\n    }; // sum of squared errors of prediction (SSE)\n\n\n    jStat.sumsqerr = function sumsqerr(arr) {\n      var mean = jStat.mean(arr);\n      var sum = 0;\n      var i = arr.length;\n      var tmp;\n\n      while (--i >= 0) {\n        tmp = arr[i] - mean;\n        sum += tmp * tmp;\n      }\n\n      return sum;\n    }; // sum of an array in each row\n\n\n    jStat.sumrow = function sumrow(arr) {\n      var sum = 0;\n      var i = arr.length;\n\n      while (--i >= 0) sum += arr[i];\n\n      return sum;\n    }; // product of an array\n\n\n    jStat.product = function product(arr) {\n      var prod = 1;\n      var i = arr.length;\n\n      while (--i >= 0) prod *= arr[i];\n\n      return prod;\n    }; // minimum value of an array\n\n\n    jStat.min = function min(arr) {\n      var low = arr[0];\n      var i = 0;\n\n      while (++i < arr.length) if (arr[i] < low) low = arr[i];\n\n      return low;\n    }; // maximum value of an array\n\n\n    jStat.max = function max(arr) {\n      var high = arr[0];\n      var i = 0;\n\n      while (++i < arr.length) if (arr[i] > high) high = arr[i];\n\n      return high;\n    }; // unique values of an array\n\n\n    jStat.unique = function unique(arr) {\n      var hash = {},\n          _arr = [];\n\n      for (var i = 0; i < arr.length; i++) {\n        if (!hash[arr[i]]) {\n          hash[arr[i]] = true;\n\n          _arr.push(arr[i]);\n        }\n      }\n\n      return _arr;\n    }; // mean value of an array\n\n\n    jStat.mean = function mean(arr) {\n      return jStat.sum(arr) / arr.length;\n    }; // mean squared error (MSE)\n\n\n    jStat.meansqerr = function meansqerr(arr) {\n      return jStat.sumsqerr(arr) / arr.length;\n    }; // geometric mean of an array\n\n\n    jStat.geomean = function geomean(arr) {\n      return Math.pow(jStat.product(arr), 1 / arr.length);\n    }; // median of an array\n\n\n    jStat.median = function median(arr) {\n      var arrlen = arr.length;\n\n      var _arr = arr.slice().sort(ascNum); // check if array is even or odd, then return the appropriate\n\n\n      return !(arrlen & 1) ? (_arr[arrlen / 2 - 1] + _arr[arrlen / 2]) / 2 : _arr[arrlen / 2 | 0];\n    }; // cumulative sum of an array\n\n\n    jStat.cumsum = function cumsum(arr) {\n      return jStat.cumreduce(arr, function (a, b) {\n        return a + b;\n      });\n    }; // cumulative product of an array\n\n\n    jStat.cumprod = function cumprod(arr) {\n      return jStat.cumreduce(arr, function (a, b) {\n        return a * b;\n      });\n    }; // successive differences of a sequence\n\n\n    jStat.diff = function diff(arr) {\n      var diffs = [];\n      var arrLen = arr.length;\n      var i;\n\n      for (i = 1; i < arrLen; i++) diffs.push(arr[i] - arr[i - 1]);\n\n      return diffs;\n    }; // ranks of an array\n\n\n    jStat.rank = function (arr) {\n      var arrlen = arr.length;\n      var sorted = arr.slice().sort(ascNum);\n      var ranks = new Array(arrlen);\n      var val;\n\n      for (var i = 0; i < arrlen; i++) {\n        var first = sorted.indexOf(arr[i]);\n        var last = sorted.lastIndexOf(arr[i]);\n\n        if (first === last) {\n          val = first;\n        } else {\n          val = (first + last) / 2;\n        }\n\n        ranks[i] = val + 1;\n      }\n\n      return ranks;\n    }; // mode of an array\n    // if there are multiple modes of an array, return all of them\n    // is this the appropriate way of handling it?\n\n\n    jStat.mode = function mode(arr) {\n      var arrLen = arr.length;\n\n      var _arr = arr.slice().sort(ascNum);\n\n      var count = 1;\n      var maxCount = 0;\n      var numMaxCount = 0;\n      var mode_arr = [];\n      var i;\n\n      for (i = 0; i < arrLen; i++) {\n        if (_arr[i] === _arr[i + 1]) {\n          count++;\n        } else {\n          if (count > maxCount) {\n            mode_arr = [_arr[i]];\n            maxCount = count;\n            numMaxCount = 0;\n          } // are there multiple max counts\n          else if (count === maxCount) {\n              mode_arr.push(_arr[i]);\n              numMaxCount++;\n            } // resetting count for new value in array\n\n\n          count = 1;\n        }\n      }\n\n      return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n    }; // range of an array\n\n\n    jStat.range = function range(arr) {\n      return jStat.max(arr) - jStat.min(arr);\n    }; // variance of an array\n    // flag = true indicates sample instead of population\n\n\n    jStat.variance = function variance(arr, flag) {\n      return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n    }; // pooled variance of an array of arrays\n\n\n    jStat.pooledvariance = function pooledvariance(arr) {\n      var sumsqerr = arr.reduce(function (a, samples) {\n        return a + jStat.sumsqerr(samples);\n      }, 0);\n      var count = arr.reduce(function (a, samples) {\n        return a + samples.length;\n      }, 0);\n      return sumsqerr / (count - arr.length);\n    }; // deviation of an array\n\n\n    jStat.deviation = function (arr) {\n      var mean = jStat.mean(arr);\n      var arrlen = arr.length;\n      var dev = new Array(arrlen);\n\n      for (var i = 0; i < arrlen; i++) {\n        dev[i] = arr[i] - mean;\n      }\n\n      return dev;\n    }; // standard deviation of an array\n    // flag = true indicates sample instead of population\n\n\n    jStat.stdev = function stdev(arr, flag) {\n      return Math.sqrt(jStat.variance(arr, flag));\n    }; // pooled standard deviation of an array of arrays\n\n\n    jStat.pooledstdev = function pooledstdev(arr) {\n      return Math.sqrt(jStat.pooledvariance(arr));\n    }; // mean deviation (mean absolute deviation) of an array\n\n\n    jStat.meandev = function meandev(arr) {\n      var mean = jStat.mean(arr);\n      var a = [];\n\n      for (var i = arr.length - 1; i >= 0; i--) {\n        a.push(Math.abs(arr[i] - mean));\n      }\n\n      return jStat.mean(a);\n    }; // median deviation (median absolute deviation) of an array\n\n\n    jStat.meddev = function meddev(arr) {\n      var median = jStat.median(arr);\n      var a = [];\n\n      for (var i = arr.length - 1; i >= 0; i--) {\n        a.push(Math.abs(arr[i] - median));\n      }\n\n      return jStat.median(a);\n    }; // coefficient of variation\n\n\n    jStat.coeffvar = function coeffvar(arr) {\n      return jStat.stdev(arr) / jStat.mean(arr);\n    }; // quartiles of an array\n\n\n    jStat.quartiles = function quartiles(arr) {\n      var arrlen = arr.length;\n\n      var _arr = arr.slice().sort(ascNum);\n\n      return [_arr[Math.round(arrlen / 4) - 1], _arr[Math.round(arrlen / 2) - 1], _arr[Math.round(arrlen * 3 / 4) - 1]];\n    }; // Arbitary quantiles of an array. Direct port of the scipy.stats\n    // implementation by Pierre GF Gerard-Marchant.\n\n\n    jStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n      var sortedArray = arr.slice().sort(ascNum);\n      var quantileVals = [quantilesArray.length];\n      var n = arr.length;\n      var i, p, m, aleph, k, gamma;\n      if (typeof alphap === 'undefined') alphap = 3 / 8;\n      if (typeof betap === 'undefined') betap = 3 / 8;\n\n      for (i = 0; i < quantilesArray.length; i++) {\n        p = quantilesArray[i];\n        m = alphap + p * (1 - alphap - betap);\n        aleph = n * p + m;\n        k = Math.floor(clip(aleph, 1, n - 1));\n        gamma = clip(aleph - k, 0, 1);\n        quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n      }\n\n      return quantileVals;\n    }; // Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n    // Passing true for the exclusive parameter excludes both endpoints of the range.\n\n\n    jStat.percentile = function percentile(arr, k, exclusive) {\n      var _arr = arr.slice().sort(ascNum);\n\n      var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n      var index = parseInt(realIndex);\n      var frac = realIndex - index;\n\n      if (index + 1 < _arr.length) {\n        return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n      } else {\n        return _arr[index - 1];\n      }\n    }; // The percentile rank of score in a given array. Returns the percentage\n    // of all values in the input array that are less than (kind='strict') or\n    // less or equal than (kind='weak') score. Default is weak.\n\n\n    jStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n      var counter = 0;\n      var len = arr.length;\n      var strict = false;\n      var value, i;\n      if (kind === 'strict') strict = true;\n\n      for (i = 0; i < len; i++) {\n        value = arr[i];\n\n        if (strict && value < score || !strict && value <= score) {\n          counter++;\n        }\n      }\n\n      return counter / len;\n    }; // Histogram (bin count) data\n\n\n    jStat.histogram = function histogram(arr, binCnt) {\n      binCnt = binCnt || 4;\n      var first = jStat.min(arr);\n      var binWidth = (jStat.max(arr) - first) / binCnt;\n      var len = arr.length;\n      var bins = [];\n      var i;\n\n      for (i = 0; i < binCnt; i++) bins[i] = 0;\n\n      for (i = 0; i < len; i++) bins[Math.min(Math.floor((arr[i] - first) / binWidth), binCnt - 1)] += 1;\n\n      return bins;\n    }; // covariance of two arrays\n\n\n    jStat.covariance = function covariance(arr1, arr2) {\n      var u = jStat.mean(arr1);\n      var v = jStat.mean(arr2);\n      var arr1Len = arr1.length;\n      var sq_dev = new Array(arr1Len);\n      var i;\n\n      for (i = 0; i < arr1Len; i++) sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n      return jStat.sum(sq_dev) / (arr1Len - 1);\n    }; // (pearson's) population correlation coefficient, rho\n\n\n    jStat.corrcoeff = function corrcoeff(arr1, arr2) {\n      return jStat.covariance(arr1, arr2) / jStat.stdev(arr1, 1) / jStat.stdev(arr2, 1);\n    }; // (spearman's) rank correlation coefficient, sp\n\n\n    jStat.spearmancoeff = function (arr1, arr2) {\n      arr1 = jStat.rank(arr1);\n      arr2 = jStat.rank(arr2); //return pearson's correlation of the ranks:\n\n      return jStat.corrcoeff(arr1, arr2);\n    }; // statistical standardized moments (general form of skew/kurt)\n\n\n    jStat.stanMoment = function stanMoment(arr, n) {\n      var mu = jStat.mean(arr);\n      var sigma = jStat.stdev(arr);\n      var len = arr.length;\n      var skewSum = 0;\n\n      for (var i = 0; i < len; i++) skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n      return skewSum / arr.length;\n    }; // (pearson's) moment coefficient of skewness\n\n\n    jStat.skewness = function skewness(arr) {\n      return jStat.stanMoment(arr, 3);\n    }; // (pearson's) (excess) kurtosis\n\n\n    jStat.kurtosis = function kurtosis(arr) {\n      return jStat.stanMoment(arr, 4) - 3;\n    };\n\n    var jProto = jStat.prototype; // Extend jProto with method for calculating cumulative sums and products.\n    // This differs from the similar extension below as cumsum and cumprod should\n    // not be run again in the case fullbool === true.\n    // If a matrix is passed, automatically assume operation should be done on the\n    // columns.\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        // If a matrix is passed, automatically assume operation should be done on\n        // the columns.\n        jProto[passfunc] = function (fullbool, func) {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this; // Assignment reassignation depending on how parameters were passed in.\n\n          if (isFunction(fullbool)) {\n            func = fullbool;\n            fullbool = false;\n          } // Check if a callback was passed with the function.\n\n\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n            });\n            return this;\n          } // Check if matrix and run calculations.\n\n\n          if (this.length > 1) {\n            tmpthis = fullbool === true ? this : this.transpose();\n\n            for (; i < tmpthis.length; i++) arr[i] = jStat[passfunc](tmpthis[i]);\n\n            return arr;\n          } // Pass fullbool if only vector, not a matrix. for variance and stdev.\n\n\n          return jStat[passfunc](this[0], fullbool);\n        };\n      })(funcs[i]);\n    })('cumsum cumprod'.split(' ')); // Extend jProto with methods which don't require arguments and work on columns.\n\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        // If a matrix is passed, automatically assume operation should be done on\n        // the columns.\n        jProto[passfunc] = function (fullbool, func) {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this; // Assignment reassignation depending on how parameters were passed in.\n\n          if (isFunction(fullbool)) {\n            func = fullbool;\n            fullbool = false;\n          } // Check if a callback was passed with the function.\n\n\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n            });\n            return this;\n          } // Check if matrix and run calculations.\n\n\n          if (this.length > 1) {\n            if (passfunc !== 'sumrow') tmpthis = fullbool === true ? this : this.transpose();\n\n            for (; i < tmpthis.length; i++) arr[i] = jStat[passfunc](tmpthis[i]);\n\n            return fullbool === true ? jStat[passfunc](jStat.utils.toVector(arr)) : arr;\n          } // Pass fullbool if only vector, not a matrix. for variance and stdev.\n\n\n          return jStat[passfunc](this[0], fullbool);\n        };\n      })(funcs[i]);\n    })(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' + 'geomean median diff rank mode range variance deviation stdev meandev ' + 'meddev coeffvar quartiles histogram skewness kurtosis').split(' ')); // Extend jProto with functions that take arguments. Operations on matrices are\n    // done on columns.\n\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jProto[passfunc] = function () {\n          var arr = [];\n          var i = 0;\n          var tmpthis = this;\n          var args = Array.prototype.slice.call(arguments);\n          var callbackFunction; // If the last argument is a function, we assume it's a callback; we\n          // strip the callback out and call the function again.\n\n          if (isFunction(args[args.length - 1])) {\n            callbackFunction = args[args.length - 1];\n            var argsToPass = args.slice(0, args.length - 1);\n            setTimeout(function () {\n              callbackFunction.call(tmpthis, jProto[passfunc].apply(tmpthis, argsToPass));\n            });\n            return this; // Otherwise we curry the function args and call normally.\n          } else {\n            callbackFunction = undefined;\n\n            var curriedFunction = function curriedFunction(vector) {\n              return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n            };\n          } // If this is a matrix, run column-by-column.\n\n\n          if (this.length > 1) {\n            tmpthis = tmpthis.transpose();\n\n            for (; i < tmpthis.length; i++) arr[i] = curriedFunction(tmpthis[i]);\n\n            return arr;\n          } // Otherwise run on the vector.\n\n\n          return curriedFunction(this[0]);\n        };\n      })(funcs[i]);\n    })('quantiles percentileOfScore'.split(' '));\n  })(jStat, Math); // Special functions //\n\n\n  (function (jStat, Math) {\n    // Log-gamma function\n    jStat.gammaln = function gammaln(x) {\n      var j = 0;\n      var cof = [76.18009172947146, -86.50532032941677, 24.01409824083091, -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5];\n      var ser = 1.000000000190015;\n      var xx, y, tmp;\n      tmp = (y = xx = x) + 5.5;\n      tmp -= (xx + 0.5) * Math.log(tmp);\n\n      for (; j < 6; j++) ser += cof[j] / ++y;\n\n      return Math.log(2.5066282746310005 * ser / xx) - tmp;\n    }; // gamma of x\n\n\n    jStat.gammafn = function gammafn(x) {\n      var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563, 629.3311553128184, 866.9662027904133, -31451.272968848367, -36144.413418691176, 66456.14382024054];\n      var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192, -3107.771671572311, 22538.118420980151, 4755.8462775278811, -134659.9598649693, -115132.2596755535];\n      var fact = false;\n      var n = 0;\n      var xden = 0;\n      var xnum = 0;\n      var y = x;\n      var i, z, yi, res;\n\n      if (y <= 0) {\n        res = y % 1 + 3.6e-16;\n\n        if (res) {\n          fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n          y = 1 - y;\n        } else {\n          return Infinity;\n        }\n      }\n\n      yi = y;\n\n      if (y < 1) {\n        z = y++;\n      } else {\n        z = (y -= n = (y | 0) - 1) - 1;\n      }\n\n      for (i = 0; i < 8; ++i) {\n        xnum = (xnum + p[i]) * z;\n        xden = xden * z + q[i];\n      }\n\n      res = xnum / xden + 1;\n\n      if (yi < y) {\n        res /= yi;\n      } else if (yi > y) {\n        for (i = 0; i < n; ++i) {\n          res *= y;\n          y++;\n        }\n      }\n\n      if (fact) {\n        res = fact / res;\n      }\n\n      return res;\n    }; // lower incomplete gamma function, which is usually typeset with a\n    // lower-case greek gamma as the function symbol\n\n\n    jStat.gammap = function gammap(a, x) {\n      return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n    }; // The lower regularized incomplete gamma function, usually written P(a,x)\n\n\n    jStat.lowRegGamma = function lowRegGamma(a, x) {\n      var aln = jStat.gammaln(a);\n      var ap = a;\n      var sum = 1 / a;\n      var del = sum;\n      var b = x + 1 - a;\n      var c = 1 / 1.0e-30;\n      var d = 1 / b;\n      var h = d;\n      var i = 1; // calculate maximum number of itterations required for a\n\n      var ITMAX = -~(Math.log(a >= 1 ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n      var an;\n\n      if (x < 0 || a <= 0) {\n        return NaN;\n      } else if (x < a + 1) {\n        for (; i <= ITMAX; i++) {\n          sum += del *= x / ++ap;\n        }\n\n        return sum * Math.exp(-x + a * Math.log(x) - aln);\n      }\n\n      for (; i <= ITMAX; i++) {\n        an = -i * (i - a);\n        b += 2;\n        d = an * d + b;\n        c = b + an / c;\n        d = 1 / d;\n        h *= d * c;\n      }\n\n      return 1 - h * Math.exp(-x + a * Math.log(x) - aln);\n    }; // natural log factorial of n\n\n\n    jStat.factorialln = function factorialln(n) {\n      return n < 0 ? NaN : jStat.gammaln(n + 1);\n    }; // factorial of n\n\n\n    jStat.factorial = function factorial(n) {\n      return n < 0 ? NaN : jStat.gammafn(n + 1);\n    }; // combinations of n, m\n\n\n    jStat.combination = function combination(n, m) {\n      // make sure n or m don't exceed the upper limit of usable values\n      return n > 170 || m > 170 ? Math.exp(jStat.combinationln(n, m)) : jStat.factorial(n) / jStat.factorial(m) / jStat.factorial(n - m);\n    };\n\n    jStat.combinationln = function combinationln(n, m) {\n      return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n    }; // permutations of n, m\n\n\n    jStat.permutation = function permutation(n, m) {\n      return jStat.factorial(n) / jStat.factorial(n - m);\n    }; // beta function\n\n\n    jStat.betafn = function betafn(x, y) {\n      // ensure arguments are positive\n      if (x <= 0 || y <= 0) return undefined; // make sure x + y doesn't exceed the upper limit of usable values\n\n      return x + y > 170 ? Math.exp(jStat.betaln(x, y)) : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n    }; // natural logarithm of beta function\n\n\n    jStat.betaln = function betaln(x, y) {\n      return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n    }; // Evaluates the continued fraction for incomplete beta function by modified\n    // Lentz's method.\n\n\n    jStat.betacf = function betacf(x, a, b) {\n      var fpmin = 1e-30;\n      var m = 1;\n      var qab = a + b;\n      var qap = a + 1;\n      var qam = a - 1;\n      var c = 1;\n      var d = 1 - qab * x / qap;\n      var m2, aa, del, h; // These q's will be used in factors that occur in the coefficients\n\n      if (Math.abs(d) < fpmin) d = fpmin;\n      d = 1 / d;\n      h = d;\n\n      for (; m <= 100; m++) {\n        m2 = 2 * m;\n        aa = m * (b - m) * x / ((qam + m2) * (a + m2)); // One step (the even one) of the recurrence\n\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin) d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin) c = fpmin;\n        d = 1 / d;\n        h *= d * c;\n        aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2)); // Next step of the recurrence (the odd one)\n\n        d = 1 + aa * d;\n        if (Math.abs(d) < fpmin) d = fpmin;\n        c = 1 + aa / c;\n        if (Math.abs(c) < fpmin) c = fpmin;\n        d = 1 / d;\n        del = d * c;\n        h *= del;\n        if (Math.abs(del - 1.0) < 3e-7) break;\n      }\n\n      return h;\n    }; // Returns the inverse of the lower regularized inomplete gamma function\n\n\n    jStat.gammapinv = function gammapinv(p, a) {\n      var j = 0;\n      var a1 = a - 1;\n      var EPS = 1e-8;\n      var gln = jStat.gammaln(a);\n      var x, err, t, u, pp, lna1, afac;\n      if (p >= 1) return Math.max(100, a + 100 * Math.sqrt(a));\n      if (p <= 0) return 0;\n\n      if (a > 1) {\n        lna1 = Math.log(a1);\n        afac = Math.exp(a1 * (lna1 - 1) - gln);\n        pp = p < 0.5 ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5) x = -x;\n        x = Math.max(1e-3, a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n      } else {\n        t = 1 - a * (0.253 + a * 0.12);\n        if (p < t) x = Math.pow(p / t, 1 / a);else x = 1 - Math.log(1 - (p - t) / (1 - t));\n      }\n\n      for (; j < 12; j++) {\n        if (x <= 0) return 0;\n        err = jStat.lowRegGamma(a, x) - p;\n        if (a > 1) t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));else t = Math.exp(-x + a1 * Math.log(x) - gln);\n        u = err / t;\n        x -= t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1)));\n        if (x <= 0) x = 0.5 * (x + t);\n        if (Math.abs(t) < EPS * x) break;\n      }\n\n      return x;\n    }; // Returns the error function erf(x)\n\n\n    jStat.erf = function erf(x) {\n      var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2, -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4, 4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6, 1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8, 6.529054439e-9, 5.059343495e-9, -9.91364156e-10, -2.27365122e-10, 9.6467911e-11, 2.394038e-12, -6.886027e-12, 8.94487e-13, 3.13092e-13, -1.12708e-13, 3.81e-16, 7.106e-15, -1.523e-15, -9.4e-17, 1.21e-16, -2.8e-17];\n      var j = cof.length - 1;\n      var isneg = false;\n      var d = 0;\n      var dd = 0;\n      var t, ty, tmp, res;\n\n      if (x < 0) {\n        x = -x;\n        isneg = true;\n      }\n\n      t = 2 / (2 + x);\n      ty = 4 * t - 2;\n\n      for (; j > 0; j--) {\n        tmp = d;\n        d = ty * d - dd + cof[j];\n        dd = tmp;\n      }\n\n      res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n      return isneg ? res - 1 : 1 - res;\n    }; // Returns the complmentary error function erfc(x)\n\n\n    jStat.erfc = function erfc(x) {\n      return 1 - jStat.erf(x);\n    }; // Returns the inverse of the complementary error function\n\n\n    jStat.erfcinv = function erfcinv(p) {\n      var j = 0;\n      var x, err, t, pp;\n      if (p >= 2) return -100;\n      if (p <= 0) return 100;\n      pp = p < 1 ? p : 2 - p;\n      t = Math.sqrt(-2 * Math.log(pp / 2));\n      x = -0.70711 * ((2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t);\n\n      for (; j < 2; j++) {\n        err = jStat.erfc(x) - pp;\n        x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n      }\n\n      return p < 1 ? x : -x;\n    }; // Returns the inverse of the incomplete beta function\n\n\n    jStat.ibetainv = function ibetainv(p, a, b) {\n      var EPS = 1e-8;\n      var a1 = a - 1;\n      var b1 = b - 1;\n      var j = 0;\n      var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n      if (p <= 0) return 0;\n      if (p >= 1) return 1;\n\n      if (a >= 1 && b >= 1) {\n        pp = p < 0.5 ? p : 1 - p;\n        t = Math.sqrt(-2 * Math.log(pp));\n        x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n        if (p < 0.5) x = -x;\n        al = (x * x - 3) / 6;\n        h = 2 / (1 / (2 * a - 1) + 1 / (2 * b - 1));\n        w = x * Math.sqrt(al + h) / h - (1 / (2 * b - 1) - 1 / (2 * a - 1)) * (al + 5 / 6 - 2 / (3 * h));\n        x = a / (a + b * Math.exp(2 * w));\n      } else {\n        lna = Math.log(a / (a + b));\n        lnb = Math.log(b / (a + b));\n        t = Math.exp(a * lna) / a;\n        u = Math.exp(b * lnb) / b;\n        w = t + u;\n        if (p < t / w) x = Math.pow(a * w * p, 1 / a);else x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n      }\n\n      afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n\n      for (; j < 10; j++) {\n        if (x === 0 || x === 1) return x;\n        err = jStat.ibeta(x, a, b) - p;\n        t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n        u = err / t;\n        x -= t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x))));\n        if (x <= 0) x = 0.5 * (x + t);\n        if (x >= 1) x = 0.5 * (x + t + 1);\n        if (Math.abs(t) < EPS * x && j > 0) break;\n      }\n\n      return x;\n    }; // Returns the incomplete beta function I_x(a,b)\n\n\n    jStat.ibeta = function ibeta(x, a, b) {\n      // Factors in front of the continued fraction.\n      var bt = x === 0 || x === 1 ? 0 : Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) - jStat.gammaln(b) + a * Math.log(x) + b * Math.log(1 - x));\n      if (x < 0 || x > 1) return false;\n      if (x < (a + 1) / (a + b + 2)) // Use continued fraction directly.\n        return bt * jStat.betacf(x, a, b) / a; // else use continued fraction after making the symmetry transformation.\n\n      return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n    }; // Returns a normal deviate (mu=0, sigma=1).\n    // If n and m are specified it returns a object of normal deviates.\n\n\n    jStat.randn = function randn(n, m) {\n      var u, v, x, y, q;\n      if (!m) m = n;\n      if (n) return jStat.create(n, m, function () {\n        return jStat.randn();\n      });\n\n      do {\n        u = jStat._random_fn();\n        v = 1.7156 * (jStat._random_fn() - 0.5);\n        x = u - 0.449871;\n        y = Math.abs(v) + 0.386595;\n        q = x * x + y * (0.19600 * y - 0.25472 * x);\n      } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n\n      return v / u;\n    }; // Returns a gamma deviate by the method of Marsaglia and Tsang.\n\n\n    jStat.randg = function randg(shape, n, m) {\n      var oalph = shape;\n      var a1, a2, u, v, x, mat;\n      if (!m) m = n;\n      if (!shape) shape = 1;\n\n      if (n) {\n        mat = jStat.zeros(n, m);\n        mat.alter(function () {\n          return jStat.randg(shape);\n        });\n        return mat;\n      }\n\n      if (shape < 1) shape += 1;\n      a1 = shape - 1 / 3;\n      a2 = 1 / Math.sqrt(9 * a1);\n\n      do {\n        do {\n          x = jStat.randn();\n          v = 1 + a2 * x;\n        } while (v <= 0);\n\n        v = v * v * v;\n        u = jStat._random_fn();\n      } while (u > 1 - 0.331 * Math.pow(x, 4) && Math.log(u) > 0.5 * x * x + a1 * (1 - v + Math.log(v))); // alpha > 1\n\n\n      if (shape == oalph) return a1 * v; // alpha < 1\n\n      do {\n        u = jStat._random_fn();\n      } while (u === 0);\n\n      return Math.pow(u, 1 / oalph) * a1 * v;\n    }; // making use of static methods on the instance\n\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function () {\n          return jStat(jStat.map(this, function (value) {\n            return jStat[passfunc](value);\n          }));\n        };\n      })(funcs[i]);\n    })('gammaln gammafn factorial factorialln'.split(' '));\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function () {\n          return jStat(jStat[passfunc].apply(null, arguments));\n        };\n      })(funcs[i]);\n    })('randn'.split(' '));\n  })(jStat, Math);\n\n  (function (jStat, Math) {\n    // generate all distribution instance methods\n    (function (list) {\n      for (var i = 0; i < list.length; i++) (function (func) {\n        // distribution instance method\n        jStat[func] = function (a, b, c) {\n          if (!(this instanceof arguments.callee)) return new arguments.callee(a, b, c);\n          this._a = a;\n          this._b = b;\n          this._c = c;\n          return this;\n        }; // distribution method to be used on a jStat instance\n\n\n        jStat.fn[func] = function (a, b, c) {\n          var newthis = jStat[func](a, b, c);\n          newthis.data = this;\n          return newthis;\n        }; // sample instance method\n\n\n        jStat[func].prototype.sample = function (arr) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (arr) return jStat.alter(arr, function () {\n            return jStat[func].sample(a, b, c);\n          });else return jStat[func].sample(a, b, c);\n        }; // generate the pdf, cdf and inv instance methods\n\n\n        (function (vals) {\n          for (var i = 0; i < vals.length; i++) (function (fnfunc) {\n            jStat[func].prototype[fnfunc] = function (x) {\n              var a = this._a;\n              var b = this._b;\n              var c = this._c;\n              if (!x && x !== 0) x = this.data;\n\n              if (typeof x !== 'number') {\n                return jStat.fn.map.call(x, function (x) {\n                  return jStat[func][fnfunc](x, a, b, c);\n                });\n              }\n\n              return jStat[func][fnfunc](x, a, b, c);\n            };\n          })(vals[i]);\n        })('pdf cdf inv'.split(' ')); // generate the mean, median, mode and variance instance methods\n\n\n        (function (vals) {\n          for (var i = 0; i < vals.length; i++) (function (fnfunc) {\n            jStat[func].prototype[fnfunc] = function () {\n              return jStat[func][fnfunc](this._a, this._b, this._c);\n            };\n          })(vals[i]);\n        })('mean median mode variance'.split(' '));\n      })(list[i]);\n    })(('beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' + 'laplace lognormal noncentralt normal pareto studentt weibull uniform ' + 'binomial negbin hypgeom poisson triangular tukey arcsine').split(' ')); // extend beta function with static methods\n\n\n    jStat.extend(jStat.beta, {\n      pdf: function pdf(x, alpha, beta) {\n        // PDF is zero outside the support\n        if (x > 1 || x < 0) return 0; // PDF is one for the uniform case\n\n        if (alpha == 1 && beta == 1) return 1;\n\n        if (alpha < 512 && beta < 512) {\n          return Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1) / jStat.betafn(alpha, beta);\n        } else {\n          return Math.exp((alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - x) - jStat.betaln(alpha, beta));\n        }\n      },\n      cdf: function cdf(x, alpha, beta) {\n        return x > 1 || x < 0 ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n      },\n      inv: function inv(x, alpha, beta) {\n        return jStat.ibetainv(x, alpha, beta);\n      },\n      mean: function mean(alpha, beta) {\n        return alpha / (alpha + beta);\n      },\n      median: function median(alpha, beta) {\n        return jStat.ibetainv(0.5, alpha, beta);\n      },\n      mode: function mode(alpha, beta) {\n        return (alpha - 1) / (alpha + beta - 2);\n      },\n      // return a random sample\n      sample: function sample(alpha, beta) {\n        var u = jStat.randg(alpha);\n        return u / (u + jStat.randg(beta));\n      },\n      variance: function variance(alpha, beta) {\n        return alpha * beta / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n      }\n    }); // extend F function with static methods\n\n    jStat.extend(jStat.centralF, {\n      // This implementation of the pdf function avoids float overflow\n      // See the way that R calculates this value:\n      // https://svn.r-project.org/R/trunk/src/nmath/df.c\n      pdf: function pdf(x, df1, df2) {\n        var p, q, f;\n        if (x < 0) return 0;\n\n        if (df1 <= 2) {\n          if (x === 0 && df1 < 2) {\n            return Infinity;\n          }\n\n          if (x === 0 && df1 === 2) {\n            return 1;\n          }\n\n          return 1 / jStat.betafn(df1 / 2, df2 / 2) * Math.pow(df1 / df2, df1 / 2) * Math.pow(x, df1 / 2 - 1) * Math.pow(1 + df1 / df2 * x, -(df1 + df2) / 2);\n        }\n\n        p = df1 * x / (df2 + x * df1);\n        q = df2 / (df2 + x * df1);\n        f = df1 * q / 2.0;\n        return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n      },\n      cdf: function cdf(x, df1, df2) {\n        if (x < 0) return 0;\n        return jStat.ibeta(df1 * x / (df1 * x + df2), df1 / 2, df2 / 2);\n      },\n      inv: function inv(x, df1, df2) {\n        return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n      },\n      mean: function mean(df1, df2) {\n        return df2 > 2 ? df2 / (df2 - 2) : undefined;\n      },\n      mode: function mode(df1, df2) {\n        return df1 > 2 ? df2 * (df1 - 2) / (df1 * (df2 + 2)) : undefined;\n      },\n      // return a random sample\n      sample: function sample(df1, df2) {\n        var x1 = jStat.randg(df1 / 2) * 2;\n        var x2 = jStat.randg(df2 / 2) * 2;\n        return x1 / df1 / (x2 / df2);\n      },\n      variance: function variance(df1, df2) {\n        if (df2 <= 4) return undefined;\n        return 2 * df2 * df2 * (df1 + df2 - 2) / (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n      }\n    }); // extend cauchy function with static methods\n\n    jStat.extend(jStat.cauchy, {\n      pdf: function pdf(x, local, scale) {\n        if (scale < 0) {\n          return 0;\n        }\n\n        return scale / (Math.pow(x - local, 2) + Math.pow(scale, 2)) / Math.PI;\n      },\n      cdf: function cdf(x, local, scale) {\n        return Math.atan((x - local) / scale) / Math.PI + 0.5;\n      },\n      inv: function (p, local, scale) {\n        return local + scale * Math.tan(Math.PI * (p - 0.5));\n      },\n      median: function median(local\n      /*, scale*/\n      ) {\n        return local;\n      },\n      mode: function mode(local\n      /*, scale*/\n      ) {\n        return local;\n      },\n      sample: function sample(local, scale) {\n        return jStat.randn() * Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n      }\n    }); // extend chisquare function with static methods\n\n    jStat.extend(jStat.chisquare, {\n      pdf: function pdf(x, dof) {\n        if (x < 0) return 0;\n        return x === 0 && dof === 2 ? 0.5 : Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - dof / 2 * Math.log(2) - jStat.gammaln(dof / 2));\n      },\n      cdf: function cdf(x, dof) {\n        if (x < 0) return 0;\n        return jStat.lowRegGamma(dof / 2, x / 2);\n      },\n      inv: function (p, dof) {\n        return 2 * jStat.gammapinv(p, 0.5 * dof);\n      },\n      mean: function (dof) {\n        return dof;\n      },\n      // TODO: this is an approximation (is there a better way?)\n      median: function median(dof) {\n        return dof * Math.pow(1 - 2 / (9 * dof), 3);\n      },\n      mode: function mode(dof) {\n        return dof - 2 > 0 ? dof - 2 : 0;\n      },\n      sample: function sample(dof) {\n        return jStat.randg(dof / 2) * 2;\n      },\n      variance: function variance(dof) {\n        return 2 * dof;\n      }\n    }); // extend exponential function with static methods\n\n    jStat.extend(jStat.exponential, {\n      pdf: function pdf(x, rate) {\n        return x < 0 ? 0 : rate * Math.exp(-rate * x);\n      },\n      cdf: function cdf(x, rate) {\n        return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n      },\n      inv: function (p, rate) {\n        return -Math.log(1 - p) / rate;\n      },\n      mean: function (rate) {\n        return 1 / rate;\n      },\n      median: function (rate) {\n        return 1 / rate * Math.log(2);\n      },\n      mode: function mode()\n      /*rate*/\n      {\n        return 0;\n      },\n      sample: function sample(rate) {\n        return -1 / rate * Math.log(jStat._random_fn());\n      },\n      variance: function (rate) {\n        return Math.pow(rate, -2);\n      }\n    }); // extend gamma function with static methods\n\n    jStat.extend(jStat.gamma, {\n      pdf: function pdf(x, shape, scale) {\n        if (x < 0) return 0;\n        return x === 0 && shape === 1 ? 1 / scale : Math.exp((shape - 1) * Math.log(x) - x / scale - jStat.gammaln(shape) - shape * Math.log(scale));\n      },\n      cdf: function cdf(x, shape, scale) {\n        if (x < 0) return 0;\n        return jStat.lowRegGamma(shape, x / scale);\n      },\n      inv: function (p, shape, scale) {\n        return jStat.gammapinv(p, shape) * scale;\n      },\n      mean: function (shape, scale) {\n        return shape * scale;\n      },\n      mode: function mode(shape, scale) {\n        if (shape > 1) return (shape - 1) * scale;\n        return undefined;\n      },\n      sample: function sample(shape, scale) {\n        return jStat.randg(shape) * scale;\n      },\n      variance: function variance(shape, scale) {\n        return shape * scale * scale;\n      }\n    }); // extend inverse gamma function with static methods\n\n    jStat.extend(jStat.invgamma, {\n      pdf: function pdf(x, shape, scale) {\n        if (x <= 0) return 0;\n        return Math.exp(-(shape + 1) * Math.log(x) - scale / x - jStat.gammaln(shape) + shape * Math.log(scale));\n      },\n      cdf: function cdf(x, shape, scale) {\n        if (x <= 0) return 0;\n        return 1 - jStat.lowRegGamma(shape, scale / x);\n      },\n      inv: function (p, shape, scale) {\n        return scale / jStat.gammapinv(1 - p, shape);\n      },\n      mean: function (shape, scale) {\n        return shape > 1 ? scale / (shape - 1) : undefined;\n      },\n      mode: function mode(shape, scale) {\n        return scale / (shape + 1);\n      },\n      sample: function sample(shape, scale) {\n        return scale / jStat.randg(shape);\n      },\n      variance: function variance(shape, scale) {\n        if (shape <= 2) return undefined;\n        return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n      }\n    }); // extend kumaraswamy function with static methods\n\n    jStat.extend(jStat.kumaraswamy, {\n      pdf: function pdf(x, alpha, beta) {\n        if (x === 0 && alpha === 1) return beta;else if (x === 1 && beta === 1) return alpha;\n        return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) * Math.log(x) + (beta - 1) * Math.log(1 - Math.pow(x, alpha)));\n      },\n      cdf: function cdf(x, alpha, beta) {\n        if (x < 0) return 0;else if (x > 1) return 1;\n        return 1 - Math.pow(1 - Math.pow(x, alpha), beta);\n      },\n      inv: function inv(p, alpha, beta) {\n        return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n      },\n      mean: function (alpha, beta) {\n        return beta * jStat.gammafn(1 + 1 / alpha) * jStat.gammafn(beta) / jStat.gammafn(1 + 1 / alpha + beta);\n      },\n      median: function median(alpha, beta) {\n        return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n      },\n      mode: function mode(alpha, beta) {\n        if (!(alpha >= 1 && beta >= 1 && alpha !== 1 && beta !== 1)) return undefined;\n        return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n      },\n      variance: function variance()\n      /*alpha, beta*/\n      {\n        throw new Error('variance not yet implemented'); // TODO: complete this\n      }\n    }); // extend lognormal function with static methods\n\n    jStat.extend(jStat.lognormal, {\n      pdf: function pdf(x, mu, sigma) {\n        if (x <= 0) return 0;\n        return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) - Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) / (2 * sigma * sigma));\n      },\n      cdf: function cdf(x, mu, sigma) {\n        if (x < 0) return 0;\n        return 0.5 + 0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma));\n      },\n      inv: function (p, mu, sigma) {\n        return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n      },\n      mean: function mean(mu, sigma) {\n        return Math.exp(mu + sigma * sigma / 2);\n      },\n      median: function median(mu\n      /*, sigma*/\n      ) {\n        return Math.exp(mu);\n      },\n      mode: function mode(mu, sigma) {\n        return Math.exp(mu - sigma * sigma);\n      },\n      sample: function sample(mu, sigma) {\n        return Math.exp(jStat.randn() * sigma + mu);\n      },\n      variance: function variance(mu, sigma) {\n        return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n      }\n    }); // extend noncentralt function with static methods\n\n    jStat.extend(jStat.noncentralt, {\n      pdf: function pdf(x, dof, ncp) {\n        var tol = 1e-14;\n        if (Math.abs(ncp) < tol) // ncp approx 0; use student-t\n          return jStat.studentt.pdf(x, dof);\n\n        if (Math.abs(x) < tol) {\n          // different formula for x == 0\n          return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 - 0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n        } // formula for x != 0\n\n\n        return dof / x * (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof + 2, ncp) - jStat.noncentralt.cdf(x, dof, ncp));\n      },\n      cdf: function cdf(x, dof, ncp) {\n        var tol = 1e-14;\n        var min_iterations = 200;\n        if (Math.abs(ncp) < tol) // ncp approx 0; use student-t\n          return jStat.studentt.cdf(x, dof); // turn negative x into positive and flip result afterwards\n\n        var flip = false;\n\n        if (x < 0) {\n          flip = true;\n          ncp = -ncp;\n        }\n\n        var prob = jStat.normal.cdf(-ncp, 0, 1);\n        var value = tol + 1; // use value at last two steps to determine convergence\n\n        var lastvalue = value;\n        var y = x * x / (x * x + dof);\n        var j = 0;\n        var p = Math.exp(-ncp * ncp / 2);\n        var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) - jStat.gammaln(3 / 2)) * ncp;\n\n        while (j < min_iterations || lastvalue > tol || value > tol) {\n          lastvalue = value;\n\n          if (j > 0) {\n            p *= ncp * ncp / (2 * j);\n            q *= ncp * ncp / (2 * (j + 1 / 2));\n          }\n\n          value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) + q * jStat.beta.cdf(y, j + 1, dof / 2);\n          prob += 0.5 * value;\n          j++;\n        }\n\n        return flip ? 1 - prob : prob;\n      }\n    }); // extend normal function with static methods\n\n    jStat.extend(jStat.normal, {\n      pdf: function pdf(x, mean, std) {\n        return Math.exp(-0.5 * Math.log(2 * Math.PI) - Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n      },\n      cdf: function cdf(x, mean, std) {\n        return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n      },\n      inv: function (p, mean, std) {\n        return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n      },\n      mean: function (mean\n      /*, std*/\n      ) {\n        return mean;\n      },\n      median: function median(mean\n      /*, std*/\n      ) {\n        return mean;\n      },\n      mode: function (mean\n      /*, std*/\n      ) {\n        return mean;\n      },\n      sample: function sample(mean, std) {\n        return jStat.randn() * std + mean;\n      },\n      variance: function (mean, std) {\n        return std * std;\n      }\n    }); // extend pareto function with static methods\n\n    jStat.extend(jStat.pareto, {\n      pdf: function pdf(x, scale, shape) {\n        if (x < scale) return 0;\n        return shape * Math.pow(scale, shape) / Math.pow(x, shape + 1);\n      },\n      cdf: function cdf(x, scale, shape) {\n        if (x < scale) return 0;\n        return 1 - Math.pow(scale / x, shape);\n      },\n      inv: function inv(p, scale, shape) {\n        return scale / Math.pow(1 - p, 1 / shape);\n      },\n      mean: function mean(scale, shape) {\n        if (shape <= 1) return undefined;\n        return shape * Math.pow(scale, shape) / (shape - 1);\n      },\n      median: function median(scale, shape) {\n        return scale * (shape * Math.SQRT2);\n      },\n      mode: function mode(scale\n      /*, shape*/\n      ) {\n        return scale;\n      },\n      variance: function (scale, shape) {\n        if (shape <= 2) return undefined;\n        return scale * scale * shape / (Math.pow(shape - 1, 2) * (shape - 2));\n      }\n    }); // extend studentt function with static methods\n\n    jStat.extend(jStat.studentt, {\n      pdf: function pdf(x, dof) {\n        dof = dof > 1e100 ? 1e100 : dof;\n        return 1 / (Math.sqrt(dof) * jStat.betafn(0.5, dof / 2)) * Math.pow(1 + x * x / dof, -((dof + 1) / 2));\n      },\n      cdf: function cdf(x, dof) {\n        var dof2 = dof / 2;\n        return jStat.ibeta((x + Math.sqrt(x * x + dof)) / (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n      },\n      inv: function (p, dof) {\n        var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n        x = Math.sqrt(dof * (1 - x) / x);\n        return p > 0.5 ? x : -x;\n      },\n      mean: function mean(dof) {\n        return dof > 1 ? 0 : undefined;\n      },\n      median: function median()\n      /*dof*/\n      {\n        return 0;\n      },\n      mode: function mode()\n      /*dof*/\n      {\n        return 0;\n      },\n      sample: function sample(dof) {\n        return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n      },\n      variance: function variance(dof) {\n        return dof > 2 ? dof / (dof - 2) : dof > 1 ? Infinity : undefined;\n      }\n    }); // extend weibull function with static methods\n\n    jStat.extend(jStat.weibull, {\n      pdf: function pdf(x, scale, shape) {\n        if (x < 0 || scale < 0 || shape < 0) return 0;\n        return shape / scale * Math.pow(x / scale, shape - 1) * Math.exp(-Math.pow(x / scale, shape));\n      },\n      cdf: function cdf(x, scale, shape) {\n        return x < 0 ? 0 : 1 - Math.exp(-Math.pow(x / scale, shape));\n      },\n      inv: function (p, scale, shape) {\n        return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n      },\n      mean: function (scale, shape) {\n        return scale * jStat.gammafn(1 + 1 / shape);\n      },\n      median: function median(scale, shape) {\n        return scale * Math.pow(Math.log(2), 1 / shape);\n      },\n      mode: function mode(scale, shape) {\n        if (shape <= 1) return 0;\n        return scale * Math.pow((shape - 1) / shape, 1 / shape);\n      },\n      sample: function sample(scale, shape) {\n        return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n      },\n      variance: function variance(scale, shape) {\n        return scale * scale * jStat.gammafn(1 + 2 / shape) - Math.pow(jStat.weibull.mean(scale, shape), 2);\n      }\n    }); // extend uniform function with static methods\n\n    jStat.extend(jStat.uniform, {\n      pdf: function pdf(x, a, b) {\n        return x < a || x > b ? 0 : 1 / (b - a);\n      },\n      cdf: function cdf(x, a, b) {\n        if (x < a) return 0;else if (x < b) return (x - a) / (b - a);\n        return 1;\n      },\n      inv: function (p, a, b) {\n        return a + p * (b - a);\n      },\n      mean: function mean(a, b) {\n        return 0.5 * (a + b);\n      },\n      median: function median(a, b) {\n        return jStat.mean(a, b);\n      },\n      mode: function mode()\n      /*a, b*/\n      {\n        throw new Error('mode is not yet implemented');\n      },\n      sample: function sample(a, b) {\n        return a / 2 + b / 2 + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n      },\n      variance: function variance(a, b) {\n        return Math.pow(b - a, 2) / 12;\n      }\n    }); // Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\n\n    function betinc(x, a, b, eps) {\n      var a0 = 0;\n      var b0 = 1;\n      var a1 = 1;\n      var b1 = 1;\n      var m9 = 0;\n      var a2 = 0;\n      var c9;\n\n      while (Math.abs((a1 - a2) / a1) > eps) {\n        a2 = a1;\n        c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n        a0 = a1 + c9 * a0;\n        b0 = b1 + c9 * b0;\n        m9 = m9 + 1;\n        c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n        a1 = a0 + c9 * a1;\n        b1 = b0 + c9 * b1;\n        a0 = a0 / b1;\n        b0 = b0 / b1;\n        a1 = a1 / b1;\n        b1 = 1;\n      }\n\n      return a1 / a;\n    } // extend uniform function with static methods\n\n\n    jStat.extend(jStat.binomial, {\n      pdf: function pdf(k, n, p) {\n        return p === 0 || p === 1 ? n * p === k ? 1 : 0 : jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n      },\n      cdf: function cdf(x, n, p) {\n        var betacdf;\n        var eps = 1e-10;\n        if (x < 0) return 0;\n        if (x >= n) return 1;\n        if (p < 0 || p > 1 || n <= 0) return NaN;\n        x = Math.floor(x);\n        var z = p;\n        var a = x + 1;\n        var b = n - x;\n        var s = a + b;\n        var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) - jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n        if (z < (a + 1) / (s + 2)) betacdf = bt * betinc(z, a, b, eps);else betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n        return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n      }\n    }); // extend uniform function with static methods\n\n    jStat.extend(jStat.negbin, {\n      pdf: function pdf(k, r, p) {\n        if (k !== k >>> 0) return false;\n        if (k < 0) return 0;\n        return jStat.combination(k + r - 1, r - 1) * Math.pow(1 - p, k) * Math.pow(p, r);\n      },\n      cdf: function cdf(x, r, p) {\n        var sum = 0,\n            k = 0;\n        if (x < 0) return 0;\n\n        for (; k <= x; k++) {\n          sum += jStat.negbin.pdf(k, r, p);\n        }\n\n        return sum;\n      }\n    }); // extend uniform function with static methods\n\n    jStat.extend(jStat.hypgeom, {\n      pdf: function pdf(k, N, m, n) {\n        // Hypergeometric PDF.\n        // A simplification of the CDF algorithm below.\n        // k = number of successes drawn\n        // N = population size\n        // m = number of successes in population\n        // n = number of items drawn from population\n        if (k !== k | 0) {\n          return false;\n        } else if (k < 0 || k < m - (N - n)) {\n          // It's impossible to have this few successes drawn.\n          return 0;\n        } else if (k > n || k > m) {\n          // It's impossible to have this many successes drawn.\n          return 0;\n        } else if (m * 2 > N) {\n          // More than half the population is successes.\n          if (n * 2 > N) {\n            // More than half the population is sampled.\n            return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n);\n          } else {\n            // Half or less of the population is sampled.\n            return jStat.hypgeom.pdf(n - k, N, N - m, n);\n          }\n        } else if (n * 2 > N) {\n          // Half or less is successes.\n          return jStat.hypgeom.pdf(m - k, N, m, N - n);\n        } else if (m < n) {\n          // We want to have the number of things sampled to be less than the\n          // successes available. So swap the definitions of successful and sampled.\n          return jStat.hypgeom.pdf(k, N, n, m);\n        } else {\n          // If we get here, half or less of the population was sampled, half or\n          // less of it was successes, and we had fewer sampled things than\n          // successes. Now we can do this complicated iterative algorithm in an\n          // efficient way.\n          // The basic premise of the algorithm is that we partially normalize our\n          // intermediate product to keep it in a numerically good region, and then\n          // finish the normalization at the end.\n          // This variable holds the scaled probability of the current number of\n          // successes.\n          var scaledPDF = 1; // This keeps track of how much we have normalized.\n\n          var samplesDone = 0;\n\n          for (var i = 0; i < k; i++) {\n            // For every possible number of successes up to that observed...\n            while (scaledPDF > 1 && samplesDone < n) {\n              // Intermediate result is growing too big. Apply some of the\n              // normalization to shrink everything.\n              scaledPDF *= 1 - m / (N - samplesDone); // Say we've normalized by this sample already.\n\n              samplesDone++;\n            } // Work out the partially-normalized hypergeometric PDF for the next\n            // number of successes\n\n\n            scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n          }\n\n          for (; samplesDone < n; samplesDone++) {\n            // Apply all the rest of the normalization\n            scaledPDF *= 1 - m / (N - samplesDone);\n          } // Bound answer sanely before returning.\n\n\n          return Math.min(1, Math.max(0, scaledPDF));\n        }\n      },\n      cdf: function cdf(x, N, m, n) {\n        // Hypergeometric CDF.\n        // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n        // and comes from his hypergeometric test calculator at\n        // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n        // x = number of successes drawn\n        // N = population size\n        // m = number of successes in population\n        // n = number of items drawn from population\n        if (x < 0 || x < m - (N - n)) {\n          // It's impossible to have this few successes drawn or fewer.\n          return 0;\n        } else if (x >= n || x >= m) {\n          // We will always have this many successes or fewer.\n          return 1;\n        } else if (m * 2 > N) {\n          // More than half the population is successes.\n          if (n * 2 > N) {\n            // More than half the population is sampled.\n            return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n);\n          } else {\n            // Half or less of the population is sampled.\n            return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n          }\n        } else if (n * 2 > N) {\n          // Half or less is successes.\n          return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n        } else if (m < n) {\n          // We want to have the number of things sampled to be less than the\n          // successes available. So swap the definitions of successful and sampled.\n          return jStat.hypgeom.cdf(x, N, n, m);\n        } else {\n          // If we get here, half or less of the population was sampled, half or\n          // less of it was successes, and we had fewer sampled things than\n          // successes. Now we can do this complicated iterative algorithm in an\n          // efficient way.\n          // The basic premise of the algorithm is that we partially normalize our\n          // intermediate sum to keep it in a numerically good region, and then\n          // finish the normalization at the end.\n          // Holds the intermediate, scaled total CDF.\n          var scaledCDF = 1; // This variable holds the scaled probability of the current number of\n          // successes.\n\n          var scaledPDF = 1; // This keeps track of how much we have normalized.\n\n          var samplesDone = 0;\n\n          for (var i = 0; i < x; i++) {\n            // For every possible number of successes up to that observed...\n            while (scaledCDF > 1 && samplesDone < n) {\n              // Intermediate result is growing too big. Apply some of the\n              // normalization to shrink everything.\n              var factor = 1 - m / (N - samplesDone);\n              scaledPDF *= factor;\n              scaledCDF *= factor; // Say we've normalized by this sample already.\n\n              samplesDone++;\n            } // Work out the partially-normalized hypergeometric PDF for the next\n            // number of successes\n\n\n            scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1)); // Add to the CDF answer.\n\n            scaledCDF += scaledPDF;\n          }\n\n          for (; samplesDone < n; samplesDone++) {\n            // Apply all the rest of the normalization\n            scaledCDF *= 1 - m / (N - samplesDone);\n          } // Bound answer sanely before returning.\n\n\n          return Math.min(1, Math.max(0, scaledCDF));\n        }\n      }\n    }); // extend uniform function with static methods\n\n    jStat.extend(jStat.poisson, {\n      pdf: function pdf(k, l) {\n        if (l < 0 || k % 1 !== 0 || k < 0) {\n          return 0;\n        }\n\n        return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n      },\n      cdf: function cdf(x, l) {\n        var sumarr = [],\n            k = 0;\n        if (x < 0) return 0;\n\n        for (; k <= x; k++) {\n          sumarr.push(jStat.poisson.pdf(k, l));\n        }\n\n        return jStat.sum(sumarr);\n      },\n      mean: function (l) {\n        return l;\n      },\n      variance: function (l) {\n        return l;\n      },\n      sample: function sample(l) {\n        var p = 1,\n            k = 0,\n            L = Math.exp(-l);\n\n        do {\n          k++;\n          p *= jStat._random_fn();\n        } while (p > L);\n\n        return k - 1;\n      }\n    }); // extend triangular function with static methods\n\n    jStat.extend(jStat.triangular, {\n      pdf: function pdf(x, a, b, c) {\n        if (b <= a || c < a || c > b) {\n          return NaN;\n        } else {\n          if (x < a || x > b) {\n            return 0;\n          } else if (x < c) {\n            return 2 * (x - a) / ((b - a) * (c - a));\n          } else if (x === c) {\n            return 2 / (b - a);\n          } else {\n            // x > c\n            return 2 * (b - x) / ((b - a) * (b - c));\n          }\n        }\n      },\n      cdf: function cdf(x, a, b, c) {\n        if (b <= a || c < a || c > b) return NaN;\n        if (x <= a) return 0;else if (x >= b) return 1;\n        if (x <= c) return Math.pow(x - a, 2) / ((b - a) * (c - a));else // x > c\n          return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n      },\n      inv: function inv(p, a, b, c) {\n        if (b <= a || c < a || c > b) {\n          return NaN;\n        } else {\n          if (p <= (c - a) / (b - a)) {\n            return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n          } else {\n            // p > ((c - a) / (b - a))\n            return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - (c - a) / (b - a))));\n          }\n        }\n      },\n      mean: function mean(a, b, c) {\n        return (a + b + c) / 3;\n      },\n      median: function median(a, b, c) {\n        if (c <= (a + b) / 2) {\n          return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n        } else if (c > (a + b) / 2) {\n          return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n        }\n      },\n      mode: function mode(a, b, c) {\n        return c;\n      },\n      sample: function sample(a, b, c) {\n        var u = jStat._random_fn();\n\n        if (u < (c - a) / (b - a)) return a + Math.sqrt(u * (b - a) * (c - a));\n        return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n      },\n      variance: function variance(a, b, c) {\n        return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n      }\n    }); // extend arcsine function with static methods\n\n    jStat.extend(jStat.arcsine, {\n      pdf: function pdf(x, a, b) {\n        if (b <= a) return NaN;\n        return x <= a || x >= b ? 0 : 2 / Math.PI * Math.pow(Math.pow(b - a, 2) - Math.pow(2 * x - a - b, 2), -0.5);\n      },\n      cdf: function cdf(x, a, b) {\n        if (x < a) return 0;else if (x < b) return 2 / Math.PI * Math.asin(Math.sqrt((x - a) / (b - a)));\n        return 1;\n      },\n      inv: function (p, a, b) {\n        return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n      },\n      mean: function mean(a, b) {\n        if (b <= a) return NaN;\n        return (a + b) / 2;\n      },\n      median: function median(a, b) {\n        if (b <= a) return NaN;\n        return (a + b) / 2;\n      },\n      mode: function mode()\n      /*a, b*/\n      {\n        throw new Error('mode is not yet implemented');\n      },\n      sample: function sample(a, b) {\n        return (a + b) / 2 + (b - a) / 2 * Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n      },\n      variance: function variance(a, b) {\n        if (b <= a) return NaN;\n        return Math.pow(b - a, 2) / 8;\n      }\n    });\n\n    function laplaceSign(x) {\n      return x / Math.abs(x);\n    }\n\n    jStat.extend(jStat.laplace, {\n      pdf: function pdf(x, mu, b) {\n        return b <= 0 ? 0 : Math.exp(-Math.abs(x - mu) / b) / (2 * b);\n      },\n      cdf: function cdf(x, mu, b) {\n        if (b <= 0) {\n          return 0;\n        }\n\n        if (x < mu) {\n          return 0.5 * Math.exp((x - mu) / b);\n        } else {\n          return 1 - 0.5 * Math.exp(-(x - mu) / b);\n        }\n      },\n      mean: function (mu\n      /*, b*/\n      ) {\n        return mu;\n      },\n      median: function (mu\n      /*, b*/\n      ) {\n        return mu;\n      },\n      mode: function (mu\n      /*, b*/\n      ) {\n        return mu;\n      },\n      variance: function (mu, b) {\n        return 2 * b * b;\n      },\n      sample: function sample(mu, b) {\n        var u = jStat._random_fn() - 0.5;\n        return mu - b * laplaceSign(u) * Math.log(1 - 2 * Math.abs(u));\n      }\n    });\n\n    function tukeyWprob(w, rr, cc) {\n      var nleg = 12;\n      var ihalf = 6;\n      var C1 = -30;\n      var C2 = -50;\n      var C3 = 60;\n      var bb = 8;\n      var wlar = 3;\n      var wincr1 = 2;\n      var wincr2 = 3;\n      var xleg = [0.981560634246719250690549090149, 0.904117256370474856678465866119, 0.769902674194304687036893833213, 0.587317954286617447296702418941, 0.367831498998180193752691536644, 0.125233408511468915472441369464];\n      var aleg = [0.047175336386511827194615961485, 0.106939325995318430960254718194, 0.160078328543346226334652529543, 0.203167426723065921749064455810, 0.233492536538354808760849898925, 0.249147045813402785000562436043];\n      var qsqz = w * 0.5; // if w >= 16 then the integral lower bound (occurs for c=20)\n      // is 0.99999999999995 so return a value of 1.\n\n      if (qsqz >= bb) return 1.0; // find (f(w/2) - 1) ^ cc\n      // (first term in integral of hartley's form).\n\n      var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n      // if pr_w ^ cc < 2e-22 then set pr_w = 0\n\n      if (pr_w >= Math.exp(C2 / cc)) pr_w = Math.pow(pr_w, cc);else pr_w = 0.0; // if w is large then the second component of the\n      // integral is small, so fewer intervals are needed.\n\n      var wincr;\n      if (w > wlar) wincr = wincr1;else wincr = wincr2; // find the integral of second term of hartley's form\n      // for the integral of the range for equal-length\n      // intervals using legendre quadrature.  limits of\n      // integration are from (w/2, 8).  two or three\n      // equal-length intervals are used.\n      // blb and bub are lower and upper limits of integration.\n\n      var blb = qsqz;\n      var binc = (bb - qsqz) / wincr;\n      var bub = blb + binc;\n      var einsum = 0.0; // integrate over each interval\n\n      var cc1 = cc - 1.0;\n\n      for (var wi = 1; wi <= wincr; wi++) {\n        var elsum = 0.0;\n        var a = 0.5 * (bub + blb); // legendre quadrature with order = nleg\n\n        var b = 0.5 * (bub - blb);\n\n        for (var jj = 1; jj <= nleg; jj++) {\n          var j, xx;\n\n          if (ihalf < jj) {\n            j = nleg - jj + 1;\n            xx = xleg[j - 1];\n          } else {\n            j = jj;\n            xx = -xleg[j - 1];\n          }\n\n          var c = b * xx;\n          var ac = a + c; // if exp(-qexpo/2) < 9e-14,\n          // then doesn't contribute to integral\n\n          var qexpo = ac * ac;\n          if (qexpo > C3) break;\n          var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n          var pminus = 2 * jStat.normal.cdf(ac, w, 1, 1, 0); // if rinsum ^ (cc-1) < 9e-14,\n          // then doesn't contribute to integral\n\n          var rinsum = pplus * 0.5 - pminus * 0.5;\n\n          if (rinsum >= Math.exp(C1 / cc1)) {\n            rinsum = aleg[j - 1] * Math.exp(-(0.5 * qexpo)) * Math.pow(rinsum, cc1);\n            elsum += rinsum;\n          }\n        }\n\n        elsum *= 2.0 * b * cc / Math.sqrt(2 * Math.PI);\n        einsum += elsum;\n        blb = bub;\n        bub += binc;\n      } // if pr_w ^ rr < 9e-14, then return 0\n\n\n      pr_w += einsum;\n      if (pr_w <= Math.exp(C1 / rr)) return 0;\n      pr_w = Math.pow(pr_w, rr);\n      if (pr_w >= 1) // 1 was iMax was eps\n        return 1;\n      return pr_w;\n    }\n\n    function tukeyQinv(p, c, v) {\n      var p0 = 0.322232421088;\n      var q0 = 0.993484626060e-01;\n      var p1 = -1.0;\n      var q1 = 0.588581570495;\n      var p2 = -0.342242088547;\n      var q2 = 0.531103462366;\n      var p3 = -0.204231210125;\n      var q3 = 0.103537752850;\n      var p4 = -0.453642210148e-04;\n      var q4 = 0.38560700634e-02;\n      var c1 = 0.8832;\n      var c2 = 0.2368;\n      var c3 = 1.214;\n      var c4 = 1.208;\n      var c5 = 1.4142;\n      var vmax = 120.0;\n      var ps = 0.5 - 0.5 * p;\n      var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n      var t = yi + ((((yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0) / ((((yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n      if (v < vmax) t += (t * t * t + t) / v / 4.0;\n      var q = c1 - c2 * t;\n      if (v < vmax) q += -c3 / v + c4 * t / v;\n      return t * (q * Math.log(c - 1.0) + c5);\n    }\n\n    jStat.extend(jStat.tukey, {\n      cdf: function cdf(q, nmeans, df) {\n        // Identical implementation as the R ptukey() function as of commit 68947\n        var rr = 1;\n        var cc = nmeans;\n        var nlegq = 16;\n        var ihalfq = 8;\n        var eps1 = -30.0;\n        var eps2 = 1.0e-14;\n        var dhaf = 100.0;\n        var dquar = 800.0;\n        var deigh = 5000.0;\n        var dlarg = 25000.0;\n        var ulen1 = 1.0;\n        var ulen2 = 0.5;\n        var ulen3 = 0.25;\n        var ulen4 = 0.125;\n        var xlegq = [0.989400934991649932596154173450, 0.944575023073232576077988415535, 0.865631202387831743880467897712, 0.755404408355003033895101194847, 0.617876244402643748446671764049, 0.458016777657227386342419442984, 0.281603550779258913230460501460, 0.950125098376374401853193354250e-1];\n        var alegq = [0.271524594117540948517805724560e-1, 0.622535239386478928628438369944e-1, 0.951585116824927848099251076022e-1, 0.124628971255533872052476282192, 0.149595988816576732081501730547, 0.169156519395002538189312079030, 0.182603415044923588866763667969, 0.189450610455068496285396723208];\n        if (q <= 0) return 0; // df must be > 1\n        // there must be at least two values\n\n        if (df < 2 || rr < 1 || cc < 2) return NaN;\n        if (!Number.isFinite(q)) return 1;\n        if (df > dlarg) return tukeyWprob(q, rr, cc); // calculate leading constant\n\n        var f2 = df * 0.5;\n        var f2lf = f2 * Math.log(df) - df * Math.log(2) - jStat.gammaln(f2);\n        var f21 = f2 - 1.0; // integral is divided into unit, half-unit, quarter-unit, or\n        // eighth-unit length intervals depending on the value of the\n        // degrees of freedom.\n\n        var ff4 = df * 0.25;\n        var ulen;\n        if (df <= dhaf) ulen = ulen1;else if (df <= dquar) ulen = ulen2;else if (df <= deigh) ulen = ulen3;else ulen = ulen4;\n        f2lf += Math.log(ulen); // integrate over each subinterval\n\n        var ans = 0.0;\n\n        for (var i = 1; i <= 50; i++) {\n          var otsum = 0.0; // legendre quadrature with order = nlegq\n          // nodes (stored in xlegq) are symmetric around zero.\n\n          var twa1 = (2 * i - 1) * ulen;\n\n          for (var jj = 1; jj <= nlegq; jj++) {\n            var j, t1;\n\n            if (ihalfq < jj) {\n              j = jj - ihalfq - 1;\n              t1 = f2lf + f21 * Math.log(twa1 + xlegq[j] * ulen) - (xlegq[j] * ulen + twa1) * ff4;\n            } else {\n              j = jj - 1;\n              t1 = f2lf + f21 * Math.log(twa1 - xlegq[j] * ulen) + (xlegq[j] * ulen - twa1) * ff4;\n            } // if exp(t1) < 9e-14, then doesn't contribute to integral\n\n\n            var qsqz;\n\n            if (t1 >= eps1) {\n              if (ihalfq < jj) {\n                qsqz = q * Math.sqrt((xlegq[j] * ulen + twa1) * 0.5);\n              } else {\n                qsqz = q * Math.sqrt((-(xlegq[j] * ulen) + twa1) * 0.5);\n              } // call wprob to find integral of range portion\n\n\n              var wprb = tukeyWprob(qsqz, rr, cc);\n              var rotsum = wprb * alegq[j] * Math.exp(t1);\n              otsum += rotsum;\n            } // end legendre integral for interval i\n            // L200:\n\n          } // if integral for interval i < 1e-14, then stop.\n          // However, in order to avoid small area under left tail,\n          // at least  1 / ulen  intervals are calculated.\n\n\n          if (i * ulen >= 1.0 && otsum <= eps2) break; // end of interval i\n          // L330:\n\n          ans += otsum;\n        }\n\n        if (otsum > eps2) {\n          // not converged\n          throw new Error('tukey.cdf failed to converge');\n        }\n\n        if (ans > 1) ans = 1;\n        return ans;\n      },\n      inv: function (p, nmeans, df) {\n        // Identical implementation as the R qtukey() function as of commit 68947\n        var rr = 1;\n        var cc = nmeans;\n        var eps = 0.0001;\n        var maxiter = 50; // df must be > 1 ; there must be at least two values\n\n        if (df < 2 || rr < 1 || cc < 2) return NaN;\n        if (p < 0 || p > 1) return NaN;\n        if (p === 0) return 0;\n        if (p === 1) return Infinity; // Initial value\n\n        var x0 = tukeyQinv(p, cc, df); // Find prob(value < x0)\n\n        var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p; // Find the second iterate and prob(value < x1).\n        // If the first iterate has probability value\n        // exceeding p then second iterate is 1 less than\n        // first iterate; otherwise it is 1 greater.\n\n        var x1;\n        if (valx0 > 0.0) x1 = Math.max(0.0, x0 - 1.0);else x1 = x0 + 1.0;\n        var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p; // Find new iterate\n\n        var ans;\n\n        for (var iter = 1; iter < maxiter; iter++) {\n          ans = x1 - valx1 * (x1 - x0) / (valx1 - valx0);\n          valx0 = valx1; // New iterate must be >= 0\n\n          x0 = x1;\n\n          if (ans < 0.0) {\n            ans = 0.0;\n            valx1 = -p;\n          } // Find prob(value < new iterate)\n\n\n          valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n          x1 = ans; // If the difference between two successive\n          // iterates is less than eps, stop\n\n          var xabs = Math.abs(x1 - x0);\n          if (xabs < eps) return ans;\n        }\n\n        throw new Error('tukey.inv failed to converge');\n      }\n    });\n  })(jStat, Math);\n  /* Provides functions for the solution of linear system of equations, integration, extrapolation,\n   * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n\n  (function (jStat, Math) {\n    var push = Array.prototype.push;\n    var isArray = jStat.utils.isArray;\n\n    function isUsable(arg) {\n      return isArray(arg) || arg instanceof jStat;\n    }\n\n    jStat.extend({\n      // add a vector/matrix to a vector/matrix or scalar\n      add: function add(arr, arg) {\n        // check if arg is a vector or scalar\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.map(arr, function (value, row, col) {\n            return value + arg[row][col];\n          });\n        }\n\n        return jStat.map(arr, function (value) {\n          return value + arg;\n        });\n      },\n      // subtract a vector or scalar from the vector\n      subtract: function subtract(arr, arg) {\n        // check if arg is a vector or scalar\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.map(arr, function (value, row, col) {\n            return value - arg[row][col] || 0;\n          });\n        }\n\n        return jStat.map(arr, function (value) {\n          return value - arg;\n        });\n      },\n      // matrix division\n      divide: function divide(arr, arg) {\n        if (isUsable(arg)) {\n          if (!isUsable(arg[0])) arg = [arg];\n          return jStat.multiply(arr, jStat.inv(arg));\n        }\n\n        return jStat.map(arr, function (value) {\n          return value / arg;\n        });\n      },\n      // matrix multiplication\n      multiply: function multiply(arr, arg) {\n        var row, col, nrescols, sum, nrow, ncol, res, rescols; // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n\n        if (arr.length === undefined && arg.length === undefined) {\n          return arr * arg;\n        }\n\n        nrow = arr.length, ncol = arr[0].length, res = jStat.zeros(nrow, nrescols = isUsable(arg) ? arg[0].length : ncol), rescols = 0;\n\n        if (isUsable(arg)) {\n          for (; rescols < nrescols; rescols++) {\n            for (row = 0; row < nrow; row++) {\n              sum = 0;\n\n              for (col = 0; col < ncol; col++) sum += arr[row][col] * arg[col][rescols];\n\n              res[row][rescols] = sum;\n            }\n          }\n\n          return nrow === 1 && rescols === 1 ? res[0][0] : res;\n        }\n\n        return jStat.map(arr, function (value) {\n          return value * arg;\n        });\n      },\n      // outer([1,2,3],[4,5,6])\n      // ===\n      // [[1],[2],[3]] times [[4,5,6]]\n      // ->\n      // [[4,5,6],[8,10,12],[12,15,18]]\n      outer: function outer(A, B) {\n        return jStat.multiply(A.map(function (t) {\n          return [t];\n        }), [B]);\n      },\n      // Returns the dot product of two matricies\n      dot: function dot(arr, arg) {\n        if (!isUsable(arr[0])) arr = [arr];\n        if (!isUsable(arg[0])) arg = [arg]; // convert column to row vector\n\n        var left = arr[0].length === 1 && arr.length !== 1 ? jStat.transpose(arr) : arr,\n            right = arg[0].length === 1 && arg.length !== 1 ? jStat.transpose(arg) : arg,\n            res = [],\n            row = 0,\n            nrow = left.length,\n            ncol = left[0].length,\n            sum,\n            col;\n\n        for (; row < nrow; row++) {\n          res[row] = [];\n          sum = 0;\n\n          for (col = 0; col < ncol; col++) sum += left[row][col] * right[row][col];\n\n          res[row] = sum;\n        }\n\n        return res.length === 1 ? res[0] : res;\n      },\n      // raise every element by a scalar\n      pow: function pow(arr, arg) {\n        return jStat.map(arr, function (value) {\n          return Math.pow(value, arg);\n        });\n      },\n      // exponentiate every element\n      exp: function exp(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.exp(value);\n        });\n      },\n      // generate the natural log of every element\n      log: function exp(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.log(value);\n        });\n      },\n      // generate the absolute values of the vector\n      abs: function abs(arr) {\n        return jStat.map(arr, function (value) {\n          return Math.abs(value);\n        });\n      },\n      // computes the p-norm of the vector\n      // In the case that a matrix is passed, uses the first row as the vector\n      norm: function norm(arr, p) {\n        var nnorm = 0,\n            i = 0; // check the p-value of the norm, and set for most common case\n\n        if (isNaN(p)) p = 2; // check if multi-dimensional array, and make vector correction\n\n        if (isUsable(arr[0])) arr = arr[0]; // vector norm\n\n        for (; i < arr.length; i++) {\n          nnorm += Math.pow(Math.abs(arr[i]), p);\n        }\n\n        return Math.pow(nnorm, 1 / p);\n      },\n      // computes the angle between two vectors in rads\n      // In case a matrix is passed, this uses the first row as the vector\n      angle: function angle(arr, arg) {\n        return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n      },\n      // augment one matrix by another\n      // Note: this function returns a matrix, not a jStat object\n      aug: function aug(a, b) {\n        var newarr = [];\n        var i;\n\n        for (i = 0; i < a.length; i++) {\n          newarr.push(a[i].slice());\n        }\n\n        for (i = 0; i < newarr.length; i++) {\n          push.apply(newarr[i], b[i]);\n        }\n\n        return newarr;\n      },\n      // The inv() function calculates the inverse of a matrix\n      // Create the inverse by augmenting the matrix by the identity matrix of the\n      // appropriate size, and then use G-J elimination on the augmented matrix.\n      inv: function inv(a) {\n        var rows = a.length;\n        var cols = a[0].length;\n        var b = jStat.identity(rows, cols);\n        var c = jStat.gauss_jordan(a, b);\n        var result = [];\n        var i = 0;\n        var j; //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n\n        for (; i < rows; i++) {\n          result[i] = [];\n\n          for (j = cols; j < c[0].length; j++) result[i][j - cols] = c[i][j];\n        }\n\n        return result;\n      },\n      // calculate the determinant of a matrix\n      det: function det(a) {\n        var alen = a.length,\n            alend = alen * 2,\n            vals = new Array(alend),\n            rowshift = alen - 1,\n            colshift = alend - 1,\n            mrow = rowshift - alen + 1,\n            mcol = colshift,\n            i = 0,\n            result = 0,\n            j; // check for special 2x2 case\n\n        if (alen === 2) {\n          return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n        }\n\n        for (; i < alend; i++) {\n          vals[i] = 1;\n        }\n\n        for (i = 0; i < alen; i++) {\n          for (j = 0; j < alen; j++) {\n            vals[mrow < 0 ? mrow + alen : mrow] *= a[i][j];\n            vals[mcol < alen ? mcol + alen : mcol] *= a[i][j];\n            mrow++;\n            mcol--;\n          }\n\n          mrow = --rowshift - alen + 1;\n          mcol = --colshift;\n        }\n\n        for (i = 0; i < alen; i++) {\n          result += vals[i];\n        }\n\n        for (; i < alend; i++) {\n          result -= vals[i];\n        }\n\n        return result;\n      },\n      gauss_elimination: function gauss_elimination(a, b) {\n        var i = 0,\n            j = 0,\n            n = a.length,\n            m = a[0].length,\n            factor = 1,\n            sum = 0,\n            x = [],\n            maug,\n            pivot,\n            temp,\n            k;\n        a = jStat.aug(a, b);\n        maug = a[0].length;\n\n        for (i = 0; i < n; i++) {\n          pivot = a[i][i];\n          j = i;\n\n          for (k = i + 1; k < m; k++) {\n            if (pivot < Math.abs(a[k][i])) {\n              pivot = a[k][i];\n              j = k;\n            }\n          }\n\n          if (j != i) {\n            for (k = 0; k < maug; k++) {\n              temp = a[i][k];\n              a[i][k] = a[j][k];\n              a[j][k] = temp;\n            }\n          }\n\n          for (j = i + 1; j < n; j++) {\n            factor = a[j][i] / a[i][i];\n\n            for (k = i; k < maug; k++) {\n              a[j][k] = a[j][k] - factor * a[i][k];\n            }\n          }\n        }\n\n        for (i = n - 1; i >= 0; i--) {\n          sum = 0;\n\n          for (j = i + 1; j <= n - 1; j++) {\n            sum = sum + x[j] * a[i][j];\n          }\n\n          x[i] = (a[i][maug - 1] - sum) / a[i][i];\n        }\n\n        return x;\n      },\n      gauss_jordan: function gauss_jordan(a, b) {\n        var m = jStat.aug(a, b);\n        var h = m.length;\n        var w = m[0].length;\n        var c = 0;\n        var x, y, y2; // find max pivot\n\n        for (y = 0; y < h; y++) {\n          var maxrow = y;\n\n          for (y2 = y + 1; y2 < h; y2++) {\n            if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y])) maxrow = y2;\n          }\n\n          var tmp = m[y];\n          m[y] = m[maxrow];\n          m[maxrow] = tmp;\n\n          for (y2 = y + 1; y2 < h; y2++) {\n            c = m[y2][y] / m[y][y];\n\n            for (x = y; x < w; x++) {\n              m[y2][x] -= m[y][x] * c;\n            }\n          }\n        } // backsubstitute\n\n\n        for (y = h - 1; y >= 0; y--) {\n          c = m[y][y];\n\n          for (y2 = 0; y2 < y; y2++) {\n            for (x = w - 1; x > y - 1; x--) {\n              m[y2][x] -= m[y][x] * m[y2][y] / c;\n            }\n          }\n\n          m[y][y] /= c;\n\n          for (x = h; x < w; x++) {\n            m[y][x] /= c;\n          }\n        }\n\n        return m;\n      },\n      // solve equation\n      // Ax=b\n      // A is upper triangular matrix\n      // A=[[1,2,3],[0,4,5],[0,6,7]]\n      // b=[1,2,3]\n      // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n      // if you use matrix style\n      // A=[[1,2,3],[0,4,5],[0,6,7]]\n      // b=[[1],[2],[3]]\n      // will return [[2.666],[0.1666],[1.666]]\n      triaUpSolve: function triaUpSolve(A, b) {\n        var size = A[0].length;\n        var x = jStat.zeros(1, size)[0];\n        var parts;\n        var matrix_mode = false;\n\n        if (b[0].length != undefined) {\n          b = b.map(function (i) {\n            return i[0];\n          });\n          matrix_mode = true;\n        }\n\n        jStat.arange(size - 1, -1, -1).forEach(function (i) {\n          parts = jStat.arange(i + 1, size).map(function (j) {\n            return x[j] * A[i][j];\n          });\n          x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n        });\n        if (matrix_mode) return x.map(function (i) {\n          return [i];\n        });\n        return x;\n      },\n      triaLowSolve: function triaLowSolve(A, b) {\n        // like to triaUpSolve but A is lower triangular matrix\n        var size = A[0].length;\n        var x = jStat.zeros(1, size)[0];\n        var parts;\n        var matrix_mode = false;\n\n        if (b[0].length != undefined) {\n          b = b.map(function (i) {\n            return i[0];\n          });\n          matrix_mode = true;\n        }\n\n        jStat.arange(size).forEach(function (i) {\n          parts = jStat.arange(i).map(function (j) {\n            return A[i][j] * x[j];\n          });\n          x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n        });\n        if (matrix_mode) return x.map(function (i) {\n          return [i];\n        });\n        return x;\n      },\n      // A -> [L,U]\n      // A=LU\n      // L is lower triangular matrix\n      // U is upper triangular matrix\n      lu: function lu(A) {\n        var size = A.length; //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n\n        var L = jStat.identity(size);\n        var R = jStat.zeros(A.length, A[0].length);\n        var parts;\n        jStat.arange(size).forEach(function (t) {\n          R[0][t] = A[0][t];\n        });\n        jStat.arange(1, size).forEach(function (l) {\n          jStat.arange(l).forEach(function (i) {\n            parts = jStat.arange(i).map(function (jj) {\n              return L[l][jj] * R[jj][i];\n            });\n            L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n          });\n          jStat.arange(l, size).forEach(function (j) {\n            parts = jStat.arange(l).map(function (jj) {\n              return L[l][jj] * R[jj][j];\n            });\n            R[l][j] = A[parts.length][j] - jStat.sum(parts);\n          });\n        });\n        return [L, R];\n      },\n      // A -> T\n      // A=TT'\n      // T is lower triangular matrix\n      cholesky: function cholesky(A) {\n        var size = A.length;\n        var T = jStat.zeros(A.length, A[0].length);\n        var parts;\n        jStat.arange(size).forEach(function (i) {\n          parts = jStat.arange(i).map(function (t) {\n            return Math.pow(T[i][t], 2);\n          });\n          T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n          jStat.arange(i + 1, size).forEach(function (j) {\n            parts = jStat.arange(i).map(function (t) {\n              return T[i][t] * T[j][t];\n            });\n            T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n          });\n        });\n        return T;\n      },\n      gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n        var i = 0;\n        var j = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var xv, c, h, xk;\n\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n\n        h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n        c = jStat.multiply(jStat.inv(d), b);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i++;\n        }\n\n        return xk;\n      },\n      gauss_seidel: function gauss_seidel(a, b, x, r) {\n        var i = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var j, xv, c, h, xk;\n\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n\n        h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n        c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i = i + 1;\n        }\n\n        return xk;\n      },\n      SOR: function SOR(a, b, x, r, w) {\n        var i = 0;\n        var n = a.length;\n        var l = [];\n        var u = [];\n        var d = [];\n        var j, xv, c, h, xk;\n\n        for (; i < n; i++) {\n          l[i] = [];\n          u[i] = [];\n          d[i] = [];\n\n          for (j = 0; j < n; j++) {\n            if (i > j) {\n              l[i][j] = a[i][j];\n              u[i][j] = d[i][j] = 0;\n            } else if (i < j) {\n              u[i][j] = a[i][j];\n              l[i][j] = d[i][j] = 0;\n            } else {\n              d[i][j] = a[i][j];\n              l[i][j] = u[i][j] = 0;\n            }\n          }\n        }\n\n        h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))), jStat.subtract(jStat.multiply(d, 1 - w), jStat.multiply(u, w)));\n        c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))), b), w);\n        xv = x;\n        xk = jStat.add(jStat.multiply(h, x), c);\n        i = 2;\n\n        while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n          xv = xk;\n          xk = jStat.add(jStat.multiply(h, xv), c);\n          i++;\n        }\n\n        return xk;\n      },\n      householder: function householder(a) {\n        var m = a.length;\n        var n = a[0].length;\n        var i = 0;\n        var w = [];\n        var p = [];\n        var alpha, r, k, j, factor;\n\n        for (; i < m - 1; i++) {\n          alpha = 0;\n\n          for (j = i + 1; j < n; j++) alpha += a[j][i] * a[j][i];\n\n          factor = a[i + 1][i] > 0 ? -1 : 1;\n          alpha = factor * Math.sqrt(alpha);\n          r = Math.sqrt((alpha * alpha - a[i + 1][i] * alpha) / 2);\n          w = jStat.zeros(m, 1);\n          w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n\n          for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n\n          p = jStat.subtract(jStat.identity(m, n), jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n          a = jStat.multiply(p, jStat.multiply(a, p));\n        }\n\n        return a;\n      },\n      // A -> [Q,R]\n      // Q is orthogonal matrix\n      // R is upper triangular\n      QR: function () {\n        // x -> Q\n        // find a orthogonal matrix Q st.\n        // Qx=y\n        // y is [||x||,0,0,...]\n        // quick ref\n        var sum = jStat.sum;\n        var range = jStat.arange;\n\n        function qr2(x) {\n          // quick impletation\n          // https://www.stat.wisc.edu/~larget/math496/qr.html\n          var n = x.length;\n          var p = x[0].length;\n          var r = jStat.zeros(p, p);\n          x = jStat.copy(x);\n          var i, j, k;\n\n          for (j = 0; j < p; j++) {\n            r[j][j] = Math.sqrt(sum(range(n).map(function (i) {\n              return x[i][j] * x[i][j];\n            })));\n\n            for (i = 0; i < n; i++) {\n              x[i][j] = x[i][j] / r[j][j];\n            }\n\n            for (k = j + 1; k < p; k++) {\n              r[j][k] = sum(range(n).map(function (i) {\n                return x[i][j] * x[i][k];\n              }));\n\n              for (i = 0; i < n; i++) {\n                x[i][k] = x[i][k] - x[i][j] * r[j][k];\n              }\n            }\n          }\n\n          return [x, r];\n        }\n\n        return qr2;\n      }(),\n      lstsq: function () {\n        // solve least squard problem for Ax=b as QR decomposition way if b is\n        // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n        // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n        function R_I(A) {\n          A = jStat.copy(A);\n          var size = A.length;\n          var I = jStat.identity(size);\n          jStat.arange(size - 1, -1, -1).forEach(function (i) {\n            jStat.sliceAssign(I, {\n              row: i\n            }, jStat.divide(jStat.slice(I, {\n              row: i\n            }), A[i][i]));\n            jStat.sliceAssign(A, {\n              row: i\n            }, jStat.divide(jStat.slice(A, {\n              row: i\n            }), A[i][i]));\n            jStat.arange(i).forEach(function (j) {\n              var c = jStat.multiply(A[j][i], -1);\n              var Aj = jStat.slice(A, {\n                row: j\n              });\n              var cAi = jStat.multiply(jStat.slice(A, {\n                row: i\n              }), c);\n              jStat.sliceAssign(A, {\n                row: j\n              }, jStat.add(Aj, cAi));\n              var Ij = jStat.slice(I, {\n                row: j\n              });\n              var cIi = jStat.multiply(jStat.slice(I, {\n                row: i\n              }), c);\n              jStat.sliceAssign(I, {\n                row: j\n              }, jStat.add(Ij, cIi));\n            });\n          });\n          return I;\n        }\n\n        function qr_solve(A, b) {\n          var array_mode = false;\n\n          if (b[0].length === undefined) {\n            // [c1,c2,c3] mode\n            b = b.map(function (x) {\n              return [x];\n            });\n            array_mode = true;\n          }\n\n          var QR = jStat.QR(A);\n          var Q = QR[0];\n          var R = QR[1];\n          var attrs = A[0].length;\n          var Q1 = jStat.slice(Q, {\n            col: {\n              end: attrs\n            }\n          });\n          var R1 = jStat.slice(R, {\n            row: {\n              end: attrs\n            }\n          });\n          var RI = R_I(R1);\n          var Q2 = jStat.transpose(Q1);\n\n          if (Q2[0].length === undefined) {\n            Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n          }\n\n          var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n          if (x.length === undefined) {\n            x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n          }\n\n          if (array_mode) return x.map(function (i) {\n            return i[0];\n          });\n          return x;\n        }\n\n        return qr_solve;\n      }(),\n      jacobi: function jacobi(a) {\n        var condition = 1;\n        var n = a.length;\n        var e = jStat.identity(n, n);\n        var ev = [];\n        var b, i, j, p, q, maxim, theta, s; // condition === 1 only if tolerance is not reached\n\n        while (condition === 1) {\n          maxim = a[0][1];\n          p = 0;\n          q = 1;\n\n          for (i = 0; i < n; i++) {\n            for (j = 0; j < n; j++) {\n              if (i != j) {\n                if (maxim < Math.abs(a[i][j])) {\n                  maxim = Math.abs(a[i][j]);\n                  p = i;\n                  q = j;\n                }\n              }\n            }\n          }\n\n          if (a[p][p] === a[q][q]) theta = a[p][q] > 0 ? Math.PI / 4 : -Math.PI / 4;else theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n          s = jStat.identity(n, n);\n          s[p][p] = Math.cos(theta);\n          s[p][q] = -Math.sin(theta);\n          s[q][p] = Math.sin(theta);\n          s[q][q] = Math.cos(theta); // eigen vector matrix\n\n          e = jStat.multiply(e, s);\n          b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n          a = b;\n          condition = 0;\n\n          for (i = 1; i < n; i++) {\n            for (j = 1; j < n; j++) {\n              if (i != j && Math.abs(a[i][j]) > 0.001) {\n                condition = 1;\n              }\n            }\n          }\n        }\n\n        for (i = 0; i < n; i++) ev.push(a[i][i]); //returns both the eigenvalue and eigenmatrix\n\n\n        return [e, ev];\n      },\n      rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n        var k1, k2, u_j1, k3, k4;\n\n        if (order === 2) {\n          while (t_j <= p) {\n            k1 = h * f(t_j, u_j);\n            k2 = h * f(t_j + h, u_j + k1);\n            u_j1 = u_j + (k1 + k2) / 2;\n            u_j = u_j1;\n            t_j = t_j + h;\n          }\n        }\n\n        if (order === 4) {\n          while (t_j <= p) {\n            k1 = h * f(t_j, u_j);\n            k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n            k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n            k4 = h * f(t_j + h, u_j + k3);\n            u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n            u_j = u_j1;\n            t_j = t_j + h;\n          }\n        }\n\n        return u_j;\n      },\n      romberg: function romberg(f, a, b, order) {\n        var i = 0;\n        var h = (b - a) / 2;\n        var x = [];\n        var h1 = [];\n        var g = [];\n        var m, a1, j, k, I;\n\n        while (i < order / 2) {\n          I = f(a);\n\n          for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n\n          m = x.length;\n\n          for (j = 1; j < m - 1; j++) {\n            I += (j % 2 !== 0 ? 4 : 2) * f(x[j]);\n          }\n\n          I = h / 3 * (I + f(b));\n          g[i] = I;\n          h /= 2;\n          i++;\n        }\n\n        a1 = g.length;\n        m = 1;\n\n        while (a1 !== 1) {\n          for (j = 0; j < a1 - 1; j++) h1[j] = (Math.pow(4, m) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n\n          a1 = h1.length;\n          g = h1;\n          h1 = [];\n          m++;\n        }\n\n        return g;\n      },\n      richardson: function richardson(X, f, x, h) {\n        function pos(X, x) {\n          var i = 0;\n          var n = X.length;\n          var p;\n\n          for (; i < n; i++) if (X[i] === x) p = i;\n\n          return p;\n        }\n\n        var h_min = Math.abs(x - X[pos(X, x) + 1]);\n        var i = 0;\n        var g = [];\n        var h1 = [];\n        var y1, y2, m, a, j;\n\n        while (h >= h_min) {\n          y1 = pos(X, x + h);\n          y2 = pos(X, x);\n          g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n          h /= 2;\n          i++;\n        }\n\n        a = g.length;\n        m = 1;\n\n        while (a != 1) {\n          for (j = 0; j < a - 1; j++) h1[j] = (Math.pow(4, m) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n\n          a = h1.length;\n          g = h1;\n          h1 = [];\n          m++;\n        }\n\n        return g;\n      },\n      simpson: function simpson(f, a, b, n) {\n        var h = (b - a) / n;\n        var I = f(a);\n        var x = [];\n        var j = a;\n        var k = 0;\n        var i = 1;\n        var m;\n\n        for (; j <= b; j = j + h, k++) x[k] = j;\n\n        m = x.length;\n\n        for (; i < m - 1; i++) {\n          I += (i % 2 !== 0 ? 4 : 2) * f(x[i]);\n        }\n\n        return h / 3 * (I + f(b));\n      },\n      hermite: function hermite(X, F, dF, value) {\n        var n = X.length;\n        var p = 0;\n        var i = 0;\n        var l = [];\n        var dl = [];\n        var A = [];\n        var B = [];\n        var j;\n\n        for (; i < n; i++) {\n          l[i] = 1;\n\n          for (j = 0; j < n; j++) {\n            if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n          }\n\n          dl[i] = 0;\n\n          for (j = 0; j < n; j++) {\n            if (i != j) dl[i] += 1 / (X[i] - X[j]);\n          }\n\n          A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n          B[i] = (value - X[i]) * (l[i] * l[i]);\n          p += A[i] * F[i] + B[i] * dF[i];\n        }\n\n        return p;\n      },\n      lagrange: function lagrange(X, F, value) {\n        var p = 0;\n        var i = 0;\n        var j, l;\n        var n = X.length;\n\n        for (; i < n; i++) {\n          l = F[i];\n\n          for (j = 0; j < n; j++) {\n            // calculating the lagrange polynomial L_i\n            if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n          } // adding the lagrange polynomials found above\n\n\n          p += l;\n        }\n\n        return p;\n      },\n      cubic_spline: function cubic_spline(X, F, value) {\n        var n = X.length;\n        var i = 0,\n            j;\n        var A = [];\n        var B = [];\n        var alpha = [];\n        var c = [];\n        var h = [];\n        var b = [];\n        var d = [];\n\n        for (; i < n - 1; i++) h[i] = X[i + 1] - X[i];\n\n        alpha[0] = 0;\n\n        for (i = 1; i < n - 1; i++) {\n          alpha[i] = 3 / h[i] * (F[i + 1] - F[i]) - 3 / h[i - 1] * (F[i] - F[i - 1]);\n        }\n\n        for (i = 1; i < n - 1; i++) {\n          A[i] = [];\n          B[i] = [];\n          A[i][i - 1] = h[i - 1];\n          A[i][i] = 2 * (h[i - 1] + h[i]);\n          A[i][i + 1] = h[i];\n          B[i][0] = alpha[i];\n        }\n\n        c = jStat.multiply(jStat.inv(A), B);\n\n        for (j = 0; j < n - 1; j++) {\n          b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n          d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n        }\n\n        for (j = 0; j < n; j++) {\n          if (X[j] > value) break;\n        }\n\n        j -= 1;\n        return F[j] + (value - X[j]) * b[j] + jStat.sq(value - X[j]) * c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n      },\n      gauss_quadrature: function gauss_quadrature() {\n        throw new Error('gauss_quadrature not yet implemented');\n      },\n      PCA: function PCA(X) {\n        var m = X.length;\n        var n = X[0].length;\n        var i = 0;\n        var j, temp1;\n        var u = [];\n        var D = [];\n        var result = [];\n        var temp2 = [];\n        var Y = [];\n        var Bt = [];\n        var B = [];\n        var C = [];\n        var V = [];\n        var Vt = [];\n\n        for (i = 0; i < m; i++) {\n          u[i] = jStat.sum(X[i]) / n;\n        }\n\n        for (i = 0; i < n; i++) {\n          B[i] = [];\n\n          for (j = 0; j < m; j++) {\n            B[i][j] = X[j][i] - u[j];\n          }\n        }\n\n        B = jStat.transpose(B);\n\n        for (i = 0; i < m; i++) {\n          C[i] = [];\n\n          for (j = 0; j < m; j++) {\n            C[i][j] = jStat.dot([B[i]], [B[j]]) / (n - 1);\n          }\n        }\n\n        result = jStat.jacobi(C);\n        V = result[0];\n        D = result[1];\n        Vt = jStat.transpose(V);\n\n        for (i = 0; i < D.length; i++) {\n          for (j = i; j < D.length; j++) {\n            if (D[i] < D[j]) {\n              temp1 = D[i];\n              D[i] = D[j];\n              D[j] = temp1;\n              temp2 = Vt[i];\n              Vt[i] = Vt[j];\n              Vt[j] = temp2;\n            }\n          }\n        }\n\n        Bt = jStat.transpose(B);\n\n        for (i = 0; i < m; i++) {\n          Y[i] = [];\n\n          for (j = 0; j < Bt.length; j++) {\n            Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n          }\n        }\n\n        return [X, D, Vt, Y];\n      }\n    }); // extend jStat.fn with methods that require one argument\n\n    (function (funcs) {\n      for (var i = 0; i < funcs.length; i++) (function (passfunc) {\n        jStat.fn[passfunc] = function (arg, func) {\n          var tmpthis = this; // check for callback\n\n          if (func) {\n            setTimeout(function () {\n              func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n            }, 15);\n            return this;\n          }\n\n          if (typeof jStat[passfunc](this, arg) === 'number') return jStat[passfunc](this, arg);else return jStat(jStat[passfunc](this, arg));\n        };\n      })(funcs[i]);\n    })('add divide multiply subtract dot pow exp log abs norm angle'.split(' '));\n  })(jStat, Math);\n\n  (function (jStat, Math) {\n    var slice = [].slice;\n    var isNumber = jStat.utils.isNumber;\n    var isArray = jStat.utils.isArray; // flag==true denotes use of sample standard deviation\n    // Z Statistics\n\n    jStat.extend({\n      // 2 different parameter lists:\n      // (value, mean, sd)\n      // (value, array, flag)\n      zscore: function zscore() {\n        var args = slice.call(arguments);\n\n        if (isNumber(args[1])) {\n          return (args[0] - args[1]) / args[2];\n        }\n\n        return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n      },\n      // 3 different paramter lists:\n      // (value, mean, sd, sides)\n      // (zscore, sides)\n      // (value, array, sides, flag)\n      ztest: function ztest() {\n        var args = slice.call(arguments);\n        var z;\n\n        if (isArray(args[1])) {\n          // (value, array, sides, flag)\n          z = jStat.zscore(args[0], args[1], args[3]);\n          return args[2] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n        } else {\n          if (args.length > 2) {\n            // (value, mean, sd, sides)\n            z = jStat.zscore(args[0], args[1], args[2]);\n            return args[3] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n          } else {\n            // (zscore, sides)\n            z = args[0];\n            return args[1] === 1 ? jStat.normal.cdf(-Math.abs(z), 0, 1) : jStat.normal.cdf(-Math.abs(z), 0, 1) * 2;\n          }\n        }\n      }\n    });\n    jStat.extend(jStat.fn, {\n      zscore: function zscore(value, flag) {\n        return (value - this.mean()) / this.stdev(flag);\n      },\n      ztest: function ztest(value, sides, flag) {\n        var zscore = Math.abs(this.zscore(value, flag));\n        return sides === 1 ? jStat.normal.cdf(-zscore, 0, 1) : jStat.normal.cdf(-zscore, 0, 1) * 2;\n      }\n    }); // T Statistics\n\n    jStat.extend({\n      // 2 parameter lists\n      // (value, mean, sd, n)\n      // (value, array)\n      tscore: function tscore() {\n        var args = slice.call(arguments);\n        return args.length === 4 ? (args[0] - args[1]) / (args[2] / Math.sqrt(args[3])) : (args[0] - jStat.mean(args[1])) / (jStat.stdev(args[1], true) / Math.sqrt(args[1].length));\n      },\n      // 3 different paramter lists:\n      // (value, mean, sd, n, sides)\n      // (tscore, n, sides)\n      // (value, array, sides)\n      ttest: function ttest() {\n        var args = slice.call(arguments);\n        var tscore;\n\n        if (args.length === 5) {\n          tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n          return args[4] === 1 ? jStat.studentt.cdf(-tscore, args[3] - 1) : jStat.studentt.cdf(-tscore, args[3] - 1) * 2;\n        }\n\n        if (isNumber(args[1])) {\n          tscore = Math.abs(args[0]);\n          return args[2] == 1 ? jStat.studentt.cdf(-tscore, args[1] - 1) : jStat.studentt.cdf(-tscore, args[1] - 1) * 2;\n        }\n\n        tscore = Math.abs(jStat.tscore(args[0], args[1]));\n        return args[2] == 1 ? jStat.studentt.cdf(-tscore, args[1].length - 1) : jStat.studentt.cdf(-tscore, args[1].length - 1) * 2;\n      }\n    });\n    jStat.extend(jStat.fn, {\n      tscore: function tscore(value) {\n        return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n      },\n      ttest: function ttest(value, sides) {\n        return sides === 1 ? 1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols() - 1) : jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols() - 1) * 2;\n      }\n    }); // F Statistics\n\n    jStat.extend({\n      // Paramter list is as follows:\n      // (array1, array2, array3, ...)\n      // or it is an array of arrays\n      // array of arrays conversion\n      anovafscore: function anovafscore() {\n        var args = slice.call(arguments),\n            expVar,\n            sample,\n            sampMean,\n            sampSampMean,\n            tmpargs,\n            unexpVar,\n            i,\n            j;\n\n        if (args.length === 1) {\n          tmpargs = new Array(args[0].length);\n\n          for (i = 0; i < args[0].length; i++) {\n            tmpargs[i] = args[0][i];\n          }\n\n          args = tmpargs;\n        } // Builds sample array\n\n\n        sample = new Array();\n\n        for (i = 0; i < args.length; i++) {\n          sample = sample.concat(args[i]);\n        }\n\n        sampMean = jStat.mean(sample); // Computes the explained variance\n\n        expVar = 0;\n\n        for (i = 0; i < args.length; i++) {\n          expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n        }\n\n        expVar /= args.length - 1; // Computes unexplained variance\n\n        unexpVar = 0;\n\n        for (i = 0; i < args.length; i++) {\n          sampSampMean = jStat.mean(args[i]);\n\n          for (j = 0; j < args[i].length; j++) {\n            unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n          }\n        }\n\n        unexpVar /= sample.length - args.length;\n        return expVar / unexpVar;\n      },\n      // 2 different paramter setups\n      // (array1, array2, array3, ...)\n      // (anovafscore, df1, df2)\n      anovaftest: function anovaftest() {\n        var args = slice.call(arguments),\n            df1,\n            df2,\n            n,\n            i;\n\n        if (isNumber(args[0])) {\n          return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n        }\n\n        var anovafscore = jStat.anovafscore(args);\n        df1 = args.length - 1;\n        n = 0;\n\n        for (i = 0; i < args.length; i++) {\n          n = n + args[i].length;\n        }\n\n        df2 = n - df1 - 1;\n        return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n      },\n      ftest: function ftest(fscore, df1, df2) {\n        return 1 - jStat.centralF.cdf(fscore, df1, df2);\n      }\n    });\n    jStat.extend(jStat.fn, {\n      anovafscore: function anovafscore() {\n        return jStat.anovafscore(this.toArray());\n      },\n      anovaftes: function anovaftes() {\n        var n = 0;\n        var i;\n\n        for (i = 0; i < this.length; i++) {\n          n = n + this[i].length;\n        }\n\n        return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n      }\n    }); // Tukey's range test\n\n    jStat.extend({\n      // 2 parameter lists\n      // (mean1, mean2, n1, n2, sd)\n      // (array1, array2, sd)\n      qscore: function qscore() {\n        var args = slice.call(arguments);\n        var mean1, mean2, n1, n2, sd;\n\n        if (isNumber(args[0])) {\n          mean1 = args[0];\n          mean2 = args[1];\n          n1 = args[2];\n          n2 = args[3];\n          sd = args[4];\n        } else {\n          mean1 = jStat.mean(args[0]);\n          mean2 = jStat.mean(args[1]);\n          n1 = args[0].length;\n          n2 = args[1].length;\n          sd = args[2];\n        }\n\n        return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n      },\n      // 3 different parameter lists:\n      // (qscore, n, k)\n      // (mean1, mean2, n1, n2, sd, n, k)\n      // (array1, array2, sd, n, k)\n      qtest: function qtest() {\n        var args = slice.call(arguments);\n        var qscore;\n\n        if (args.length === 3) {\n          qscore = args[0];\n          args = args.slice(1);\n        } else if (args.length === 7) {\n          qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n          args = args.slice(5);\n        } else {\n          qscore = jStat.qscore(args[0], args[1], args[2]);\n          args = args.slice(3);\n        }\n\n        var n = args[0];\n        var k = args[1];\n        return 1 - jStat.tukey.cdf(qscore, k, n - k);\n      },\n      tukeyhsd: function tukeyhsd(arrays) {\n        var sd = jStat.pooledstdev(arrays);\n        var means = arrays.map(function (arr) {\n          return jStat.mean(arr);\n        });\n        var n = arrays.reduce(function (n, arr) {\n          return n + arr.length;\n        }, 0);\n        var results = [];\n\n        for (var i = 0; i < arrays.length; ++i) {\n          for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n          }\n        }\n\n        return results;\n      }\n    }); // Error Bounds\n\n    jStat.extend({\n      // 2 different parameter setups\n      // (value, alpha, sd, n)\n      // (value, alpha, array)\n      normalci: function normalci() {\n        var args = slice.call(arguments),\n            ans = new Array(2),\n            change;\n\n        if (args.length === 4) {\n          change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) * args[2] / Math.sqrt(args[3]));\n        } else {\n          change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) * jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n        }\n\n        ans[0] = args[0] - change;\n        ans[1] = args[0] + change;\n        return ans;\n      },\n      // 2 different parameter setups\n      // (value, alpha, sd, n)\n      // (value, alpha, array)\n      tci: function tci() {\n        var args = slice.call(arguments),\n            ans = new Array(2),\n            change;\n\n        if (args.length === 4) {\n          change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) * args[2] / Math.sqrt(args[3]));\n        } else {\n          change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) * jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n        }\n\n        ans[0] = args[0] - change;\n        ans[1] = args[0] + change;\n        return ans;\n      },\n      significant: function significant(pvalue, alpha) {\n        return pvalue < alpha;\n      }\n    });\n    jStat.extend(jStat.fn, {\n      normalci: function normalci(value, alpha) {\n        return jStat.normalci(value, alpha, this.toArray());\n      },\n      tci: function tci(value, alpha) {\n        return jStat.tci(value, alpha, this.toArray());\n      }\n    }); // internal method for calculating the z-score for a difference of proportions test\n\n    function differenceOfProportions(p1, n1, p2, n2) {\n      if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n        throw new Error(\"Proportions should be greater than 0 and less than 1\");\n      }\n\n      var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n      var se = Math.sqrt(pooled * (1 - pooled) * (1 / n1 + 1 / n2));\n      return (p1 - p2) / se;\n    } // Difference of Proportions\n\n\n    jStat.extend(jStat.fn, {\n      oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n        var z = differenceOfProportions(p1, n1, p2, n2);\n        return jStat.ztest(z, 1);\n      },\n      twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n        var z = differenceOfProportions(p1, n1, p2, n2);\n        return jStat.ztest(z, 2);\n      }\n    });\n  })(jStat, Math);\n\n  jStat.models = function () {\n    function sub_regress(exog) {\n      var var_count = exog[0].length;\n      var modelList = jStat.arange(var_count).map(function (endog_index) {\n        var exog_index = jStat.arange(var_count).filter(function (i) {\n          return i !== endog_index;\n        });\n        return ols(jStat.col(exog, endog_index).map(function (x) {\n          return x[0];\n        }), jStat.col(exog, exog_index));\n      });\n      return modelList;\n    } // do OLS model regress\n    // exog have include const columns ,it will not generate it .In fact, exog is\n    // \"design matrix\" look at\n    //https://en.wikipedia.org/wiki/Design_matrix\n\n\n    function ols(endog, exog) {\n      var nobs = endog.length;\n      var df_model = exog[0].length - 1;\n      var df_resid = nobs - df_model - 1;\n      var coef = jStat.lstsq(exog, endog);\n      var predict = jStat.multiply(exog, coef.map(function (x) {\n        return [x];\n      })).map(function (p) {\n        return p[0];\n      });\n      var resid = jStat.subtract(endog, predict);\n      var ybar = jStat.mean(endog); // constant cause problem\n      // var SST = jStat.sum(endog.map(function(y) {\n      //   return Math.pow(y-ybar,2);\n      // }));\n\n      var SSE = jStat.sum(predict.map(function (f) {\n        return Math.pow(f - ybar, 2);\n      }));\n      var SSR = jStat.sum(endog.map(function (y, i) {\n        return Math.pow(y - predict[i], 2);\n      }));\n      var SST = SSE + SSR;\n      var R2 = SSE / SST;\n      return {\n        exog: exog,\n        endog: endog,\n        nobs: nobs,\n        df_model: df_model,\n        df_resid: df_resid,\n        coef: coef,\n        predict: predict,\n        resid: resid,\n        ybar: ybar,\n        SST: SST,\n        SSE: SSE,\n        SSR: SSR,\n        R2: R2\n      };\n    } // H0: b_I=0\n    // H1: b_I!=0\n\n\n    function t_test(model) {\n      var subModelList = sub_regress(model.exog); //var sigmaHat=jStat.stdev(model.resid);\n\n      var sigmaHat = Math.sqrt(model.SSR / model.df_resid);\n      var seBetaHat = subModelList.map(function (mod) {\n        var SST = mod.SST;\n        var R2 = mod.R2;\n        return sigmaHat / Math.sqrt(SST * (1 - R2));\n      });\n      var tStatistic = model.coef.map(function (coef, i) {\n        return (coef - 0) / seBetaHat[i];\n      });\n      var pValue = tStatistic.map(function (t) {\n        var leftppf = jStat.studentt.cdf(t, model.df_resid);\n        return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n      });\n      var c = jStat.studentt.inv(0.975, model.df_resid);\n      var interval95 = model.coef.map(function (coef, i) {\n        var d = c * seBetaHat[i];\n        return [coef - d, coef + d];\n      });\n      return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n      };\n    }\n\n    function F_test(model) {\n      var F_statistic = model.R2 / model.df_model / ((1 - model.R2) / model.df_resid);\n\n      var fcdf = function (x, n1, n2) {\n        return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2);\n      };\n\n      var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n      return {\n        F_statistic: F_statistic,\n        pvalue: pvalue\n      };\n    }\n\n    function ols_wrap(endog, exog) {\n      var model = ols(endog, exog);\n      var ttest = t_test(model);\n      var ftest = F_test(model); // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n      // Which matches the 'adjusted R^2' provided by R's lm package\n\n      var adjust_R2 = 1 - (1 - model.R2) * ((model.nobs - 1) / model.df_resid);\n      model.t = ttest;\n      model.f = ftest;\n      model.adjust_R2 = adjust_R2;\n      return model;\n    }\n\n    return {\n      ols: ols_wrap\n    };\n  }(); //To regress, simply build X matrix\n  //(append column of 1's) using\n  //buildxmatrix and build the Y\n  //matrix using buildymatrix\n  //(simply the transpose)\n  //and run regress.\n  //Regressions\n\n\n  jStat.extend({\n    buildxmatrix: function buildxmatrix() {\n      //Parameters will be passed in as such\n      //(array1,array2,array3,...)\n      //as (x1,x2,x3,...)\n      //needs to be (1,x1,x2,x3,...)\n      var matrixRows = new Array(arguments.length);\n\n      for (var i = 0; i < arguments.length; i++) {\n        var array = [1];\n        matrixRows[i] = array.concat(arguments[i]);\n      }\n\n      return jStat(matrixRows);\n    },\n    builddxmatrix: function builddxmatrix() {\n      //Paramters will be passed in as such\n      //([array1,array2,...]\n      var matrixRows = new Array(arguments[0].length);\n\n      for (var i = 0; i < arguments[0].length; i++) {\n        var array = [1];\n        matrixRows[i] = array.concat(arguments[0][i]);\n      }\n\n      return jStat(matrixRows);\n    },\n    buildjxmatrix: function buildjxmatrix(jMat) {\n      //Builds from jStat Matrix\n      var pass = new Array(jMat.length);\n\n      for (var i = 0; i < jMat.length; i++) {\n        pass[i] = jMat[i];\n      }\n\n      return jStat.builddxmatrix(pass);\n    },\n    buildymatrix: function buildymatrix(array) {\n      return jStat(array).transpose();\n    },\n    buildjymatrix: function buildjymatrix(jMat) {\n      return jMat.transpose();\n    },\n    matrixmult: function matrixmult(A, B) {\n      var i, j, k, result, sum;\n\n      if (A.cols() == B.rows()) {\n        if (B.rows() > 1) {\n          result = [];\n\n          for (i = 0; i < A.rows(); i++) {\n            result[i] = [];\n\n            for (j = 0; j < B.cols(); j++) {\n              sum = 0;\n\n              for (k = 0; k < A.cols(); k++) {\n                sum += A.toArray()[i][k] * B.toArray()[k][j];\n              }\n\n              result[i][j] = sum;\n            }\n          }\n\n          return jStat(result);\n        }\n\n        result = [];\n\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[j];\n            }\n\n            result[i][j] = sum;\n          }\n        }\n\n        return jStat(result);\n      }\n    },\n    //regress and regresst to be fixed\n    regress: function regress(jMatX, jMatY) {\n      //print(\"regressin!\");\n      //print(jMatX.toArray());\n      var innerinv = jStat.xtranspxinv(jMatX); //print(innerinv);\n\n      var xtransp = jMatX.transpose();\n      var next = jStat.matrixmult(jStat(innerinv), xtransp);\n      return jStat.matrixmult(next, jMatY);\n    },\n    regresst: function regresst(jMatX, jMatY, sides) {\n      var beta = jStat.regress(jMatX, jMatY);\n      var compile = {};\n      compile.anova = {};\n      var jMatYBar = jStat.jMatYBar(jMatX, beta);\n      compile.yBar = jMatYBar;\n      var yAverage = jMatY.mean();\n      compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n      compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n      compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n      compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n      compile.anova.mse = compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n      compile.anova.sst = jStat.sst(jMatY, yAverage);\n      compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n      compile.anova.r2 = 1 - compile.anova.sse / compile.anova.sst;\n      if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n      compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n      compile.anova.pvalue = jStat.anovaftest(compile.anova.fratio, jMatX[0].length - 1, jMatY.length - (jMatX[0].length - 1) - 1);\n      compile.anova.rmse = Math.sqrt(compile.anova.mse);\n      compile.anova.r2adj = 1 - compile.anova.mse / compile.anova.mst;\n      if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n      compile.stats = new Array(jMatX[0].length);\n      var covar = jStat.xtranspxinv(jMatX);\n      var sds, ts, ps;\n\n      for (var i = 0; i < beta.length; i++) {\n        sds = Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n        ts = Math.abs(beta[i] / sds);\n        ps = jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n        compile.stats[i] = [beta[i], sds, ts, ps];\n      }\n\n      compile.regress = beta;\n      return compile;\n    },\n    xtranspx: function xtranspx(jMatX) {\n      return jStat.matrixmult(jMatX.transpose(), jMatX);\n    },\n    xtranspxinv: function xtranspxinv(jMatX) {\n      var inner = jStat.matrixmult(jMatX.transpose(), jMatX);\n      var innerinv = jStat.inv(inner);\n      return innerinv;\n    },\n    jMatYBar: function jMatYBar(jMatX, beta) {\n      var yBar = jStat.matrixmult(jMatX, beta);\n      return new jStat(yBar);\n    },\n    residuals: function residuals(jMatY, jMatYBar) {\n      return jStat.matrixsubtract(jMatY, jMatYBar);\n    },\n    ssr: function ssr(jMatYBar, yAverage) {\n      var ssr = 0;\n\n      for (var i = 0; i < jMatYBar.length; i++) {\n        ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n      }\n\n      return ssr;\n    },\n    sse: function sse(jMatY, jMatYBar) {\n      var sse = 0;\n\n      for (var i = 0; i < jMatY.length; i++) {\n        sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n      }\n\n      return sse;\n    },\n    sst: function sst(jMatY, yAverage) {\n      var sst = 0;\n\n      for (var i = 0; i < jMatY.length; i++) {\n        sst += Math.pow(jMatY[i] - yAverage, 2);\n      }\n\n      return sst;\n    },\n    matrixsubtract: function matrixsubtract(A, B) {\n      var ans = new Array(A.length);\n\n      for (var i = 0; i < A.length; i++) {\n        ans[i] = new Array(A[i].length);\n\n        for (var j = 0; j < A[i].length; j++) {\n          ans[i][j] = A[i][j] - B[i][j];\n        }\n      }\n\n      return jStat(ans);\n    }\n  }); // Make it compatible with previous version.\n\n  jStat.jStat = jStat;\n  return jStat;\n});","map":{"version":3,"sources":["/home/crawlins/IdeaProjects/IOTAVis/reactClient/node_modules/jStat/dist/jstat.js"],"names":["window","factory","exports","module","define","amd","jStat","Math","undefined","console","warn","concat","Array","prototype","slice","toString","Object","calcRdx","n","m","val","pow","log","LOG10E","isArray","arg","call","isFunction","isNumber","toVector","arr","apply","_init","arguments","fn","args","map","i","length","seq","toArray","constructor","utils","_random_fn","random","setRandom","TypeError","extend","obj","j","rows","cols","dimensions","row","index","rowa","col","submat","arange","forEach","ind","column","cola","a","diag","nrow","res","antidiag","transpose","objArr","push","func","toAlter","ncol","cumreduce","alter","create","retZero","zeros","retOne","ones","rand","retIdent","identity","symmetric","size","clear","min","max","hival","step","current","cnt","start","end","rl","_slice","list","copy","rcSlice","colSlice","rowSlice","sliceAssign","A","B","nl","ml","diagonal","diagArray","mat","t","jProto","sort","splice","funcs","passfunc","self","results","setTimeout","split","ascNum","b","clip","sum","sumsqrd","sumsqerr","mean","tmp","sumrow","product","prod","low","high","unique","hash","_arr","meansqerr","geomean","median","arrlen","cumsum","cumprod","diff","diffs","arrLen","rank","sorted","ranks","first","indexOf","last","lastIndexOf","mode","count","maxCount","numMaxCount","mode_arr","range","variance","flag","pooledvariance","reduce","samples","deviation","dev","stdev","sqrt","pooledstdev","meandev","abs","meddev","coeffvar","quartiles","round","quantiles","quantilesArray","alphap","betap","sortedArray","quantileVals","p","aleph","k","gamma","floor","percentile","exclusive","realIndex","parseInt","frac","percentileOfScore","score","kind","counter","len","strict","value","histogram","binCnt","binWidth","bins","covariance","arr1","arr2","u","v","arr1Len","sq_dev","corrcoeff","spearmancoeff","stanMoment","mu","sigma","skewSum","skewness","kurtosis","fullbool","tmpthis","callbackFunction","argsToPass","curriedFunction","vector","gammaln","x","cof","ser","xx","y","gammafn","q","fact","xden","xnum","z","yi","PI","sin","Infinity","gammap","lowRegGamma","aln","ap","del","c","d","h","ITMAX","an","NaN","exp","factorialln","factorial","combination","combinationln","permutation","betafn","betaln","betacf","fpmin","qab","qap","qam","m2","aa","gammapinv","a1","EPS","gln","err","pp","lna1","afac","erf","isneg","dd","ty","erfc","erfcinv","ibetainv","b1","lna","lnb","al","w","ibeta","bt","randn","randg","shape","oalph","a2","callee","_a","_b","_c","newthis","data","sample","vals","fnfunc","beta","pdf","alpha","cdf","inv","centralF","df1","df2","f","binomial","x1","x2","cauchy","local","scale","atan","tan","chisquare","dof","exponential","rate","invgamma","kumaraswamy","Error","lognormal","noncentralt","ncp","tol","studentt","min_iterations","flip","prob","normal","lastvalue","std","pareto","SQRT2","dof2","weibull","uniform","betinc","eps","a0","b0","m9","c9","betacdf","s","negbin","r","hypgeom","N","scaledPDF","samplesDone","scaledCDF","factor","poisson","l","sumarr","L","triangular","arcsine","asin","cos","laplaceSign","laplace","tukeyWprob","rr","cc","nleg","ihalf","C1","C2","C3","bb","wlar","wincr1","wincr2","xleg","aleg","qsqz","pr_w","wincr","blb","binc","bub","einsum","cc1","wi","elsum","jj","ac","qexpo","pplus","pminus","rinsum","tukeyQinv","p0","q0","p1","q1","p2","q2","p3","q3","p4","q4","c1","c2","c3","c4","c5","vmax","ps","tukey","nmeans","df","nlegq","ihalfq","eps1","eps2","dhaf","dquar","deigh","dlarg","ulen1","ulen2","ulen3","ulen4","xlegq","alegq","Number","isFinite","f2","f2lf","f21","ff4","ulen","ans","otsum","twa1","t1","wprb","rotsum","maxiter","x0","valx0","valx1","iter","xabs","isUsable","add","subtract","divide","multiply","nrescols","rescols","outer","dot","left","right","norm","nnorm","isNaN","angle","acos","aug","newarr","gauss_jordan","result","det","alen","alend","rowshift","colshift","mrow","mcol","gauss_elimination","maug","pivot","temp","y2","maxrow","triaUpSolve","parts","matrix_mode","triaLowSolve","lu","R","cholesky","T","gauss_jacobi","xv","xk","gauss_seidel","SOR","householder","QR","qr2","lstsq","R_I","I","Aj","cAi","Ij","cIi","qr_solve","array_mode","Q","attrs","Q1","R1","RI","Q2","jacobi","condition","e","ev","maxim","theta","rungekutta","t_j","u_j","order","k1","k2","u_j1","k3","k4","romberg","h1","g","richardson","X","pos","h_min","y1","simpson","hermite","F","dF","dl","lagrange","cubic_spline","sq","gauss_quadrature","PCA","temp1","D","temp2","Y","Bt","C","V","Vt","zscore","ztest","sides","tscore","ttest","anovafscore","expVar","sampMean","sampSampMean","tmpargs","unexpVar","anovaftest","ftest","fscore","anovaftes","qscore","mean1","mean2","n1","n2","sd","qtest","tukeyhsd","arrays","means","normalci","change","tci","significant","pvalue","differenceOfProportions","pooled","se","oneSidedDifferenceOfProportions","twoSidedDifferenceOfProportions","models","sub_regress","exog","var_count","modelList","endog_index","exog_index","filter","ols","endog","nobs","df_model","df_resid","coef","predict","resid","ybar","SSE","SSR","SST","R2","t_test","model","subModelList","sigmaHat","seBetaHat","mod","tStatistic","pValue","leftppf","interval95","F_test","F_statistic","fcdf","ols_wrap","adjust_R2","buildxmatrix","matrixRows","array","builddxmatrix","buildjxmatrix","jMat","pass","buildymatrix","buildjymatrix","matrixmult","regress","jMatX","jMatY","innerinv","xtranspxinv","xtransp","next","regresst","compile","anova","jMatYBar","yBar","yAverage","residuals","ssr","msr","sse","mse","sst","mst","r2","fratio","rmse","r2adj","stats","covar","sds","ts","xtranspx","inner","matrixsubtract"],"mappings":"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","sourcesContent":["(function (window, factory) {\n    if (typeof exports === 'object') {\n        module.exports = factory();\n    } else if (typeof define === 'function' && define.amd) {\n        define(factory);\n    } else {\n        window.jStat = factory();\n    }\n})(this, function () {\nvar jStat = (function(Math, undefined) {\n\nconsole.warn('The npm package jStat is no longer maintained. Instead use jstat (lowercase).');\nconsole.warn('Visit https://www.npmjs.com/package/jstat for more information.');\n\n// For quick reference.\nvar concat = Array.prototype.concat;\nvar slice = Array.prototype.slice;\nvar toString = Object.prototype.toString;\n\n// Calculate correction for IEEE error\n// TODO: This calculation can be improved.\nfunction calcRdx(n, m) {\n  var val = n > m ? n : m;\n  return Math.pow(10,\n                  17 - ~~(Math.log(((val > 0) ? val : -val)) * Math.LOG10E));\n}\n\n\nvar isArray = Array.isArray || function isArray(arg) {\n  return toString.call(arg) === '[object Array]';\n};\n\n\nfunction isFunction(arg) {\n  return toString.call(arg) === '[object Function]';\n}\n\n\nfunction isNumber(arg) {\n  return typeof arg === 'number' && arg === arg;\n}\n\n\n// Converts the jStat matrix to vector.\nfunction toVector(arr) {\n  return concat.apply([], arr);\n}\n\n\n// The one and only jStat constructor.\nfunction jStat() {\n  return new jStat._init(arguments);\n}\n\n\n// TODO: Remove after all references in src files have been removed.\njStat.fn = jStat.prototype;\n\n\n// By separating the initializer from the constructor it's easier to handle\n// always returning a new instance whether \"new\" was used or not.\njStat._init = function _init(args) {\n  // If first argument is an array, must be vector or matrix.\n  if (isArray(args[0])) {\n    // Check if matrix.\n    if (isArray(args[0][0])) {\n      // See if a mapping function was also passed.\n      if (isFunction(args[1]))\n        args[0] = jStat.map(args[0], args[1]);\n      // Iterate over each is faster than this.push.apply(this, args[0].\n      for (var i = 0; i < args[0].length; i++)\n        this[i] = args[0][i];\n      this.length = args[0].length;\n\n    // Otherwise must be a vector.\n    } else {\n      this[0] = isFunction(args[1]) ? jStat.map(args[0], args[1]) : args[0];\n      this.length = 1;\n    }\n\n  // If first argument is number, assume creation of sequence.\n  } else if (isNumber(args[0])) {\n    this[0] = jStat.seq.apply(null, args);\n    this.length = 1;\n\n  // Handle case when jStat object is passed to jStat.\n  } else if (args[0] instanceof jStat) {\n    // Duplicate the object and pass it back.\n    return jStat(args[0].toArray());\n\n  // Unexpected argument value, return empty jStat object.\n  // TODO: This is strange behavior. Shouldn't this throw or some such to let\n  // the user know they had bad arguments?\n  } else {\n    this[0] = [];\n    this.length = 1;\n  }\n\n  return this;\n};\njStat._init.prototype = jStat.prototype;\njStat._init.constructor = jStat;\n\n\n// Utility functions.\n// TODO: for internal use only?\njStat.utils = {\n  calcRdx: calcRdx,\n  isArray: isArray,\n  isFunction: isFunction,\n  isNumber: isNumber,\n  toVector: toVector\n};\n\n\njStat._random_fn = Math.random;\njStat.setRandom = function setRandom(fn) {\n  if (typeof fn !== 'function')\n    throw new TypeError('fn is not a function');\n  jStat._random_fn = fn;\n};\n\n\n// Easily extend the jStat object.\n// TODO: is this seriously necessary?\njStat.extend = function extend(obj) {\n  var i, j;\n\n  if (arguments.length === 1) {\n    for (j in obj)\n      jStat[j] = obj[j];\n    return this;\n  }\n\n  for (i = 1; i < arguments.length; i++) {\n    for (j in arguments[i])\n      obj[j] = arguments[i][j];\n  }\n\n  return obj;\n};\n\n\n// Returns the number of rows in the matrix.\njStat.rows = function rows(arr) {\n  return arr.length || 1;\n};\n\n\n// Returns the number of columns in the matrix.\njStat.cols = function cols(arr) {\n  return arr[0].length || 1;\n};\n\n\n// Returns the dimensions of the object { rows: i, cols: j }\njStat.dimensions = function dimensions(arr) {\n  return {\n    rows: jStat.rows(arr),\n    cols: jStat.cols(arr)\n  };\n};\n\n\n// Returns a specified row as a vector or return a sub matrix by pick some rows\njStat.row = function row(arr, index) {\n  if (isArray(index)) {\n    return index.map(function(i) {\n      return jStat.row(arr, i);\n    })\n  }\n  return arr[index];\n};\n\n\n// return row as array\n// rowa([[1,2],[3,4]],0) -> [1,2]\njStat.rowa = function rowa(arr, i) {\n  return jStat.row(arr, i);\n};\n\n\n// Returns the specified column as a vector or return a sub matrix by pick some\n// columns\njStat.col = function col(arr, index) {\n  if (isArray(index)) {\n    var submat = jStat.arange(arr.length).map(function() {\n      return new Array(index.length);\n    });\n    index.forEach(function(ind, i){\n      jStat.arange(arr.length).forEach(function(j) {\n        submat[j][i] = arr[j][ind];\n      });\n    });\n    return submat;\n  }\n  var column = new Array(arr.length);\n  for (var i = 0; i < arr.length; i++)\n    column[i] = [arr[i][index]];\n  return column;\n};\n\n\n// return column as array\n// cola([[1,2],[3,4]],0) -> [1,3]\njStat.cola = function cola(arr, i) {\n  return jStat.col(arr, i).map(function(a){ return a[0] });\n};\n\n\n// Returns the diagonal of the matrix\njStat.diag = function diag(arr) {\n  var nrow = jStat.rows(arr);\n  var res = new Array(nrow);\n  for (var row = 0; row < nrow; row++)\n    res[row] = [arr[row][row]];\n  return res;\n};\n\n\n// Returns the anti-diagonal of the matrix\njStat.antidiag = function antidiag(arr) {\n  var nrow = jStat.rows(arr) - 1;\n  var res = new Array(nrow);\n  for (var i = 0; nrow >= 0; nrow--, i++)\n    res[i] = [arr[i][nrow]];\n  return res;\n};\n\n// Transpose a matrix or array.\njStat.transpose = function transpose(arr) {\n  var obj = [];\n  var objArr, rows, cols, j, i;\n\n  // Make sure arr is in matrix format.\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  rows = arr.length;\n  cols = arr[0].length;\n\n  for (i = 0; i < cols; i++) {\n    objArr = new Array(rows);\n    for (j = 0; j < rows; j++)\n      objArr[j] = arr[j][i];\n    obj.push(objArr);\n  }\n\n  // If obj is vector, return only single array.\n  return obj.length === 1 ? obj[0] : obj;\n};\n\n\n// Map a function to an array or array of arrays.\n// \"toAlter\" is an internal variable.\njStat.map = function map(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    for (col = 0; col < ncol; col++)\n      res[row][col] = func(arr[row][col], row, col);\n  }\n\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Cumulatively combine the elements of an array or array of arrays using a function.\njStat.cumreduce = function cumreduce(arr, func, toAlter) {\n  var row, nrow, ncol, res, col;\n\n  if (!isArray(arr[0]))\n    arr = [arr];\n\n  nrow = arr.length;\n  ncol = arr[0].length;\n  res = toAlter ? arr : new Array(nrow);\n\n  for (row = 0; row < nrow; row++) {\n    // if the row doesn't exist, create it\n    if (!res[row])\n      res[row] = new Array(ncol);\n    if (ncol > 0)\n      res[row][0] = arr[row][0];\n    for (col = 1; col < ncol; col++)\n      res[row][col] = func(res[row][col-1], arr[row][col]);\n  }\n  return res.length === 1 ? res[0] : res;\n};\n\n\n// Destructively alter an array.\njStat.alter = function alter(arr, func) {\n  return jStat.map(arr, func, true);\n};\n\n\n// Generate a rows x cols matrix according to the supplied function.\njStat.create = function  create(rows, cols, func) {\n  var res = new Array(rows);\n  var i, j;\n\n  if (isFunction(cols)) {\n    func = cols;\n    cols = rows;\n  }\n\n  for (i = 0; i < rows; i++) {\n    res[i] = new Array(cols);\n    for (j = 0; j < cols; j++)\n      res[i][j] = func(i, j);\n  }\n\n  return res;\n};\n\n\nfunction retZero() { return 0; }\n\n\n// Generate a rows x cols matrix of zeros.\njStat.zeros = function zeros(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retZero);\n};\n\n\nfunction retOne() { return 1; }\n\n\n// Generate a rows x cols matrix of ones.\njStat.ones = function ones(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retOne);\n};\n\n\n// Generate a rows x cols matrix of uniformly random numbers.\njStat.rand = function rand(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, jStat._random_fn);\n};\n\n\nfunction retIdent(i, j) { return i === j ? 1 : 0; }\n\n\n// Generate an identity matrix of size row x cols.\njStat.identity = function identity(rows, cols) {\n  if (!isNumber(cols))\n    cols = rows;\n  return jStat.create(rows, cols, retIdent);\n};\n\n\n// Tests whether a matrix is symmetric\njStat.symmetric = function symmetric(arr) {\n  var size = arr.length;\n  var row, col;\n\n  if (arr.length !== arr[0].length)\n    return false;\n\n  for (row = 0; row < size; row++) {\n    for (col = 0; col < size; col++)\n      if (arr[col][row] !== arr[row][col])\n        return false;\n  }\n\n  return true;\n};\n\n\n// Set all values to zero.\njStat.clear = function clear(arr) {\n  return jStat.alter(arr, retZero);\n};\n\n\n// Generate sequence.\njStat.seq = function seq(min, max, length, func) {\n  if (!isFunction(func))\n    func = false;\n\n  var arr = [];\n  var hival = calcRdx(min, max);\n  var step = (max * hival - min * hival) / ((length - 1) * hival);\n  var current = min;\n  var cnt;\n\n  // Current is assigned using a technique to compensate for IEEE error.\n  // TODO: Needs better implementation.\n  for (cnt = 0;\n       current <= max && cnt < length;\n       cnt++, current = (min * hival + step * hival * cnt) / hival) {\n    arr.push((func ? func(current, cnt) : current));\n  }\n\n  return arr;\n};\n\n\n// arange(5) -> [0,1,2,3,4]\n// arange(1,5) -> [1,2,3,4]\n// arange(5,1,-1) -> [5,4,3,2]\njStat.arange = function arange(start, end, step) {\n  var rl = [];\n  var i;\n  step = step || 1;\n  if (end === undefined) {\n    end = start;\n    start = 0;\n  }\n  if (start === end || step === 0) {\n    return [];\n  }\n  if (start < end && step < 0) {\n    return [];\n  }\n  if (start > end && step > 0) {\n    return [];\n  }\n  if (step > 0) {\n    for (i = start; i < end; i += step) {\n      rl.push(i);\n    }\n  } else {\n    for (i = start; i > end; i += step) {\n      rl.push(i);\n    }\n  }\n  return rl;\n};\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// slice(A,{row:{end:2},col:{start:1}}) -> [[2,3],[5,6]]\n// slice(A,1,{start:1}) -> [5,6]\n// as numpy code A[:2,1:]\njStat.slice = (function(){\n  function _slice(list, start, end, step) {\n    // note it's not equal to range.map mode it's a bug\n    var i;\n    var rl = [];\n    var length = list.length;\n    if (start === undefined && end === undefined && step === undefined) {\n      return jStat.copy(list);\n    }\n\n    start = start || 0;\n    end = end || list.length;\n    start = start >= 0 ? start : length + start;\n    end = end >= 0 ? end : length + end;\n    step = step || 1;\n    if (start === end || step === 0) {\n      return [];\n    }\n    if (start < end && step < 0) {\n      return [];\n    }\n    if (start > end && step > 0) {\n      return [];\n    }\n    if (step > 0) {\n      for (i = start; i < end; i += step) {\n        rl.push(list[i]);\n      }\n    } else {\n      for (i = start; i > end;i += step) {\n        rl.push(list[i]);\n      }\n    }\n    return rl;\n  }\n\n  function slice(list, rcSlice) {\n    var colSlice, rowSlice;\n    rcSlice = rcSlice || {};\n    if (isNumber(rcSlice.row)) {\n      if (isNumber(rcSlice.col))\n        return list[rcSlice.row][rcSlice.col];\n      var row = jStat.rowa(list, rcSlice.row);\n      colSlice = rcSlice.col || {};\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    }\n\n    if (isNumber(rcSlice.col)) {\n      var col = jStat.cola(list, rcSlice.col);\n      rowSlice = rcSlice.row || {};\n      return _slice(col, rowSlice.start, rowSlice.end, rowSlice.step);\n    }\n\n    rowSlice = rcSlice.row || {};\n    colSlice = rcSlice.col || {};\n    var rows = _slice(list, rowSlice.start, rowSlice.end, rowSlice.step);\n    return rows.map(function(row) {\n      return _slice(row, colSlice.start, colSlice.end, colSlice.step);\n    });\n  }\n\n  return slice;\n}());\n\n\n// A=[[1,2,3],[4,5,6],[7,8,9]]\n// sliceAssign(A,{row:{start:1},col:{start:1}},[[0,0],[0,0]])\n// A=[[1,2,3],[4,0,0],[7,0,0]]\njStat.sliceAssign = function sliceAssign(A, rcSlice, B) {\n  var nl, ml;\n  if (isNumber(rcSlice.row)) {\n    if (isNumber(rcSlice.col))\n      return A[rcSlice.row][rcSlice.col] = B;\n    rcSlice.col = rcSlice.col || {};\n    rcSlice.col.start = rcSlice.col.start || 0;\n    rcSlice.col.end = rcSlice.col.end || A[0].length;\n    rcSlice.col.step = rcSlice.col.step || 1;\n    nl = jStat.arange(rcSlice.col.start,\n                          Math.min(A.length, rcSlice.col.end),\n                          rcSlice.col.step);\n    var m = rcSlice.row;\n    nl.forEach(function(n, i) {\n      A[m][n] = B[i];\n    });\n    return A;\n  }\n\n  if (isNumber(rcSlice.col)) {\n    rcSlice.row = rcSlice.row || {};\n    rcSlice.row.start = rcSlice.row.start || 0;\n    rcSlice.row.end = rcSlice.row.end || A.length;\n    rcSlice.row.step = rcSlice.row.step || 1;\n    ml = jStat.arange(rcSlice.row.start,\n                          Math.min(A[0].length, rcSlice.row.end),\n                          rcSlice.row.step);\n    var n = rcSlice.col;\n    ml.forEach(function(m, j) {\n      A[m][n] = B[j];\n    });\n    return A;\n  }\n\n  if (B[0].length === undefined) {\n    B = [B];\n  }\n  rcSlice.row.start = rcSlice.row.start || 0;\n  rcSlice.row.end = rcSlice.row.end || A.length;\n  rcSlice.row.step = rcSlice.row.step || 1;\n  rcSlice.col.start = rcSlice.col.start || 0;\n  rcSlice.col.end = rcSlice.col.end || A[0].length;\n  rcSlice.col.step = rcSlice.col.step || 1;\n  ml = jStat.arange(rcSlice.row.start,\n                        Math.min(A.length, rcSlice.row.end),\n                        rcSlice.row.step);\n  nl = jStat.arange(rcSlice.col.start,\n                        Math.min(A[0].length, rcSlice.col.end),\n                        rcSlice.col.step);\n  ml.forEach(function(m, i) {\n    nl.forEach(function(n, j) {\n      A[m][n] = B[i][j];\n    });\n  });\n  return A;\n};\n\n\n// [1,2,3] ->\n// [[1,0,0],[0,2,0],[0,0,3]]\njStat.diagonal = function diagonal(diagArray) {\n  var mat = jStat.zeros(diagArray.length, diagArray.length);\n  diagArray.forEach(function(t, i) {\n    mat[i][i] = t;\n  });\n  return mat;\n};\n\n\n// return copy of A\njStat.copy = function copy(A) {\n  return A.map(function(row) {\n    if (isNumber(row))\n      return row;\n    return row.map(function(t) {\n      return t;\n    });\n  });\n};\n\n\n// TODO: Go over this entire implementation. Seems a tragic waste of resources\n// doing all this work. Instead, and while ugly, use new Function() to generate\n// a custom function for each static method.\n\n// Quick reference.\nvar jProto = jStat.prototype;\n\n// Default length.\njProto.length = 0;\n\n// For internal use only.\n// TODO: Check if they're actually used, and if they are then rename them\n// to _*\njProto.push = Array.prototype.push;\njProto.sort = Array.prototype.sort;\njProto.splice = Array.prototype.splice;\njProto.slice = Array.prototype.slice;\n\n\n// Return a clean array.\njProto.toArray = function toArray() {\n  return this.length > 1 ? slice.call(this) : slice.call(this)[0];\n};\n\n\n// Map a function to a matrix or vector.\njProto.map = function map(func, toAlter) {\n  return jStat(jStat.map(this, func, toAlter));\n};\n\n\n// Cumulatively combine the elements of a matrix or vector using a function.\njProto.cumreduce = function cumreduce(func, toAlter) {\n  return jStat(jStat.cumreduce(this, func, toAlter));\n};\n\n\n// Destructively alter an array.\njProto.alter = function alter(func) {\n  jStat.alter(this, func);\n  return this;\n};\n\n\n// Extend prototype with methods that have no argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(func) {\n      var self = this,\n      results;\n      // Check for callback.\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self));\n        });\n        return this;\n      }\n      results = jStat[passfunc](this);\n      return isArray(results) ? jStat(results) : results;\n    };\n  })(funcs[i]);\n})('transpose clear symmetric rows cols dimensions diag antidiag'.split(' '));\n\n\n// Extend prototype with methods that have one argument.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function(index, func) {\n      var self = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(self, jProto[passfunc].call(self, index));\n        });\n        return this;\n      }\n      return jStat(jStat[passfunc](this, index));\n    };\n  })(funcs[i]);\n})('row col'.split(' '));\n\n\n// Extend prototype with simple shortcut methods.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('create zeros ones rand identity'.split(' '));\n\n\n// Exposing jStat.\nreturn jStat;\n\n}(Math));\n(function(jStat, Math) {\n\nvar isFunction = jStat.utils.isFunction;\n\n// Ascending functions for sort\nfunction ascNum(a, b) { return a - b; }\n\nfunction clip(arg, min, max) {\n  return Math.max(min, Math.min(arg, max));\n}\n\n\n// sum of an array\njStat.sum = function sum(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n\n// sum squared\njStat.sumsqrd = function sumsqrd(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i] * arr[i];\n  return sum;\n};\n\n\n// sum of squared errors of prediction (SSE)\njStat.sumsqerr = function sumsqerr(arr) {\n  var mean = jStat.mean(arr);\n  var sum = 0;\n  var i = arr.length;\n  var tmp;\n  while (--i >= 0) {\n    tmp = arr[i] - mean;\n    sum += tmp * tmp;\n  }\n  return sum;\n};\n\n// sum of an array in each row\njStat.sumrow = function sumrow(arr) {\n  var sum = 0;\n  var i = arr.length;\n  while (--i >= 0)\n    sum += arr[i];\n  return sum;\n};\n\n// product of an array\njStat.product = function product(arr) {\n  var prod = 1;\n  var i = arr.length;\n  while (--i >= 0)\n    prod *= arr[i];\n  return prod;\n};\n\n\n// minimum value of an array\njStat.min = function min(arr) {\n  var low = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] < low)\n      low = arr[i];\n  return low;\n};\n\n\n// maximum value of an array\njStat.max = function max(arr) {\n  var high = arr[0];\n  var i = 0;\n  while (++i < arr.length)\n    if (arr[i] > high)\n      high = arr[i];\n  return high;\n};\n\n\n// unique values of an array\njStat.unique = function unique(arr) {\n  var hash = {}, _arr = [];\n  for(var i = 0; i < arr.length; i++) {\n    if (!hash[arr[i]]) {\n      hash[arr[i]] = true;\n      _arr.push(arr[i]);\n    }\n  }\n  return _arr;\n};\n\n\n// mean value of an array\njStat.mean = function mean(arr) {\n  return jStat.sum(arr) / arr.length;\n};\n\n\n// mean squared error (MSE)\njStat.meansqerr = function meansqerr(arr) {\n  return jStat.sumsqerr(arr) / arr.length;\n};\n\n\n// geometric mean of an array\njStat.geomean = function geomean(arr) {\n  return Math.pow(jStat.product(arr), 1 / arr.length);\n};\n\n\n// median of an array\njStat.median = function median(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  // check if array is even or odd, then return the appropriate\n  return !(arrlen & 1)\n    ? (_arr[(arrlen / 2) - 1 ] + _arr[(arrlen / 2)]) / 2\n    : _arr[(arrlen / 2) | 0 ];\n};\n\n\n// cumulative sum of an array\njStat.cumsum = function cumsum(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a + b; });\n};\n\n\n// cumulative product of an array\njStat.cumprod = function cumprod(arr) {\n  return jStat.cumreduce(arr, function (a, b) { return a * b; });\n};\n\n\n// successive differences of a sequence\njStat.diff = function diff(arr) {\n  var diffs = [];\n  var arrLen = arr.length;\n  var i;\n  for (i = 1; i < arrLen; i++)\n    diffs.push(arr[i] - arr[i - 1]);\n  return diffs;\n};\n\n\n// ranks of an array\njStat.rank = function (arr) {\n  var arrlen = arr.length;\n  var sorted = arr.slice().sort(ascNum);\n  var ranks = new Array(arrlen);\n  var val;\n  for (var i = 0; i < arrlen; i++) {\n    var first = sorted.indexOf(arr[i]);\n    var last = sorted.lastIndexOf(arr[i]);\n    if (first === last) {\n      val = first;\n    } else {\n      val = (first + last) / 2;\n    }\n    ranks[i] = val + 1;\n  }\n  return ranks;\n};\n\n\n// mode of an array\n// if there are multiple modes of an array, return all of them\n// is this the appropriate way of handling it?\njStat.mode = function mode(arr) {\n  var arrLen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  var count = 1;\n  var maxCount = 0;\n  var numMaxCount = 0;\n  var mode_arr = [];\n  var i;\n\n  for (i = 0; i < arrLen; i++) {\n    if (_arr[i] === _arr[i + 1]) {\n      count++;\n    } else {\n      if (count > maxCount) {\n        mode_arr = [_arr[i]];\n        maxCount = count;\n        numMaxCount = 0;\n      }\n      // are there multiple max counts\n      else if (count === maxCount) {\n        mode_arr.push(_arr[i]);\n        numMaxCount++;\n      }\n      // resetting count for new value in array\n      count = 1;\n    }\n  }\n\n  return numMaxCount === 0 ? mode_arr[0] : mode_arr;\n};\n\n\n// range of an array\njStat.range = function range(arr) {\n  return jStat.max(arr) - jStat.min(arr);\n};\n\n// variance of an array\n// flag = true indicates sample instead of population\njStat.variance = function variance(arr, flag) {\n  return jStat.sumsqerr(arr) / (arr.length - (flag ? 1 : 0));\n};\n\n// pooled variance of an array of arrays\njStat.pooledvariance = function pooledvariance(arr) {\n  var sumsqerr = arr.reduce(function (a, samples) {return a + jStat.sumsqerr(samples);}, 0);\n  var count = arr.reduce(function (a, samples) {return a + samples.length;}, 0);\n  return sumsqerr / (count - arr.length);\n};\n\n// deviation of an array\njStat.deviation = function (arr) {\n  var mean = jStat.mean(arr);\n  var arrlen = arr.length;\n  var dev = new Array(arrlen);\n  for (var i = 0; i < arrlen; i++) {\n    dev[i] = arr[i] - mean;\n  }\n  return dev;\n};\n\n// standard deviation of an array\n// flag = true indicates sample instead of population\njStat.stdev = function stdev(arr, flag) {\n  return Math.sqrt(jStat.variance(arr, flag));\n};\n\n// pooled standard deviation of an array of arrays\njStat.pooledstdev = function pooledstdev(arr) {\n  return Math.sqrt(jStat.pooledvariance(arr));\n};\n\n// mean deviation (mean absolute deviation) of an array\njStat.meandev = function meandev(arr) {\n  var mean = jStat.mean(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - mean));\n  }\n  return jStat.mean(a);\n};\n\n\n// median deviation (median absolute deviation) of an array\njStat.meddev = function meddev(arr) {\n  var median = jStat.median(arr);\n  var a = [];\n  for (var i = arr.length - 1; i >= 0; i--) {\n    a.push(Math.abs(arr[i] - median));\n  }\n  return jStat.median(a);\n};\n\n\n// coefficient of variation\njStat.coeffvar = function coeffvar(arr) {\n  return jStat.stdev(arr) / jStat.mean(arr);\n};\n\n\n// quartiles of an array\njStat.quartiles = function quartiles(arr) {\n  var arrlen = arr.length;\n  var _arr = arr.slice().sort(ascNum);\n  return [\n    _arr[ Math.round((arrlen) / 4) - 1 ],\n    _arr[ Math.round((arrlen) / 2) - 1 ],\n    _arr[ Math.round((arrlen) * 3 / 4) - 1 ]\n  ];\n};\n\n\n// Arbitary quantiles of an array. Direct port of the scipy.stats\n// implementation by Pierre GF Gerard-Marchant.\njStat.quantiles = function quantiles(arr, quantilesArray, alphap, betap) {\n  var sortedArray = arr.slice().sort(ascNum);\n  var quantileVals = [quantilesArray.length];\n  var n = arr.length;\n  var i, p, m, aleph, k, gamma;\n\n  if (typeof alphap === 'undefined')\n    alphap = 3 / 8;\n  if (typeof betap === 'undefined')\n    betap = 3 / 8;\n\n  for (i = 0; i < quantilesArray.length; i++) {\n    p = quantilesArray[i];\n    m = alphap + p * (1 - alphap - betap);\n    aleph = n * p + m;\n    k = Math.floor(clip(aleph, 1, n - 1));\n    gamma = clip(aleph - k, 0, 1);\n    quantileVals[i] = (1 - gamma) * sortedArray[k - 1] + gamma * sortedArray[k];\n  }\n\n  return quantileVals;\n};\n\n// Return the k-th percentile of values in a range, where k is in the range 0..1, inclusive.\n// Passing true for the exclusive parameter excludes both endpoints of the range.\njStat.percentile = function percentile(arr, k, exclusive) {\n  var _arr = arr.slice().sort(ascNum);\n  var realIndex = k * (_arr.length + (exclusive ? 1 : -1)) + (exclusive ? 0 : 1);\n  var index = parseInt(realIndex);\n  var frac = realIndex - index;\n  if (index + 1 < _arr.length) {\n    return _arr[index - 1] + frac * (_arr[index] - _arr[index - 1]);\n  } else {\n    return _arr[index - 1];\n  }\n}\n\n// The percentile rank of score in a given array. Returns the percentage\n// of all values in the input array that are less than (kind='strict') or\n// less or equal than (kind='weak') score. Default is weak.\njStat.percentileOfScore = function percentileOfScore(arr, score, kind) {\n  var counter = 0;\n  var len = arr.length;\n  var strict = false;\n  var value, i;\n\n  if (kind === 'strict')\n    strict = true;\n\n  for (i = 0; i < len; i++) {\n    value = arr[i];\n    if ((strict && value < score) ||\n        (!strict && value <= score)) {\n      counter++;\n    }\n  }\n\n  return counter / len;\n};\n\n\n// Histogram (bin count) data\njStat.histogram = function histogram(arr, binCnt) {\n  binCnt = binCnt || 4;\n  var first = jStat.min(arr);\n  var binWidth = (jStat.max(arr) - first) / binCnt;\n  var len = arr.length;\n  var bins = [];\n  var i;\n\n  for (i = 0; i < binCnt; i++)\n    bins[i] = 0;\n  for (i = 0; i < len; i++)\n    bins[Math.min(Math.floor(((arr[i] - first) / binWidth)), binCnt - 1)] += 1;\n\n  return bins;\n};\n\n\n// covariance of two arrays\njStat.covariance = function covariance(arr1, arr2) {\n  var u = jStat.mean(arr1);\n  var v = jStat.mean(arr2);\n  var arr1Len = arr1.length;\n  var sq_dev = new Array(arr1Len);\n  var i;\n\n  for (i = 0; i < arr1Len; i++)\n    sq_dev[i] = (arr1[i] - u) * (arr2[i] - v);\n\n  return jStat.sum(sq_dev) / (arr1Len - 1);\n};\n\n\n// (pearson's) population correlation coefficient, rho\njStat.corrcoeff = function corrcoeff(arr1, arr2) {\n  return jStat.covariance(arr1, arr2) /\n      jStat.stdev(arr1, 1) /\n      jStat.stdev(arr2, 1);\n};\n\n  // (spearman's) rank correlation coefficient, sp\njStat.spearmancoeff =  function (arr1, arr2) {\n  arr1 = jStat.rank(arr1);\n  arr2 = jStat.rank(arr2);\n  //return pearson's correlation of the ranks:\n  return jStat.corrcoeff(arr1, arr2);\n}\n\n\n// statistical standardized moments (general form of skew/kurt)\njStat.stanMoment = function stanMoment(arr, n) {\n  var mu = jStat.mean(arr);\n  var sigma = jStat.stdev(arr);\n  var len = arr.length;\n  var skewSum = 0;\n\n  for (var i = 0; i < len; i++)\n    skewSum += Math.pow((arr[i] - mu) / sigma, n);\n\n  return skewSum / arr.length;\n};\n\n// (pearson's) moment coefficient of skewness\njStat.skewness = function skewness(arr) {\n  return jStat.stanMoment(arr, 3);\n};\n\n// (pearson's) (excess) kurtosis\njStat.kurtosis = function kurtosis(arr) {\n  return jStat.stanMoment(arr, 4) - 3;\n};\n\n\nvar jProto = jStat.prototype;\n\n\n// Extend jProto with method for calculating cumulative sums and products.\n// This differs from the similar extension below as cumsum and cumprod should\n// not be run again in the case fullbool === true.\n// If a matrix is passed, automatically assume operation should be done on the\n// columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('cumsum cumprod').split(' '));\n\n\n// Extend jProto with methods which don't require arguments and work on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    // If a matrix is passed, automatically assume operation should be done on\n    // the columns.\n    jProto[passfunc] = function(fullbool, func) {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      // Assignment reassignation depending on how parameters were passed in.\n      if (isFunction(fullbool)) {\n        func = fullbool;\n        fullbool = false;\n      }\n      // Check if a callback was passed with the function.\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jProto[passfunc].call(tmpthis, fullbool));\n        });\n        return this;\n      }\n      // Check if matrix and run calculations.\n      if (this.length > 1) {\n        if (passfunc !== 'sumrow')\n          tmpthis = fullbool === true ? this : this.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = jStat[passfunc](tmpthis[i]);\n        return fullbool === true\n            ? jStat[passfunc](jStat.utils.toVector(arr))\n            : arr;\n      }\n      // Pass fullbool if only vector, not a matrix. for variance and stdev.\n      return jStat[passfunc](this[0], fullbool);\n    };\n  })(funcs[i]);\n})(('sum sumsqrd sumsqerr sumrow product min max unique mean meansqerr ' +\n    'geomean median diff rank mode range variance deviation stdev meandev ' +\n    'meddev coeffvar quartiles histogram skewness kurtosis').split(' '));\n\n\n// Extend jProto with functions that take arguments. Operations on matrices are\n// done on columns.\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jProto[passfunc] = function() {\n      var arr = [];\n      var i = 0;\n      var tmpthis = this;\n      var args = Array.prototype.slice.call(arguments);\n      var callbackFunction;\n\n      // If the last argument is a function, we assume it's a callback; we\n      // strip the callback out and call the function again.\n      if (isFunction(args[args.length - 1])) {\n        callbackFunction = args[args.length - 1];\n        var argsToPass = args.slice(0, args.length - 1);\n\n        setTimeout(function() {\n          callbackFunction.call(tmpthis,\n                                jProto[passfunc].apply(tmpthis, argsToPass));\n        });\n        return this;\n\n      // Otherwise we curry the function args and call normally.\n      } else {\n        callbackFunction = undefined;\n        var curriedFunction = function curriedFunction(vector) {\n          return jStat[passfunc].apply(tmpthis, [vector].concat(args));\n        }\n      }\n\n      // If this is a matrix, run column-by-column.\n      if (this.length > 1) {\n        tmpthis = tmpthis.transpose();\n        for (; i < tmpthis.length; i++)\n          arr[i] = curriedFunction(tmpthis[i]);\n        return arr;\n      }\n\n      // Otherwise run on the vector.\n      return curriedFunction(this[0]);\n    };\n  })(funcs[i]);\n})('quantiles percentileOfScore'.split(' '));\n\n}(jStat, Math));\n// Special functions //\n(function(jStat, Math) {\n\n// Log-gamma function\njStat.gammaln = function gammaln(x) {\n  var j = 0;\n  var cof = [\n    76.18009172947146, -86.50532032941677, 24.01409824083091,\n    -1.231739572450155, 0.1208650973866179e-2, -0.5395239384953e-5\n  ];\n  var ser = 1.000000000190015;\n  var xx, y, tmp;\n  tmp = (y = xx = x) + 5.5;\n  tmp -= (xx + 0.5) * Math.log(tmp);\n  for (; j < 6; j++)\n    ser += cof[j] / ++y;\n  return Math.log(2.5066282746310005 * ser / xx) - tmp;\n};\n\n\n// gamma of x\njStat.gammafn = function gammafn(x) {\n  var p = [-1.716185138865495, 24.76565080557592, -379.80425647094563,\n           629.3311553128184, 866.9662027904133, -31451.272968848367,\n           -36144.413418691176, 66456.14382024054\n  ];\n  var q = [-30.8402300119739, 315.35062697960416, -1015.1563674902192,\n           -3107.771671572311, 22538.118420980151, 4755.8462775278811,\n           -134659.9598649693, -115132.2596755535];\n  var fact = false;\n  var n = 0;\n  var xden = 0;\n  var xnum = 0;\n  var y = x;\n  var i, z, yi, res;\n  if (y <= 0) {\n    res = y % 1 + 3.6e-16;\n    if (res) {\n      fact = (!(y & 1) ? 1 : -1) * Math.PI / Math.sin(Math.PI * res);\n      y = 1 - y;\n    } else {\n      return Infinity;\n    }\n  }\n  yi = y;\n  if (y < 1) {\n    z = y++;\n  } else {\n    z = (y -= n = (y | 0) - 1) - 1;\n  }\n  for (i = 0; i < 8; ++i) {\n    xnum = (xnum + p[i]) * z;\n    xden = xden * z + q[i];\n  }\n  res = xnum / xden + 1;\n  if (yi < y) {\n    res /= yi;\n  } else if (yi > y) {\n    for (i = 0; i < n; ++i) {\n      res *= y;\n      y++;\n    }\n  }\n  if (fact) {\n    res = fact / res;\n  }\n  return res;\n};\n\n\n// lower incomplete gamma function, which is usually typeset with a\n// lower-case greek gamma as the function symbol\njStat.gammap = function gammap(a, x) {\n  return jStat.lowRegGamma(a, x) * jStat.gammafn(a);\n};\n\n\n// The lower regularized incomplete gamma function, usually written P(a,x)\njStat.lowRegGamma = function lowRegGamma(a, x) {\n  var aln = jStat.gammaln(a);\n  var ap = a;\n  var sum = 1 / a;\n  var del = sum;\n  var b = x + 1 - a;\n  var c = 1 / 1.0e-30;\n  var d = 1 / b;\n  var h = d;\n  var i = 1;\n  // calculate maximum number of itterations required for a\n  var ITMAX = -~(Math.log((a >= 1) ? a : 1 / a) * 8.5 + a * 0.4 + 17);\n  var an;\n\n  if (x < 0 || a <= 0) {\n    return NaN;\n  } else if (x < a + 1) {\n    for (; i <= ITMAX; i++) {\n      sum += del *= x / ++ap;\n    }\n    return (sum * Math.exp(-x + a * Math.log(x) - (aln)));\n  }\n\n  for (; i <= ITMAX; i++) {\n    an = -i * (i - a);\n    b += 2;\n    d = an * d + b;\n    c = b + an / c;\n    d = 1 / d;\n    h *= d * c;\n  }\n\n  return (1 - h * Math.exp(-x + a * Math.log(x) - (aln)));\n};\n\n// natural log factorial of n\njStat.factorialln = function factorialln(n) {\n  return n < 0 ? NaN : jStat.gammaln(n + 1);\n};\n\n// factorial of n\njStat.factorial = function factorial(n) {\n  return n < 0 ? NaN : jStat.gammafn(n + 1);\n};\n\n// combinations of n, m\njStat.combination = function combination(n, m) {\n  // make sure n or m don't exceed the upper limit of usable values\n  return (n > 170 || m > 170)\n      ? Math.exp(jStat.combinationln(n, m))\n      : (jStat.factorial(n) / jStat.factorial(m)) / jStat.factorial(n - m);\n};\n\n\njStat.combinationln = function combinationln(n, m){\n  return jStat.factorialln(n) - jStat.factorialln(m) - jStat.factorialln(n - m);\n};\n\n\n// permutations of n, m\njStat.permutation = function permutation(n, m) {\n  return jStat.factorial(n) / jStat.factorial(n - m);\n};\n\n\n// beta function\njStat.betafn = function betafn(x, y) {\n  // ensure arguments are positive\n  if (x <= 0 || y <= 0)\n    return undefined;\n  // make sure x + y doesn't exceed the upper limit of usable values\n  return (x + y > 170)\n      ? Math.exp(jStat.betaln(x, y))\n      : jStat.gammafn(x) * jStat.gammafn(y) / jStat.gammafn(x + y);\n};\n\n\n// natural logarithm of beta function\njStat.betaln = function betaln(x, y) {\n  return jStat.gammaln(x) + jStat.gammaln(y) - jStat.gammaln(x + y);\n};\n\n\n// Evaluates the continued fraction for incomplete beta function by modified\n// Lentz's method.\njStat.betacf = function betacf(x, a, b) {\n  var fpmin = 1e-30;\n  var m = 1;\n  var qab = a + b;\n  var qap = a + 1;\n  var qam = a - 1;\n  var c = 1;\n  var d = 1 - qab * x / qap;\n  var m2, aa, del, h;\n\n  // These q's will be used in factors that occur in the coefficients\n  if (Math.abs(d) < fpmin)\n    d = fpmin;\n  d = 1 / d;\n  h = d;\n\n  for (; m <= 100; m++) {\n    m2 = 2 * m;\n    aa = m * (b - m) * x / ((qam + m2) * (a + m2));\n    // One step (the even one) of the recurrence\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    h *= d * c;\n    aa = -(a + m) * (qab + m) * x / ((a + m2) * (qap + m2));\n    // Next step of the recurrence (the odd one)\n    d = 1 + aa * d;\n    if (Math.abs(d) < fpmin)\n      d = fpmin;\n    c = 1 + aa / c;\n    if (Math.abs(c) < fpmin)\n      c = fpmin;\n    d = 1 / d;\n    del = d * c;\n    h *= del;\n    if (Math.abs(del - 1.0) < 3e-7)\n      break;\n  }\n\n  return h;\n};\n\n\n// Returns the inverse of the lower regularized inomplete gamma function\njStat.gammapinv = function gammapinv(p, a) {\n  var j = 0;\n  var a1 = a - 1;\n  var EPS = 1e-8;\n  var gln = jStat.gammaln(a);\n  var x, err, t, u, pp, lna1, afac;\n\n  if (p >= 1)\n    return Math.max(100, a + 100 * Math.sqrt(a));\n  if (p <= 0)\n    return 0;\n  if (a > 1) {\n    lna1 = Math.log(a1);\n    afac = Math.exp(a1 * (lna1 - 1) - gln);\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t * (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    x = Math.max(1e-3,\n                 a * Math.pow(1 - 1 / (9 * a) - x / (3 * Math.sqrt(a)), 3));\n  } else {\n    t = 1 - a * (0.253 + a * 0.12);\n    if (p < t)\n      x = Math.pow(p / t, 1 / a);\n    else\n      x = 1 - Math.log(1 - (p - t) / (1 - t));\n  }\n\n  for(; j < 12; j++) {\n    if (x <= 0)\n      return 0;\n    err = jStat.lowRegGamma(a, x) - p;\n    if (a > 1)\n      t = afac * Math.exp(-(x - a1) + a1 * (Math.log(x) - lna1));\n    else\n      t = Math.exp(-x + a1 * Math.log(x) - gln);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * ((a - 1) / x - 1))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (Math.abs(t) < EPS * x)\n      break;\n  }\n\n  return x;\n};\n\n\n// Returns the error function erf(x)\njStat.erf = function erf(x) {\n  var cof = [-1.3026537197817094, 6.4196979235649026e-1, 1.9476473204185836e-2,\n             -9.561514786808631e-3, -9.46595344482036e-4, 3.66839497852761e-4,\n             4.2523324806907e-5, -2.0278578112534e-5, -1.624290004647e-6,\n             1.303655835580e-6, 1.5626441722e-8, -8.5238095915e-8,\n             6.529054439e-9, 5.059343495e-9, -9.91364156e-10,\n             -2.27365122e-10, 9.6467911e-11, 2.394038e-12,\n             -6.886027e-12, 8.94487e-13, 3.13092e-13,\n             -1.12708e-13, 3.81e-16, 7.106e-15,\n             -1.523e-15, -9.4e-17, 1.21e-16,\n             -2.8e-17];\n  var j = cof.length - 1;\n  var isneg = false;\n  var d = 0;\n  var dd = 0;\n  var t, ty, tmp, res;\n\n  if (x < 0) {\n    x = -x;\n    isneg = true;\n  }\n\n  t = 2 / (2 + x);\n  ty = 4 * t - 2;\n\n  for(; j > 0; j--) {\n    tmp = d;\n    d = ty * d - dd + cof[j];\n    dd = tmp;\n  }\n\n  res = t * Math.exp(-x * x + 0.5 * (cof[0] + ty * d) - dd);\n  return isneg ? res - 1 : 1 - res;\n};\n\n\n// Returns the complmentary error function erfc(x)\njStat.erfc = function erfc(x) {\n  return 1 - jStat.erf(x);\n};\n\n\n// Returns the inverse of the complementary error function\njStat.erfcinv = function erfcinv(p) {\n  var j = 0;\n  var x, err, t, pp;\n  if (p >= 2)\n    return -100;\n  if (p <= 0)\n    return 100;\n  pp = (p < 1) ? p : 2 - p;\n  t = Math.sqrt(-2 * Math.log(pp / 2));\n  x = -0.70711 * ((2.30753 + t * 0.27061) /\n                  (1 + t * (0.99229 + t * 0.04481)) - t);\n  for (; j < 2; j++) {\n    err = jStat.erfc(x) - pp;\n    x += err / (1.12837916709551257 * Math.exp(-x * x) - x * err);\n  }\n  return (p < 1) ? x : -x;\n};\n\n\n// Returns the inverse of the incomplete beta function\njStat.ibetainv = function ibetainv(p, a, b) {\n  var EPS = 1e-8;\n  var a1 = a - 1;\n  var b1 = b - 1;\n  var j = 0;\n  var lna, lnb, pp, t, u, err, x, al, h, w, afac;\n  if (p <= 0)\n    return 0;\n  if (p >= 1)\n    return 1;\n  if (a >= 1 && b >= 1) {\n    pp = (p < 0.5) ? p : 1 - p;\n    t = Math.sqrt(-2 * Math.log(pp));\n    x = (2.30753 + t * 0.27061) / (1 + t* (0.99229 + t * 0.04481)) - t;\n    if (p < 0.5)\n      x = -x;\n    al = (x * x - 3) / 6;\n    h = 2 / (1 / (2 * a - 1)  + 1 / (2 * b - 1));\n    w = (x * Math.sqrt(al + h) / h) - (1 / (2 * b - 1) - 1 / (2 * a - 1)) *\n        (al + 5 / 6 - 2 / (3 * h));\n    x = a / (a + b * Math.exp(2 * w));\n  } else {\n    lna = Math.log(a / (a + b));\n    lnb = Math.log(b / (a + b));\n    t = Math.exp(a * lna) / a;\n    u = Math.exp(b * lnb) / b;\n    w = t + u;\n    if (p < t / w)\n      x = Math.pow(a * w * p, 1 / a);\n    else\n      x = 1 - Math.pow(b * w * (1 - p), 1 / b);\n  }\n  afac = -jStat.gammaln(a) - jStat.gammaln(b) + jStat.gammaln(a + b);\n  for(; j < 10; j++) {\n    if (x === 0 || x === 1)\n      return x;\n    err = jStat.ibeta(x, a, b) - p;\n    t = Math.exp(a1 * Math.log(x) + b1 * Math.log(1 - x) + afac);\n    u = err / t;\n    x -= (t = u / (1 - 0.5 * Math.min(1, u * (a1 / x - b1 / (1 - x)))));\n    if (x <= 0)\n      x = 0.5 * (x + t);\n    if (x >= 1)\n      x = 0.5 * (x + t + 1);\n    if (Math.abs(t) < EPS * x && j > 0)\n      break;\n  }\n  return x;\n};\n\n\n// Returns the incomplete beta function I_x(a,b)\njStat.ibeta = function ibeta(x, a, b) {\n  // Factors in front of the continued fraction.\n  var bt = (x === 0 || x === 1) ?  0 :\n    Math.exp(jStat.gammaln(a + b) - jStat.gammaln(a) -\n             jStat.gammaln(b) + a * Math.log(x) + b *\n             Math.log(1 - x));\n  if (x < 0 || x > 1)\n    return false;\n  if (x < (a + 1) / (a + b + 2))\n    // Use continued fraction directly.\n    return bt * jStat.betacf(x, a, b) / a;\n  // else use continued fraction after making the symmetry transformation.\n  return 1 - bt * jStat.betacf(1 - x, b, a) / b;\n};\n\n\n// Returns a normal deviate (mu=0, sigma=1).\n// If n and m are specified it returns a object of normal deviates.\njStat.randn = function randn(n, m) {\n  var u, v, x, y, q;\n  if (!m)\n    m = n;\n  if (n)\n    return jStat.create(n, m, function() { return jStat.randn(); });\n  do {\n    u = jStat._random_fn();\n    v = 1.7156 * (jStat._random_fn() - 0.5);\n    x = u - 0.449871;\n    y = Math.abs(v) + 0.386595;\n    q = x * x + y * (0.19600 * y - 0.25472 * x);\n  } while (q > 0.27597 && (q > 0.27846 || v * v > -4 * Math.log(u) * u * u));\n  return v / u;\n};\n\n\n// Returns a gamma deviate by the method of Marsaglia and Tsang.\njStat.randg = function randg(shape, n, m) {\n  var oalph = shape;\n  var a1, a2, u, v, x, mat;\n  if (!m)\n    m = n;\n  if (!shape)\n    shape = 1;\n  if (n) {\n    mat = jStat.zeros(n,m);\n    mat.alter(function() { return jStat.randg(shape); });\n    return mat;\n  }\n  if (shape < 1)\n    shape += 1;\n  a1 = shape - 1 / 3;\n  a2 = 1 / Math.sqrt(9 * a1);\n  do {\n    do {\n      x = jStat.randn();\n      v = 1 + a2 * x;\n    } while(v <= 0);\n    v = v * v * v;\n    u = jStat._random_fn();\n  } while(u > 1 - 0.331 * Math.pow(x, 4) &&\n          Math.log(u) > 0.5 * x*x + a1 * (1 - v + Math.log(v)));\n  // alpha > 1\n  if (shape == oalph)\n    return a1 * v;\n  // alpha < 1\n  do {\n    u = jStat._random_fn();\n  } while(u === 0);\n  return Math.pow(u, 1 / oalph) * a1 * v;\n};\n\n\n// making use of static methods on the instance\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(\n          jStat.map(this, function(value) { return jStat[passfunc](value); }));\n    }\n  })(funcs[i]);\n})('gammaln gammafn factorial factorialln'.split(' '));\n\n\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function() {\n      return jStat(jStat[passfunc].apply(null, arguments));\n    };\n  })(funcs[i]);\n})('randn'.split(' '));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\n// generate all distribution instance methods\n(function(list) {\n  for (var i = 0; i < list.length; i++) (function(func) {\n    // distribution instance method\n    jStat[func] = function(a, b, c) {\n      if (!(this instanceof arguments.callee))\n        return new arguments.callee(a, b, c);\n      this._a = a;\n      this._b = b;\n      this._c = c;\n      return this;\n    };\n    // distribution method to be used on a jStat instance\n    jStat.fn[func] = function(a, b, c) {\n      var newthis = jStat[func](a, b, c);\n      newthis.data = this;\n      return newthis;\n    };\n    // sample instance method\n    jStat[func].prototype.sample = function(arr) {\n      var a = this._a;\n      var b = this._b;\n      var c = this._c;\n      if (arr)\n        return jStat.alter(arr, function() {\n          return jStat[func].sample(a, b, c);\n        });\n      else\n        return jStat[func].sample(a, b, c);\n    };\n    // generate the pdf, cdf and inv instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function(x) {\n          var a = this._a;\n          var b = this._b;\n          var c = this._c;\n          if (!x && x !== 0)\n            x = this.data;\n          if (typeof x !== 'number') {\n            return jStat.fn.map.call(x, function(x) {\n              return jStat[func][fnfunc](x, a, b, c);\n            });\n          }\n          return jStat[func][fnfunc](x, a, b, c);\n        };\n      })(vals[i]);\n    })('pdf cdf inv'.split(' '));\n    // generate the mean, median, mode and variance instance methods\n    (function(vals) {\n      for (var i = 0; i < vals.length; i++) (function(fnfunc) {\n        jStat[func].prototype[fnfunc] = function() {\n          return jStat[func][fnfunc](this._a, this._b, this._c);\n        };\n      })(vals[i]);\n    })('mean median mode variance'.split(' '));\n  })(list[i]);\n})((\n  'beta centralF cauchy chisquare exponential gamma invgamma kumaraswamy ' +\n  'laplace lognormal noncentralt normal pareto studentt weibull uniform ' +\n  'binomial negbin hypgeom poisson triangular tukey arcsine'\n).split(' '));\n\n\n\n// extend beta function with static methods\njStat.extend(jStat.beta, {\n  pdf: function pdf(x, alpha, beta) {\n    // PDF is zero outside the support\n    if (x > 1 || x < 0)\n      return 0;\n    // PDF is one for the uniform case\n    if (alpha == 1 && beta == 1)\n      return 1;\n\n    if (alpha < 512 && beta < 512) {\n      return (Math.pow(x, alpha - 1) * Math.pow(1 - x, beta - 1)) /\n          jStat.betafn(alpha, beta);\n    } else {\n      return Math.exp((alpha - 1) * Math.log(x) +\n                      (beta - 1) * Math.log(1 - x) -\n                      jStat.betaln(alpha, beta));\n    }\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    return (x > 1 || x < 0) ? (x > 1) * 1 : jStat.ibeta(x, alpha, beta);\n  },\n\n  inv: function inv(x, alpha, beta) {\n    return jStat.ibetainv(x, alpha, beta);\n  },\n\n  mean: function mean(alpha, beta) {\n    return alpha / (alpha + beta);\n  },\n\n  median: function median(alpha, beta) {\n    return jStat.ibetainv(0.5, alpha, beta);\n  },\n\n  mode: function mode(alpha, beta) {\n    return (alpha - 1 ) / ( alpha + beta - 2);\n  },\n\n  // return a random sample\n  sample: function sample(alpha, beta) {\n    var u = jStat.randg(alpha);\n    return u / (u + jStat.randg(beta));\n  },\n\n  variance: function variance(alpha, beta) {\n    return (alpha * beta) / (Math.pow(alpha + beta, 2) * (alpha + beta + 1));\n  }\n});\n\n// extend F function with static methods\njStat.extend(jStat.centralF, {\n  // This implementation of the pdf function avoids float overflow\n  // See the way that R calculates this value:\n  // https://svn.r-project.org/R/trunk/src/nmath/df.c\n  pdf: function pdf(x, df1, df2) {\n    var p, q, f;\n\n    if (x < 0)\n      return 0;\n\n    if (df1 <= 2) {\n      if (x === 0 && df1 < 2) {\n        return Infinity;\n      }\n      if (x === 0 && df1 === 2) {\n        return 1;\n      }\n      return (1 / jStat.betafn(df1 / 2, df2 / 2)) *\n              Math.pow(df1 / df2, df1 / 2) *\n              Math.pow(x, (df1/2) - 1) *\n              Math.pow((1 + (df1 / df2) * x), -(df1 + df2) / 2);\n    }\n\n    p = (df1 * x) / (df2 + x * df1);\n    q = df2 / (df2 + x * df1);\n    f = df1 * q / 2.0;\n    return f * jStat.binomial.pdf((df1 - 2) / 2, (df1 + df2 - 2) / 2, p);\n  },\n\n  cdf: function cdf(x, df1, df2) {\n    if (x < 0)\n      return 0;\n    return jStat.ibeta((df1 * x) / (df1 * x + df2), df1 / 2, df2 / 2);\n  },\n\n  inv: function inv(x, df1, df2) {\n    return df2 / (df1 * (1 / jStat.ibetainv(x, df1 / 2, df2 / 2) - 1));\n  },\n\n  mean: function mean(df1, df2) {\n    return (df2 > 2) ? df2 / (df2 - 2) : undefined;\n  },\n\n  mode: function mode(df1, df2) {\n    return (df1 > 2) ? (df2 * (df1 - 2)) / (df1 * (df2 + 2)) : undefined;\n  },\n\n  // return a random sample\n  sample: function sample(df1, df2) {\n    var x1 = jStat.randg(df1 / 2) * 2;\n    var x2 = jStat.randg(df2 / 2) * 2;\n    return (x1 / df1) / (x2 / df2);\n  },\n\n  variance: function variance(df1, df2) {\n    if (df2 <= 4)\n      return undefined;\n    return 2 * df2 * df2 * (df1 + df2 - 2) /\n        (df1 * (df2 - 2) * (df2 - 2) * (df2 - 4));\n  }\n});\n\n\n// extend cauchy function with static methods\njStat.extend(jStat.cauchy, {\n  pdf: function pdf(x, local, scale) {\n    if (scale < 0) { return 0; }\n\n    return (scale / (Math.pow(x - local, 2) + Math.pow(scale, 2))) / Math.PI;\n  },\n\n  cdf: function cdf(x, local, scale) {\n    return Math.atan((x - local) / scale) / Math.PI + 0.5;\n  },\n\n  inv: function(p, local, scale) {\n    return local + scale * Math.tan(Math.PI * (p - 0.5));\n  },\n\n  median: function median(local/*, scale*/) {\n    return local;\n  },\n\n  mode: function mode(local/*, scale*/) {\n    return local;\n  },\n\n  sample: function sample(local, scale) {\n    return jStat.randn() *\n        Math.sqrt(1 / (2 * jStat.randg(0.5))) * scale + local;\n  }\n});\n\n\n\n// extend chisquare function with static methods\njStat.extend(jStat.chisquare, {\n  pdf: function pdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && dof === 2) ? 0.5 :\n        Math.exp((dof / 2 - 1) * Math.log(x) - x / 2 - (dof / 2) *\n                 Math.log(2) - jStat.gammaln(dof / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(dof / 2, x / 2);\n  },\n\n  inv: function(p, dof) {\n    return 2 * jStat.gammapinv(p, 0.5 * dof);\n  },\n\n  mean : function(dof) {\n    return dof;\n  },\n\n  // TODO: this is an approximation (is there a better way?)\n  median: function median(dof) {\n    return dof * Math.pow(1 - (2 / (9 * dof)), 3);\n  },\n\n  mode: function mode(dof) {\n    return (dof - 2 > 0) ? dof - 2 : 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randg(dof / 2) * 2;\n  },\n\n  variance: function variance(dof) {\n    return 2 * dof;\n  }\n});\n\n\n\n// extend exponential function with static methods\njStat.extend(jStat.exponential, {\n  pdf: function pdf(x, rate) {\n    return x < 0 ? 0 : rate * Math.exp(-rate * x);\n  },\n\n  cdf: function cdf(x, rate) {\n    return x < 0 ? 0 : 1 - Math.exp(-rate * x);\n  },\n\n  inv: function(p, rate) {\n    return -Math.log(1 - p) / rate;\n  },\n\n  mean : function(rate) {\n    return 1 / rate;\n  },\n\n  median: function (rate) {\n    return (1 / rate) * Math.log(2);\n  },\n\n  mode: function mode(/*rate*/) {\n    return 0;\n  },\n\n  sample: function sample(rate) {\n    return -1 / rate * Math.log(jStat._random_fn());\n  },\n\n  variance : function(rate) {\n    return Math.pow(rate, -2);\n  }\n});\n\n\n\n// extend gamma function with static methods\njStat.extend(jStat.gamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return (x === 0 && shape === 1) ? 1 / scale :\n            Math.exp((shape - 1) * Math.log(x) - x / scale -\n                    jStat.gammaln(shape) - shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x < 0)\n      return 0;\n    return jStat.lowRegGamma(shape, x / scale);\n  },\n\n  inv: function(p, shape, scale) {\n    return jStat.gammapinv(p, shape) * scale;\n  },\n\n  mean : function(shape, scale) {\n    return shape * scale;\n  },\n\n  mode: function mode(shape, scale) {\n    if(shape > 1) return (shape - 1) * scale;\n    return undefined;\n  },\n\n  sample: function sample(shape, scale) {\n    return jStat.randg(shape) * scale;\n  },\n\n  variance: function variance(shape, scale) {\n    return shape * scale * scale;\n  }\n});\n\n// extend inverse gamma function with static methods\njStat.extend(jStat.invgamma, {\n  pdf: function pdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-(shape + 1) * Math.log(x) - scale / x -\n                    jStat.gammaln(shape) + shape * Math.log(scale));\n  },\n\n  cdf: function cdf(x, shape, scale) {\n    if (x <= 0)\n      return 0;\n    return 1 - jStat.lowRegGamma(shape, scale / x);\n  },\n\n  inv: function(p, shape, scale) {\n    return scale / jStat.gammapinv(1 - p, shape);\n  },\n\n  mean : function(shape, scale) {\n    return (shape > 1) ? scale / (shape - 1) : undefined;\n  },\n\n  mode: function mode(shape, scale) {\n    return scale / (shape + 1);\n  },\n\n  sample: function sample(shape, scale) {\n    return scale / jStat.randg(shape);\n  },\n\n  variance: function variance(shape, scale) {\n    if (shape <= 2)\n      return undefined;\n    return scale * scale / ((shape - 1) * (shape - 1) * (shape - 2));\n  }\n});\n\n\n// extend kumaraswamy function with static methods\njStat.extend(jStat.kumaraswamy, {\n  pdf: function pdf(x, alpha, beta) {\n    if (x === 0 && alpha === 1)\n      return beta;\n    else if (x === 1 && beta === 1)\n      return alpha;\n    return Math.exp(Math.log(alpha) + Math.log(beta) + (alpha - 1) *\n                    Math.log(x) + (beta - 1) *\n                    Math.log(1 - Math.pow(x, alpha)));\n  },\n\n  cdf: function cdf(x, alpha, beta) {\n    if (x < 0)\n      return 0;\n    else if (x > 1)\n      return 1;\n    return (1 - Math.pow(1 - Math.pow(x, alpha), beta));\n  },\n\n  inv: function inv(p, alpha, beta) {\n    return Math.pow(1 - Math.pow(1 - p, 1 / beta), 1 / alpha);\n  },\n\n  mean : function(alpha, beta) {\n    return (beta * jStat.gammafn(1 + 1 / alpha) *\n            jStat.gammafn(beta)) / (jStat.gammafn(1 + 1 / alpha + beta));\n  },\n\n  median: function median(alpha, beta) {\n    return Math.pow(1 - Math.pow(2, -1 / beta), 1 / alpha);\n  },\n\n  mode: function mode(alpha, beta) {\n    if (!(alpha >= 1 && beta >= 1 && (alpha !== 1 && beta !== 1)))\n      return undefined;\n    return Math.pow((alpha - 1) / (alpha * beta - 1), 1 / alpha);\n  },\n\n  variance: function variance(/*alpha, beta*/) {\n    throw new Error('variance not yet implemented');\n    // TODO: complete this\n  }\n});\n\n\n\n// extend lognormal function with static methods\njStat.extend(jStat.lognormal, {\n  pdf: function pdf(x, mu, sigma) {\n    if (x <= 0)\n      return 0;\n    return Math.exp(-Math.log(x) - 0.5 * Math.log(2 * Math.PI) -\n                    Math.log(sigma) - Math.pow(Math.log(x) - mu, 2) /\n                    (2 * sigma * sigma));\n  },\n\n  cdf: function cdf(x, mu, sigma) {\n    if (x < 0)\n      return 0;\n    return 0.5 +\n        (0.5 * jStat.erf((Math.log(x) - mu) / Math.sqrt(2 * sigma * sigma)));\n  },\n\n  inv: function(p, mu, sigma) {\n    return Math.exp(-1.41421356237309505 * sigma * jStat.erfcinv(2 * p) + mu);\n  },\n\n  mean: function mean(mu, sigma) {\n    return Math.exp(mu + sigma * sigma / 2);\n  },\n\n  median: function median(mu/*, sigma*/) {\n    return Math.exp(mu);\n  },\n\n  mode: function mode(mu, sigma) {\n    return Math.exp(mu - sigma * sigma);\n  },\n\n  sample: function sample(mu, sigma) {\n    return Math.exp(jStat.randn() * sigma + mu);\n  },\n\n  variance: function variance(mu, sigma) {\n    return (Math.exp(sigma * sigma) - 1) * Math.exp(2 * mu + sigma * sigma);\n  }\n});\n\n\n\n// extend noncentralt function with static methods\njStat.extend(jStat.noncentralt, {\n  pdf: function pdf(x, dof, ncp) {\n    var tol = 1e-14;\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.pdf(x, dof)\n\n    if (Math.abs(x) < tol) {  // different formula for x == 0\n      return Math.exp(jStat.gammaln((dof + 1) / 2) - ncp * ncp / 2 -\n                      0.5 * Math.log(Math.PI * dof) - jStat.gammaln(dof / 2));\n    }\n\n    // formula for x != 0\n    return dof / x *\n        (jStat.noncentralt.cdf(x * Math.sqrt(1 + 2 / dof), dof+2, ncp) -\n         jStat.noncentralt.cdf(x, dof, ncp));\n  },\n\n  cdf: function cdf(x, dof, ncp) {\n    var tol = 1e-14;\n    var min_iterations = 200;\n\n    if (Math.abs(ncp) < tol)  // ncp approx 0; use student-t\n      return jStat.studentt.cdf(x, dof);\n\n    // turn negative x into positive and flip result afterwards\n    var flip = false;\n    if (x < 0) {\n      flip = true;\n      ncp = -ncp;\n    }\n\n    var prob = jStat.normal.cdf(-ncp, 0, 1);\n    var value = tol + 1;\n    // use value at last two steps to determine convergence\n    var lastvalue = value;\n    var y = x * x / (x * x + dof);\n    var j = 0;\n    var p = Math.exp(-ncp * ncp / 2);\n    var q = Math.exp(-ncp * ncp / 2 - 0.5 * Math.log(2) -\n                     jStat.gammaln(3 / 2)) * ncp;\n    while (j < min_iterations || lastvalue > tol || value > tol) {\n      lastvalue = value;\n      if (j > 0) {\n        p *= (ncp * ncp) / (2 * j);\n        q *= (ncp * ncp) / (2 * (j + 1 / 2));\n      }\n      value = p * jStat.beta.cdf(y, j + 0.5, dof / 2) +\n          q * jStat.beta.cdf(y, j+1, dof/2);\n      prob += 0.5 * value;\n      j++;\n    }\n\n    return flip ? (1 - prob) : prob;\n  }\n});\n\n\n// extend normal function with static methods\njStat.extend(jStat.normal, {\n  pdf: function pdf(x, mean, std) {\n    return Math.exp(-0.5 * Math.log(2 * Math.PI) -\n                    Math.log(std) - Math.pow(x - mean, 2) / (2 * std * std));\n  },\n\n  cdf: function cdf(x, mean, std) {\n    return 0.5 * (1 + jStat.erf((x - mean) / Math.sqrt(2 * std * std)));\n  },\n\n  inv: function(p, mean, std) {\n    return -1.41421356237309505 * std * jStat.erfcinv(2 * p) + mean;\n  },\n\n  mean : function(mean/*, std*/) {\n    return mean;\n  },\n\n  median: function median(mean/*, std*/) {\n    return mean;\n  },\n\n  mode: function (mean/*, std*/) {\n    return mean;\n  },\n\n  sample: function sample(mean, std) {\n    return jStat.randn() * std + mean;\n  },\n\n  variance : function(mean, std) {\n    return std * std;\n  }\n});\n\n\n\n// extend pareto function with static methods\njStat.extend(jStat.pareto, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return (shape * Math.pow(scale, shape)) / Math.pow(x, shape + 1);\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    if (x < scale)\n      return 0;\n    return 1 - Math.pow(scale / x, shape);\n  },\n\n  inv: function inv(p, scale, shape) {\n    return scale / Math.pow(1 - p, 1 / shape);\n  },\n\n  mean: function mean(scale, shape) {\n    if (shape <= 1)\n      return undefined;\n    return (shape * Math.pow(scale, shape)) / (shape - 1);\n  },\n\n  median: function median(scale, shape) {\n    return scale * (shape * Math.SQRT2);\n  },\n\n  mode: function mode(scale/*, shape*/) {\n    return scale;\n  },\n\n  variance : function(scale, shape) {\n    if (shape <= 2)\n      return undefined;\n    return (scale*scale * shape) / (Math.pow(shape - 1, 2) * (shape - 2));\n  }\n});\n\n\n\n// extend studentt function with static methods\njStat.extend(jStat.studentt, {\n  pdf: function pdf(x, dof) {\n    dof = dof > 1e100 ? 1e100 : dof;\n    return (1/(Math.sqrt(dof) * jStat.betafn(0.5, dof/2))) *\n        Math.pow(1 + ((x * x) / dof), -((dof + 1) / 2));\n  },\n\n  cdf: function cdf(x, dof) {\n    var dof2 = dof / 2;\n    return jStat.ibeta((x + Math.sqrt(x * x + dof)) /\n                       (2 * Math.sqrt(x * x + dof)), dof2, dof2);\n  },\n\n  inv: function(p, dof) {\n    var x = jStat.ibetainv(2 * Math.min(p, 1 - p), 0.5 * dof, 0.5);\n    x = Math.sqrt(dof * (1 - x) / x);\n    return (p > 0.5) ? x : -x;\n  },\n\n  mean: function mean(dof) {\n    return (dof > 1) ? 0 : undefined;\n  },\n\n  median: function median(/*dof*/) {\n    return 0;\n  },\n\n  mode: function mode(/*dof*/) {\n    return 0;\n  },\n\n  sample: function sample(dof) {\n    return jStat.randn() * Math.sqrt(dof / (2 * jStat.randg(dof / 2)));\n  },\n\n  variance: function variance(dof) {\n    return (dof  > 2) ? dof / (dof - 2) : (dof > 1) ? Infinity : undefined;\n  }\n});\n\n\n\n// extend weibull function with static methods\njStat.extend(jStat.weibull, {\n  pdf: function pdf(x, scale, shape) {\n    if (x < 0 || scale < 0 || shape < 0)\n      return 0;\n    return (shape / scale) * Math.pow((x / scale), (shape - 1)) *\n        Math.exp(-(Math.pow((x / scale), shape)));\n  },\n\n  cdf: function cdf(x, scale, shape) {\n    return x < 0 ? 0 : 1 - Math.exp(-Math.pow((x / scale), shape));\n  },\n\n  inv: function(p, scale, shape) {\n    return scale * Math.pow(-Math.log(1 - p), 1 / shape);\n  },\n\n  mean : function(scale, shape) {\n    return scale * jStat.gammafn(1 + 1 / shape);\n  },\n\n  median: function median(scale, shape) {\n    return scale * Math.pow(Math.log(2), 1 / shape);\n  },\n\n  mode: function mode(scale, shape) {\n    if (shape <= 1)\n      return 0;\n    return scale * Math.pow((shape - 1) / shape, 1 / shape);\n  },\n\n  sample: function sample(scale, shape) {\n    return scale * Math.pow(-Math.log(jStat._random_fn()), 1 / shape);\n  },\n\n  variance: function variance(scale, shape) {\n    return scale * scale * jStat.gammafn(1 + 2 / shape) -\n        Math.pow(jStat.weibull.mean(scale, shape), 2);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.uniform, {\n  pdf: function pdf(x, a, b) {\n    return (x < a || x > b) ? 0 : 1 / (b - a);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (x - a) / (b - a);\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (p * (b - a));\n  },\n\n  mean: function mean(a, b) {\n    return 0.5 * (a + b);\n  },\n\n  median: function median(a, b) {\n    return jStat.mean(a, b);\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return (a / 2 + b / 2) + (b / 2 - a / 2) * (2 * jStat._random_fn() - 1);\n  },\n\n  variance: function variance(a, b) {\n    return Math.pow(b - a, 2) / 12;\n  }\n});\n\n\n// Got this from http://www.math.ucla.edu/~tom/distributions/binomial.html\nfunction betinc(x, a, b, eps) {\n  var a0 = 0;\n  var b0 = 1;\n  var a1 = 1;\n  var b1 = 1;\n  var m9 = 0;\n  var a2 = 0;\n  var c9;\n\n  while (Math.abs((a1 - a2) / a1) > eps) {\n    a2 = a1;\n    c9 = -(a + m9) * (a + b + m9) * x / (a + 2 * m9) / (a + 2 * m9 + 1);\n    a0 = a1 + c9 * a0;\n    b0 = b1 + c9 * b0;\n    m9 = m9 + 1;\n    c9 = m9 * (b - m9) * x / (a + 2 * m9 - 1) / (a + 2 * m9);\n    a1 = a0 + c9 * a1;\n    b1 = b0 + c9 * b1;\n    a0 = a0 / b1;\n    b0 = b0 / b1;\n    a1 = a1 / b1;\n    b1 = 1;\n  }\n\n  return a1 / a;\n}\n\n\n// extend uniform function with static methods\njStat.extend(jStat.binomial, {\n  pdf: function pdf(k, n, p) {\n    return (p === 0 || p === 1) ?\n      ((n * p) === k ? 1 : 0) :\n      jStat.combination(n, k) * Math.pow(p, k) * Math.pow(1 - p, n - k);\n  },\n\n  cdf: function cdf(x, n, p) {\n    var betacdf;\n    var eps = 1e-10;\n\n    if (x < 0)\n      return 0;\n    if (x >= n)\n      return 1;\n    if (p < 0 || p > 1 || n <= 0)\n      return NaN;\n\n    x = Math.floor(x);\n    var z = p;\n    var a = x + 1;\n    var b = n - x;\n    var s = a + b;\n    var bt = Math.exp(jStat.gammaln(s) - jStat.gammaln(b) -\n                      jStat.gammaln(a) + a * Math.log(z) + b * Math.log(1 - z));\n\n    if (z < (a + 1) / (s + 2))\n      betacdf = bt * betinc(z, a, b, eps);\n    else\n      betacdf = 1 - bt * betinc(1 - z, b, a, eps);\n\n    return Math.round((1 - betacdf) * (1 / eps)) / (1 / eps);\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.negbin, {\n  pdf: function pdf(k, r, p) {\n    if (k !== k >>> 0)\n      return false;\n    if (k < 0)\n      return 0;\n    return jStat.combination(k + r - 1, r - 1) *\n        Math.pow(1 - p, k) * Math.pow(p, r);\n  },\n\n  cdf: function cdf(x, r, p) {\n    var sum = 0,\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sum += jStat.negbin.pdf(k, r, p);\n    }\n    return sum;\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.hypgeom, {\n  pdf: function pdf(k, N, m, n) {\n    // Hypergeometric PDF.\n\n    // A simplification of the CDF algorithm below.\n\n    // k = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(k !== k | 0) {\n      return false;\n    } else if(k < 0 || k < m - (N - n)) {\n      // It's impossible to have this few successes drawn.\n      return 0;\n    } else if(k > n || k > m) {\n      // It's impossible to have this many successes drawn.\n      return 0;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.pdf(N - m - n + k, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return jStat.hypgeom.pdf(n - k, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return jStat.hypgeom.pdf(m - k, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.pdf(k, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate product to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < k; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledPDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          scaledPDF *= 1 - (m / (N - samplesDone));\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledPDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledPDF));\n    }\n  },\n\n  cdf: function cdf(x, N, m, n) {\n    // Hypergeometric CDF.\n\n    // This algorithm is due to Prof. Thomas S. Ferguson, <tom@math.ucla.edu>,\n    // and comes from his hypergeometric test calculator at\n    // <http://www.math.ucla.edu/~tom/distributions/Hypergeometric.html>.\n\n    // x = number of successes drawn\n    // N = population size\n    // m = number of successes in population\n    // n = number of items drawn from population\n\n    if(x < 0 || x < m - (N - n)) {\n      // It's impossible to have this few successes drawn or fewer.\n      return 0;\n    } else if(x >= n || x >= m) {\n      // We will always have this many successes or fewer.\n      return 1;\n    } else if (m * 2 > N) {\n      // More than half the population is successes.\n\n      if(n * 2 > N) {\n        // More than half the population is sampled.\n\n        return jStat.hypgeom.cdf(N - m - n + x, N, N - m, N - n)\n      } else {\n        // Half or less of the population is sampled.\n\n        return 1 - jStat.hypgeom.cdf(n - x - 1, N, N - m, n);\n      }\n\n    } else if(n * 2 > N) {\n      // Half or less is successes.\n\n      return 1 - jStat.hypgeom.cdf(m - x - 1, N, m, N - n);\n\n    } else if(m < n) {\n      // We want to have the number of things sampled to be less than the\n      // successes available. So swap the definitions of successful and sampled.\n      return jStat.hypgeom.cdf(x, N, n, m);\n    } else {\n      // If we get here, half or less of the population was sampled, half or\n      // less of it was successes, and we had fewer sampled things than\n      // successes. Now we can do this complicated iterative algorithm in an\n      // efficient way.\n\n      // The basic premise of the algorithm is that we partially normalize our\n      // intermediate sum to keep it in a numerically good region, and then\n      // finish the normalization at the end.\n\n      // Holds the intermediate, scaled total CDF.\n      var scaledCDF = 1;\n\n      // This variable holds the scaled probability of the current number of\n      // successes.\n      var scaledPDF = 1;\n\n      // This keeps track of how much we have normalized.\n      var samplesDone = 0;\n\n      for(var i = 0; i < x; i++) {\n        // For every possible number of successes up to that observed...\n\n        while(scaledCDF > 1 && samplesDone < n) {\n          // Intermediate result is growing too big. Apply some of the\n          // normalization to shrink everything.\n\n          var factor = 1 - (m / (N - samplesDone));\n\n          scaledPDF *= factor;\n          scaledCDF *= factor;\n\n          // Say we've normalized by this sample already.\n          samplesDone++;\n        }\n\n        // Work out the partially-normalized hypergeometric PDF for the next\n        // number of successes\n        scaledPDF *= (n - i) * (m - i) / ((i + 1) * (N - m - n + i + 1));\n\n        // Add to the CDF answer.\n        scaledCDF += scaledPDF;\n      }\n\n      for(; samplesDone < n; samplesDone++) {\n        // Apply all the rest of the normalization\n        scaledCDF *= 1 - (m / (N - samplesDone));\n      }\n\n      // Bound answer sanely before returning.\n      return Math.min(1, Math.max(0, scaledCDF));\n    }\n  }\n});\n\n\n\n// extend uniform function with static methods\njStat.extend(jStat.poisson, {\n  pdf: function pdf(k, l) {\n    if (l < 0 || (k % 1) !== 0 || k < 0) {\n      return 0;\n    }\n\n    return Math.pow(l, k) * Math.exp(-l) / jStat.factorial(k);\n  },\n\n  cdf: function cdf(x, l) {\n    var sumarr = [],\n    k = 0;\n    if (x < 0) return 0;\n    for (; k <= x; k++) {\n      sumarr.push(jStat.poisson.pdf(k, l));\n    }\n    return jStat.sum(sumarr);\n  },\n\n  mean : function(l) {\n    return l;\n  },\n\n  variance : function(l) {\n    return l;\n  },\n\n  sample: function sample(l) {\n    var p = 1, k = 0, L = Math.exp(-l);\n    do {\n      k++;\n      p *= jStat._random_fn();\n    } while (p > L);\n    return k - 1;\n  }\n});\n\n// extend triangular function with static methods\njStat.extend(jStat.triangular, {\n  pdf: function pdf(x, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (x < a || x > b) {\n        return 0;\n      } else if (x < c) {\n          return (2 * (x - a)) / ((b - a) * (c - a));\n      } else if (x === c) {\n          return (2 / (b - a));\n      } else { // x > c\n          return (2 * (b - x)) / ((b - a) * (b - c));\n      }\n    }\n  },\n\n  cdf: function cdf(x, a, b, c) {\n    if (b <= a || c < a || c > b)\n      return NaN;\n    if (x <= a)\n      return 0;\n    else if (x >= b)\n      return 1;\n    if (x <= c)\n      return Math.pow(x - a, 2) / ((b - a) * (c - a));\n    else // x > c\n      return 1 - Math.pow(b - x, 2) / ((b - a) * (b - c));\n  },\n\n  inv: function inv(p, a, b, c) {\n    if (b <= a || c < a || c > b) {\n      return NaN;\n    } else {\n      if (p <= ((c - a) / (b - a))) {\n        return a + (b - a) * Math.sqrt(p * ((c - a) / (b - a)));\n      } else { // p > ((c - a) / (b - a))\n        return a + (b - a) * (1 - Math.sqrt((1 - p) * (1 - ((c - a) / (b - a)))));\n      }\n    }\n  },\n\n  mean: function mean(a, b, c) {\n    return (a + b + c) / 3;\n  },\n\n  median: function median(a, b, c) {\n    if (c <= (a + b) / 2) {\n      return b - Math.sqrt((b - a) * (b - c)) / Math.sqrt(2);\n    } else if (c > (a + b) / 2) {\n      return a + Math.sqrt((b - a) * (c - a)) / Math.sqrt(2);\n    }\n  },\n\n  mode: function mode(a, b, c) {\n    return c;\n  },\n\n  sample: function sample(a, b, c) {\n    var u = jStat._random_fn();\n    if (u < ((c - a) / (b - a)))\n      return a + Math.sqrt(u * (b - a) * (c - a))\n    return b - Math.sqrt((1 - u) * (b - a) * (b - c));\n  },\n\n  variance: function variance(a, b, c) {\n    return (a * a + b * b + c * c - a * b - a * c - b * c) / 18;\n  }\n});\n\n\n// extend arcsine function with static methods\njStat.extend(jStat.arcsine, {\n  pdf: function pdf(x, a, b) {\n    if (b <= a) return NaN;\n\n    return (x <= a || x >= b) ? 0 :\n      (2 / Math.PI) *\n        Math.pow(Math.pow(b - a, 2) -\n                  Math.pow(2 * x - a - b, 2), -0.5);\n  },\n\n  cdf: function cdf(x, a, b) {\n    if (x < a)\n      return 0;\n    else if (x < b)\n      return (2 / Math.PI) * Math.asin(Math.sqrt((x - a)/(b - a)));\n    return 1;\n  },\n\n  inv: function(p, a, b) {\n    return a + (0.5 - 0.5 * Math.cos(Math.PI * p)) * (b - a);\n  },\n\n  mean: function mean(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  median: function median(a, b) {\n    if (b <= a) return NaN;\n    return (a + b) / 2;\n  },\n\n  mode: function mode(/*a, b*/) {\n    throw new Error('mode is not yet implemented');\n  },\n\n  sample: function sample(a, b) {\n    return ((a + b) / 2) + ((b - a) / 2) *\n      Math.sin(2 * Math.PI * jStat.uniform.sample(0, 1));\n  },\n\n  variance: function variance(a, b) {\n    if (b <= a) return NaN;\n    return Math.pow(b - a, 2) / 8;\n  }\n});\n\n\nfunction laplaceSign(x) { return x / Math.abs(x); }\n\njStat.extend(jStat.laplace, {\n  pdf: function pdf(x, mu, b) {\n    return (b <= 0) ? 0 : (Math.exp(-Math.abs(x - mu) / b)) / (2 * b);\n  },\n\n  cdf: function cdf(x, mu, b) {\n    if (b <= 0) { return 0; }\n\n    if(x < mu) {\n      return 0.5 * Math.exp((x - mu) / b);\n    } else {\n      return 1 - 0.5 * Math.exp(- (x - mu) / b);\n    }\n  },\n\n  mean: function(mu/*, b*/) {\n    return mu;\n  },\n\n  median: function(mu/*, b*/) {\n    return mu;\n  },\n\n  mode: function(mu/*, b*/) {\n    return mu;\n  },\n\n  variance: function(mu, b) {\n    return 2 * b * b;\n  },\n\n  sample: function sample(mu, b) {\n    var u = jStat._random_fn() - 0.5;\n\n    return mu - (b * laplaceSign(u) * Math.log(1 - (2 * Math.abs(u))));\n  }\n});\n\nfunction tukeyWprob(w, rr, cc) {\n  var nleg = 12;\n  var ihalf = 6;\n\n  var C1 = -30;\n  var C2 = -50;\n  var C3 = 60;\n  var bb   = 8;\n  var wlar = 3;\n  var wincr1 = 2;\n  var wincr2 = 3;\n  var xleg = [\n    0.981560634246719250690549090149,\n    0.904117256370474856678465866119,\n    0.769902674194304687036893833213,\n    0.587317954286617447296702418941,\n    0.367831498998180193752691536644,\n    0.125233408511468915472441369464\n  ];\n  var aleg = [\n    0.047175336386511827194615961485,\n    0.106939325995318430960254718194,\n    0.160078328543346226334652529543,\n    0.203167426723065921749064455810,\n    0.233492536538354808760849898925,\n    0.249147045813402785000562436043\n  ];\n\n  var qsqz = w * 0.5;\n\n  // if w >= 16 then the integral lower bound (occurs for c=20)\n  // is 0.99999999999995 so return a value of 1.\n\n  if (qsqz >= bb)\n    return 1.0;\n\n  // find (f(w/2) - 1) ^ cc\n  // (first term in integral of hartley's form).\n\n  var pr_w = 2 * jStat.normal.cdf(qsqz, 0, 1, 1, 0) - 1; // erf(qsqz / M_SQRT2)\n  // if pr_w ^ cc < 2e-22 then set pr_w = 0\n  if (pr_w >= Math.exp(C2 / cc))\n    pr_w = Math.pow(pr_w, cc);\n  else\n    pr_w = 0.0;\n\n  // if w is large then the second component of the\n  // integral is small, so fewer intervals are needed.\n\n  var wincr;\n  if (w > wlar)\n    wincr = wincr1;\n  else\n    wincr = wincr2;\n\n  // find the integral of second term of hartley's form\n  // for the integral of the range for equal-length\n  // intervals using legendre quadrature.  limits of\n  // integration are from (w/2, 8).  two or three\n  // equal-length intervals are used.\n\n  // blb and bub are lower and upper limits of integration.\n\n  var blb = qsqz;\n  var binc = (bb - qsqz) / wincr;\n  var bub = blb + binc;\n  var einsum = 0.0;\n\n  // integrate over each interval\n\n  var cc1 = cc - 1.0;\n  for (var wi = 1; wi <= wincr; wi++) {\n    var elsum = 0.0;\n    var a = 0.5 * (bub + blb);\n\n    // legendre quadrature with order = nleg\n\n    var b = 0.5 * (bub - blb);\n\n    for (var jj = 1; jj <= nleg; jj++) {\n      var j, xx;\n      if (ihalf < jj) {\n        j = (nleg - jj) + 1;\n        xx = xleg[j-1];\n      } else {\n        j = jj;\n        xx = -xleg[j-1];\n      }\n      var c = b * xx;\n      var ac = a + c;\n\n      // if exp(-qexpo/2) < 9e-14,\n      // then doesn't contribute to integral\n\n      var qexpo = ac * ac;\n      if (qexpo > C3)\n        break;\n\n      var pplus = 2 * jStat.normal.cdf(ac, 0, 1, 1, 0);\n      var pminus= 2 * jStat.normal.cdf(ac, w, 1, 1, 0);\n\n      // if rinsum ^ (cc-1) < 9e-14,\n      // then doesn't contribute to integral\n\n      var rinsum = (pplus * 0.5) - (pminus * 0.5);\n      if (rinsum >= Math.exp(C1 / cc1)) {\n        rinsum = (aleg[j-1] * Math.exp(-(0.5 * qexpo))) * Math.pow(rinsum, cc1);\n        elsum += rinsum;\n      }\n    }\n    elsum *= (((2.0 * b) * cc) / Math.sqrt(2 * Math.PI));\n    einsum += elsum;\n    blb = bub;\n    bub += binc;\n  }\n\n  // if pr_w ^ rr < 9e-14, then return 0\n  pr_w += einsum;\n  if (pr_w <= Math.exp(C1 / rr))\n    return 0;\n\n  pr_w = Math.pow(pr_w, rr);\n  if (pr_w >= 1) // 1 was iMax was eps\n    return 1;\n  return pr_w;\n}\n\nfunction tukeyQinv(p, c, v) {\n  var p0 = 0.322232421088;\n  var q0 = 0.993484626060e-01;\n  var p1 = -1.0;\n  var q1 = 0.588581570495;\n  var p2 = -0.342242088547;\n  var q2 = 0.531103462366;\n  var p3 = -0.204231210125;\n  var q3 = 0.103537752850;\n  var p4 = -0.453642210148e-04;\n  var q4 = 0.38560700634e-02;\n  var c1 = 0.8832;\n  var c2 = 0.2368;\n  var c3 = 1.214;\n  var c4 = 1.208;\n  var c5 = 1.4142;\n  var vmax = 120.0;\n\n  var ps = 0.5 - 0.5 * p;\n  var yi = Math.sqrt(Math.log(1.0 / (ps * ps)));\n  var t = yi + (((( yi * p4 + p3) * yi + p2) * yi + p1) * yi + p0)\n     / (((( yi * q4 + q3) * yi + q2) * yi + q1) * yi + q0);\n  if (v < vmax) t += (t * t * t + t) / v / 4.0;\n  var q = c1 - c2 * t;\n  if (v < vmax) q += -c3 / v + c4 * t / v;\n  return t * (q * Math.log(c - 1.0) + c5);\n}\n\njStat.extend(jStat.tukey, {\n  cdf: function cdf(q, nmeans, df) {\n    // Identical implementation as the R ptukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var nlegq = 16;\n    var ihalfq = 8;\n\n    var eps1 = -30.0;\n    var eps2 = 1.0e-14;\n    var dhaf  = 100.0;\n    var dquar = 800.0;\n    var deigh = 5000.0;\n    var dlarg = 25000.0;\n    var ulen1 = 1.0;\n    var ulen2 = 0.5;\n    var ulen3 = 0.25;\n    var ulen4 = 0.125;\n    var xlegq = [\n      0.989400934991649932596154173450,\n      0.944575023073232576077988415535,\n      0.865631202387831743880467897712,\n      0.755404408355003033895101194847,\n      0.617876244402643748446671764049,\n      0.458016777657227386342419442984,\n      0.281603550779258913230460501460,\n      0.950125098376374401853193354250e-1\n    ];\n    var alegq = [\n      0.271524594117540948517805724560e-1,\n      0.622535239386478928628438369944e-1,\n      0.951585116824927848099251076022e-1,\n      0.124628971255533872052476282192,\n      0.149595988816576732081501730547,\n      0.169156519395002538189312079030,\n      0.182603415044923588866763667969,\n      0.189450610455068496285396723208\n    ];\n\n    if (q <= 0)\n      return 0;\n\n    // df must be > 1\n    // there must be at least two values\n\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (!Number.isFinite(q))\n      return 1;\n\n    if (df > dlarg)\n      return tukeyWprob(q, rr, cc);\n\n    // calculate leading constant\n\n    var f2 = df * 0.5;\n    var f2lf = ((f2 * Math.log(df)) - (df * Math.log(2))) - jStat.gammaln(f2);\n    var f21 = f2 - 1.0;\n\n    // integral is divided into unit, half-unit, quarter-unit, or\n    // eighth-unit length intervals depending on the value of the\n    // degrees of freedom.\n\n    var ff4 = df * 0.25;\n    var ulen;\n    if      (df <= dhaf)  ulen = ulen1;\n    else if (df <= dquar) ulen = ulen2;\n    else if (df <= deigh) ulen = ulen3;\n    else                  ulen = ulen4;\n\n    f2lf += Math.log(ulen);\n\n    // integrate over each subinterval\n\n    var ans = 0.0;\n\n    for (var i = 1; i <= 50; i++) {\n      var otsum = 0.0;\n\n      // legendre quadrature with order = nlegq\n      // nodes (stored in xlegq) are symmetric around zero.\n\n      var twa1 = (2 * i - 1) * ulen;\n\n      for (var jj = 1; jj <= nlegq; jj++) {\n        var j, t1;\n        if (ihalfq < jj) {\n          j = jj - ihalfq - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 + (xlegq[j] * ulen))))\n              - (((xlegq[j] * ulen) + twa1) * ff4);\n        } else {\n          j = jj - 1;\n          t1 = (f2lf + (f21 * Math.log(twa1 - (xlegq[j] * ulen))))\n              + (((xlegq[j] * ulen) - twa1) * ff4);\n        }\n\n        // if exp(t1) < 9e-14, then doesn't contribute to integral\n        var qsqz;\n        if (t1 >= eps1) {\n          if (ihalfq < jj) {\n            qsqz = q * Math.sqrt(((xlegq[j] * ulen) + twa1) * 0.5);\n          } else {\n            qsqz = q * Math.sqrt(((-(xlegq[j] * ulen)) + twa1) * 0.5);\n          }\n\n          // call wprob to find integral of range portion\n\n          var wprb = tukeyWprob(qsqz, rr, cc);\n          var rotsum = (wprb * alegq[j]) * Math.exp(t1);\n          otsum += rotsum;\n        }\n        // end legendre integral for interval i\n        // L200:\n      }\n\n      // if integral for interval i < 1e-14, then stop.\n      // However, in order to avoid small area under left tail,\n      // at least  1 / ulen  intervals are calculated.\n      if (i * ulen >= 1.0 && otsum <= eps2)\n        break;\n\n      // end of interval i\n      // L330:\n\n      ans += otsum;\n    }\n\n    if (otsum > eps2) { // not converged\n      throw new Error('tukey.cdf failed to converge');\n    }\n    if (ans > 1)\n      ans = 1;\n    return ans;\n  },\n\n  inv: function(p, nmeans, df) {\n    // Identical implementation as the R qtukey() function as of commit 68947\n    var rr = 1;\n    var cc = nmeans;\n\n    var eps = 0.0001;\n    var maxiter = 50;\n\n    // df must be > 1 ; there must be at least two values\n    if (df < 2 || rr < 1 || cc < 2) return NaN;\n\n    if (p < 0 || p > 1) return NaN;\n    if (p === 0) return 0;\n    if (p === 1) return Infinity;\n\n    // Initial value\n\n    var x0 = tukeyQinv(p, cc, df);\n\n    // Find prob(value < x0)\n\n    var valx0 = jStat.tukey.cdf(x0, nmeans, df) - p;\n\n    // Find the second iterate and prob(value < x1).\n    // If the first iterate has probability value\n    // exceeding p then second iterate is 1 less than\n    // first iterate; otherwise it is 1 greater.\n\n    var x1;\n    if (valx0 > 0.0)\n      x1 = Math.max(0.0, x0 - 1.0);\n    else\n      x1 = x0 + 1.0;\n    var valx1 = jStat.tukey.cdf(x1, nmeans, df) - p;\n\n    // Find new iterate\n\n    var ans;\n    for(var iter = 1; iter < maxiter; iter++) {\n      ans = x1 - ((valx1 * (x1 - x0)) / (valx1 - valx0));\n      valx0 = valx1;\n\n      // New iterate must be >= 0\n\n      x0 = x1;\n      if (ans < 0.0) {\n        ans = 0.0;\n        valx1 = -p;\n      }\n      // Find prob(value < new iterate)\n\n      valx1 = jStat.tukey.cdf(ans, nmeans, df) - p;\n      x1 = ans;\n\n      // If the difference between two successive\n      // iterates is less than eps, stop\n\n      var xabs = Math.abs(x1 - x0);\n      if (xabs < eps)\n        return ans;\n    }\n\n    throw new Error('tukey.inv failed to converge');\n  }\n});\n\n}(jStat, Math));\n/* Provides functions for the solution of linear system of equations, integration, extrapolation,\n * interpolation, eigenvalue problems, differential equations and PCA analysis. */\n\n(function(jStat, Math) {\n\nvar push = Array.prototype.push;\nvar isArray = jStat.utils.isArray;\n\nfunction isUsable(arg) {\n  return isArray(arg) || arg instanceof jStat;\n}\n\njStat.extend({\n\n  // add a vector/matrix to a vector/matrix or scalar\n  add: function add(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value + arg[row][col];\n      });\n    }\n    return jStat.map(arr, function(value) { return value + arg; });\n  },\n\n  // subtract a vector or scalar from the vector\n  subtract: function subtract(arr, arg) {\n    // check if arg is a vector or scalar\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.map(arr, function(value, row, col) {\n        return value - arg[row][col] || 0;\n      });\n    }\n    return jStat.map(arr, function(value) { return value - arg; });\n  },\n\n  // matrix division\n  divide: function divide(arr, arg) {\n    if (isUsable(arg)) {\n      if (!isUsable(arg[0])) arg = [ arg ];\n      return jStat.multiply(arr, jStat.inv(arg));\n    }\n    return jStat.map(arr, function(value) { return value / arg; });\n  },\n\n  // matrix multiplication\n  multiply: function multiply(arr, arg) {\n    var row, col, nrescols, sum, nrow, ncol, res, rescols;\n    // eg: arr = 2 arg = 3 -> 6 for res[0][0] statement closure\n    if (arr.length === undefined && arg.length === undefined) {\n      return arr * arg;\n    }\n    nrow = arr.length,\n    ncol = arr[0].length,\n    res = jStat.zeros(nrow, nrescols = (isUsable(arg)) ? arg[0].length : ncol),\n    rescols = 0;\n    if (isUsable(arg)) {\n      for (; rescols < nrescols; rescols++) {\n        for (row = 0; row < nrow; row++) {\n          sum = 0;\n          for (col = 0; col < ncol; col++)\n          sum += arr[row][col] * arg[col][rescols];\n          res[row][rescols] = sum;\n        }\n      }\n      return (nrow === 1 && rescols === 1) ? res[0][0] : res;\n    }\n    return jStat.map(arr, function(value) { return value * arg; });\n  },\n\n  // outer([1,2,3],[4,5,6])\n  // ===\n  // [[1],[2],[3]] times [[4,5,6]]\n  // ->\n  // [[4,5,6],[8,10,12],[12,15,18]]\n  outer:function outer(A, B) {\n    return jStat.multiply(A.map(function(t){ return [t] }), [B]);\n  },\n\n\n  // Returns the dot product of two matricies\n  dot: function dot(arr, arg) {\n    if (!isUsable(arr[0])) arr = [ arr ];\n    if (!isUsable(arg[0])) arg = [ arg ];\n    // convert column to row vector\n    var left = (arr[0].length === 1 && arr.length !== 1) ? jStat.transpose(arr) : arr,\n    right = (arg[0].length === 1 && arg.length !== 1) ? jStat.transpose(arg) : arg,\n    res = [],\n    row = 0,\n    nrow = left.length,\n    ncol = left[0].length,\n    sum, col;\n    for (; row < nrow; row++) {\n      res[row] = [];\n      sum = 0;\n      for (col = 0; col < ncol; col++)\n      sum += left[row][col] * right[row][col];\n      res[row] = sum;\n    }\n    return (res.length === 1) ? res[0] : res;\n  },\n\n  // raise every element by a scalar\n  pow: function pow(arr, arg) {\n    return jStat.map(arr, function(value) { return Math.pow(value, arg); });\n  },\n\n  // exponentiate every element\n  exp: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.exp(value); });\n  },\n\n  // generate the natural log of every element\n  log: function exp(arr) {\n    return jStat.map(arr, function(value) { return Math.log(value); });\n  },\n\n  // generate the absolute values of the vector\n  abs: function abs(arr) {\n    return jStat.map(arr, function(value) { return Math.abs(value); });\n  },\n\n  // computes the p-norm of the vector\n  // In the case that a matrix is passed, uses the first row as the vector\n  norm: function norm(arr, p) {\n    var nnorm = 0,\n    i = 0;\n    // check the p-value of the norm, and set for most common case\n    if (isNaN(p)) p = 2;\n    // check if multi-dimensional array, and make vector correction\n    if (isUsable(arr[0])) arr = arr[0];\n    // vector norm\n    for (; i < arr.length; i++) {\n      nnorm += Math.pow(Math.abs(arr[i]), p);\n    }\n    return Math.pow(nnorm, 1 / p);\n  },\n\n  // computes the angle between two vectors in rads\n  // In case a matrix is passed, this uses the first row as the vector\n  angle: function angle(arr, arg) {\n    return Math.acos(jStat.dot(arr, arg) / (jStat.norm(arr) * jStat.norm(arg)));\n  },\n\n  // augment one matrix by another\n  // Note: this function returns a matrix, not a jStat object\n  aug: function aug(a, b) {\n    var newarr = [];\n    var i;\n    for (i = 0; i < a.length; i++) {\n      newarr.push(a[i].slice());\n    }\n    for (i = 0; i < newarr.length; i++) {\n      push.apply(newarr[i], b[i]);\n    }\n    return newarr;\n  },\n\n  // The inv() function calculates the inverse of a matrix\n  // Create the inverse by augmenting the matrix by the identity matrix of the\n  // appropriate size, and then use G-J elimination on the augmented matrix.\n  inv: function inv(a) {\n    var rows = a.length;\n    var cols = a[0].length;\n    var b = jStat.identity(rows, cols);\n    var c = jStat.gauss_jordan(a, b);\n    var result = [];\n    var i = 0;\n    var j;\n\n    //We need to copy the inverse portion to a new matrix to rid G-J artifacts\n    for (; i < rows; i++) {\n      result[i] = [];\n      for (j = cols; j < c[0].length; j++)\n        result[i][j - cols] = c[i][j];\n    }\n    return result;\n  },\n\n  // calculate the determinant of a matrix\n  det: function det(a) {\n    var alen = a.length,\n    alend = alen * 2,\n    vals = new Array(alend),\n    rowshift = alen - 1,\n    colshift = alend - 1,\n    mrow = rowshift - alen + 1,\n    mcol = colshift,\n    i = 0,\n    result = 0,\n    j;\n    // check for special 2x2 case\n    if (alen === 2) {\n      return a[0][0] * a[1][1] - a[0][1] * a[1][0];\n    }\n    for (; i < alend; i++) {\n      vals[i] = 1;\n    }\n    for (i = 0; i < alen; i++) {\n      for (j = 0; j < alen; j++) {\n        vals[(mrow < 0) ? mrow + alen : mrow ] *= a[i][j];\n        vals[(mcol < alen) ? mcol + alen : mcol ] *= a[i][j];\n        mrow++;\n        mcol--;\n      }\n      mrow = --rowshift - alen + 1;\n      mcol = --colshift;\n    }\n    for (i = 0; i < alen; i++) {\n      result += vals[i];\n    }\n    for (; i < alend; i++) {\n      result -= vals[i];\n    }\n    return result;\n  },\n\n  gauss_elimination: function gauss_elimination(a, b) {\n    var i = 0,\n    j = 0,\n    n = a.length,\n    m = a[0].length,\n    factor = 1,\n    sum = 0,\n    x = [],\n    maug, pivot, temp, k;\n    a = jStat.aug(a, b);\n    maug = a[0].length;\n    for(i = 0; i < n; i++) {\n      pivot = a[i][i];\n      j = i;\n      for (k = i + 1; k < m; k++) {\n        if (pivot < Math.abs(a[k][i])) {\n          pivot = a[k][i];\n          j = k;\n        }\n      }\n      if (j != i) {\n        for(k = 0; k < maug; k++) {\n          temp = a[i][k];\n          a[i][k] = a[j][k];\n          a[j][k] = temp;\n        }\n      }\n      for (j = i + 1; j < n; j++) {\n        factor = a[j][i] / a[i][i];\n        for(k = i; k < maug; k++) {\n          a[j][k] = a[j][k] - factor * a[i][k];\n        }\n      }\n    }\n    for (i = n - 1; i >= 0; i--) {\n      sum = 0;\n      for (j = i + 1; j<= n - 1; j++) {\n        sum = sum + x[j] * a[i][j];\n      }\n      x[i] =(a[i][maug - 1] - sum) / a[i][i];\n    }\n    return x;\n  },\n\n  gauss_jordan: function gauss_jordan(a, b) {\n    var m = jStat.aug(a, b);\n    var h = m.length;\n    var w = m[0].length;\n    var c = 0;\n    var x, y, y2;\n    // find max pivot\n    for (y = 0; y < h; y++) {\n      var maxrow = y;\n      for (y2 = y+1; y2 < h; y2++) {\n        if (Math.abs(m[y2][y]) > Math.abs(m[maxrow][y]))\n          maxrow = y2;\n      }\n      var tmp = m[y];\n      m[y] = m[maxrow];\n      m[maxrow] = tmp\n      for (y2 = y+1; y2 < h; y2++) {\n        c = m[y2][y] / m[y][y];\n        for (x = y; x < w; x++) {\n          m[y2][x] -= m[y][x] * c;\n        }\n      }\n    }\n    // backsubstitute\n    for (y = h-1; y >= 0; y--) {\n      c = m[y][y];\n      for (y2 = 0; y2 < y; y2++) {\n        for (x = w-1; x > y-1; x--) {\n          m[y2][x] -= m[y][x] * m[y2][y] / c;\n        }\n      }\n      m[y][y] /= c;\n      for (x = h; x < w; x++) {\n        m[y][x] /= c;\n      }\n    }\n    return m;\n  },\n\n  // solve equation\n  // Ax=b\n  // A is upper triangular matrix\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[1,2,3]\n  // triaUpSolve(A,b) // -> [2.666,0.1666,1.666]\n  // if you use matrix style\n  // A=[[1,2,3],[0,4,5],[0,6,7]]\n  // b=[[1],[2],[3]]\n  // will return [[2.666],[0.1666],[1.666]]\n  triaUpSolve: function triaUpSolve(A, b) {\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n    var matrix_mode = false;\n\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size - 1, -1, -1).forEach(function(i) {\n      parts = jStat.arange(i + 1, size).map(function(j) {\n        return x[j] * A[i][j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    });\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n  triaLowSolve: function triaLowSolve(A, b) {\n    // like to triaUpSolve but A is lower triangular matrix\n    var size = A[0].length;\n    var x = jStat.zeros(1, size)[0];\n    var parts;\n\n    var matrix_mode=false;\n    if (b[0].length != undefined) {\n      b = b.map(function(i){ return i[0] });\n      matrix_mode = true;\n    }\n\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(j) {\n        return A[i][j] * x[j];\n      });\n      x[i] = (b[i] - jStat.sum(parts)) / A[i][i];\n    })\n\n    if (matrix_mode)\n      return x.map(function(i){ return [i] });\n    return x;\n  },\n\n\n  // A -> [L,U]\n  // A=LU\n  // L is lower triangular matrix\n  // U is upper triangular matrix\n  lu: function lu(A) {\n    var size = A.length;\n    //var L=jStat.diagonal(jStat.ones(1,size)[0]);\n    var L = jStat.identity(size);\n    var R = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(t) {\n      R[0][t] = A[0][t];\n    });\n    jStat.arange(1, size).forEach(function(l) {\n      jStat.arange(l).forEach(function(i) {\n        parts = jStat.arange(i).map(function(jj) {\n          return L[l][jj] * R[jj][i];\n        });\n        L[l][i] = (A[l][i] - jStat.sum(parts)) / R[i][i];\n      });\n      jStat.arange(l, size).forEach(function(j) {\n        parts = jStat.arange(l).map(function(jj) {\n          return L[l][jj] * R[jj][j];\n        });\n        R[l][j] = A[parts.length][j] - jStat.sum(parts);\n      });\n    });\n    return [L, R];\n  },\n\n  // A -> T\n  // A=TT'\n  // T is lower triangular matrix\n  cholesky: function cholesky(A) {\n    var size = A.length;\n    var T = jStat.zeros(A.length, A[0].length);\n    var parts;\n    jStat.arange(size).forEach(function(i) {\n      parts = jStat.arange(i).map(function(t) {\n        return Math.pow(T[i][t],2);\n      });\n      T[i][i] = Math.sqrt(A[i][i] - jStat.sum(parts));\n      jStat.arange(i + 1, size).forEach(function(j) {\n        parts = jStat.arange(i).map(function(t) {\n          return T[i][t] * T[j][t];\n        });\n        T[j][i] = (A[i][j] - jStat.sum(parts)) / T[i][i];\n      });\n    });\n    return T;\n  },\n\n\n  gauss_jacobi: function gauss_jacobi(a, b, x, r) {\n    var i = 0;\n    var j = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(d), jStat.add(l, u)), -1);\n    c = jStat.multiply(jStat.inv(d), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk,xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  gauss_seidel: function gauss_seidel(a, b, x, r) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d, l)), u), -1);\n    c = jStat.multiply(jStat.inv(jStat.add(d, l)), b);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i = i + 1;\n    }\n    return xk;\n  },\n\n  SOR: function SOR(a, b, x, r, w) {\n    var i = 0;\n    var n = a.length;\n    var l = [];\n    var u = [];\n    var d = [];\n    var j, xv, c, h, xk;\n    for (; i < n; i++) {\n      l[i] = [];\n      u[i] = [];\n      d[i] = [];\n      for (j = 0; j < n; j++) {\n        if (i > j) {\n          l[i][j] = a[i][j];\n          u[i][j] = d[i][j] = 0;\n        } else if (i < j) {\n          u[i][j] = a[i][j];\n          l[i][j] = d[i][j] = 0;\n        } else {\n          d[i][j] = a[i][j];\n          l[i][j] = u[i][j] = 0;\n        }\n      }\n    }\n    h = jStat.multiply(jStat.inv(jStat.add(d, jStat.multiply(l, w))),\n                       jStat.subtract(jStat.multiply(d, 1 - w),\n                                      jStat.multiply(u, w)));\n    c = jStat.multiply(jStat.multiply(jStat.inv(jStat.add(d,\n        jStat.multiply(l, w))), b), w);\n    xv = x;\n    xk = jStat.add(jStat.multiply(h, x), c);\n    i = 2;\n    while (Math.abs(jStat.norm(jStat.subtract(xk, xv))) > r) {\n      xv = xk;\n      xk = jStat.add(jStat.multiply(h, xv), c);\n      i++;\n    }\n    return xk;\n  },\n\n  householder: function householder(a) {\n    var m = a.length;\n    var n = a[0].length;\n    var i = 0;\n    var w = [];\n    var p = [];\n    var alpha, r, k, j, factor;\n    for (; i < m - 1; i++) {\n      alpha = 0;\n      for (j = i + 1; j < n; j++)\n      alpha += (a[j][i] * a[j][i]);\n      factor = (a[i + 1][i] > 0) ? -1 : 1;\n      alpha = factor * Math.sqrt(alpha);\n      r = Math.sqrt((((alpha * alpha) - a[i + 1][i] * alpha) / 2));\n      w = jStat.zeros(m, 1);\n      w[i + 1][0] = (a[i + 1][i] - alpha) / (2 * r);\n      for (k = i + 2; k < m; k++) w[k][0] = a[k][i] / (2 * r);\n      p = jStat.subtract(jStat.identity(m, n),\n          jStat.multiply(jStat.multiply(w, jStat.transpose(w)), 2));\n      a = jStat.multiply(p, jStat.multiply(a, p));\n    }\n    return a;\n  },\n\n  // A -> [Q,R]\n  // Q is orthogonal matrix\n  // R is upper triangular\n  QR: (function() {\n    // x -> Q\n    // find a orthogonal matrix Q st.\n    // Qx=y\n    // y is [||x||,0,0,...]\n\n    // quick ref\n    var sum   = jStat.sum;\n    var range = jStat.arange;\n\n    function qr2(x) {\n      // quick impletation\n      // https://www.stat.wisc.edu/~larget/math496/qr.html\n\n      var n = x.length;\n      var p = x[0].length;\n\n      var r = jStat.zeros(p, p);\n      x = jStat.copy(x);\n\n      var i,j,k;\n      for(j = 0; j < p; j++){\n        r[j][j] = Math.sqrt(sum(range(n).map(function(i){\n          return x[i][j] * x[i][j];\n        })));\n        for(i = 0; i < n; i++){\n          x[i][j] = x[i][j] / r[j][j];\n        }\n        for(k = j+1; k < p; k++){\n          r[j][k] = sum(range(n).map(function(i){\n            return x[i][j] * x[i][k];\n          }));\n          for(i = 0; i < n; i++){\n            x[i][k] = x[i][k] - x[i][j]*r[j][k];\n          }\n        }\n      }\n      return [x, r];\n    }\n\n    return qr2;\n  }()),\n\n  lstsq: (function() {\n    // solve least squard problem for Ax=b as QR decomposition way if b is\n    // [[b1],[b2],[b3]] form will return [[x1],[x2],[x3]] array form solution\n    // else b is [b1,b2,b3] form will return [x1,x2,x3] array form solution\n    function R_I(A) {\n      A = jStat.copy(A);\n      var size = A.length;\n      var I = jStat.identity(size);\n      jStat.arange(size - 1, -1, -1).forEach(function(i) {\n        jStat.sliceAssign(\n            I, { row: i }, jStat.divide(jStat.slice(I, { row: i }), A[i][i]));\n        jStat.sliceAssign(\n            A, { row: i }, jStat.divide(jStat.slice(A, { row: i }), A[i][i]));\n        jStat.arange(i).forEach(function(j) {\n          var c = jStat.multiply(A[j][i], -1);\n          var Aj = jStat.slice(A, { row: j });\n          var cAi = jStat.multiply(jStat.slice(A, { row: i }), c);\n          jStat.sliceAssign(A, { row: j }, jStat.add(Aj, cAi));\n          var Ij = jStat.slice(I, { row: j });\n          var cIi = jStat.multiply(jStat.slice(I, { row: i }), c);\n          jStat.sliceAssign(I, { row: j }, jStat.add(Ij, cIi));\n        })\n      });\n      return I;\n    }\n\n    function qr_solve(A, b){\n      var array_mode = false;\n      if (b[0].length === undefined) {\n        // [c1,c2,c3] mode\n        b = b.map(function(x){ return [x] });\n        array_mode = true;\n      }\n      var QR = jStat.QR(A);\n      var Q = QR[0];\n      var R = QR[1];\n      var attrs = A[0].length;\n      var Q1 = jStat.slice(Q,{col:{end:attrs}});\n      var R1 = jStat.slice(R,{row:{end:attrs}});\n      var RI = R_I(R1);\n      var Q2 = jStat.transpose(Q1);\n\n      if(Q2[0].length === undefined){\n        Q2 = [Q2]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n      var x = jStat.multiply(jStat.multiply(RI, Q2), b);\n\n      if(x.length === undefined){\n        x = [[x]]; // The confusing jStat.multifly implementation threat nature process again.\n      }\n\n\n      if (array_mode)\n        return x.map(function(i){ return i[0] });\n      return x;\n    }\n\n    return qr_solve;\n  }()),\n\n  jacobi: function jacobi(a) {\n    var condition = 1;\n    var n = a.length;\n    var e = jStat.identity(n, n);\n    var ev = [];\n    var b, i, j, p, q, maxim, theta, s;\n    // condition === 1 only if tolerance is not reached\n    while (condition === 1) {\n      maxim = a[0][1];\n      p = 0;\n      q = 1;\n      for (i = 0; i < n; i++) {\n        for (j = 0; j < n; j++) {\n          if (i != j) {\n            if (maxim < Math.abs(a[i][j])) {\n              maxim = Math.abs(a[i][j]);\n              p = i;\n              q = j;\n            }\n          }\n        }\n      }\n      if (a[p][p] === a[q][q])\n        theta = (a[p][q] > 0) ? Math.PI / 4 : -Math.PI / 4;\n      else\n        theta = Math.atan(2 * a[p][q] / (a[p][p] - a[q][q])) / 2;\n      s = jStat.identity(n, n);\n      s[p][p] = Math.cos(theta);\n      s[p][q] = -Math.sin(theta);\n      s[q][p] = Math.sin(theta);\n      s[q][q] = Math.cos(theta);\n      // eigen vector matrix\n      e = jStat.multiply(e, s);\n      b = jStat.multiply(jStat.multiply(jStat.inv(s), a), s);\n      a = b;\n      condition = 0;\n      for (i = 1; i < n; i++) {\n        for (j = 1; j < n; j++) {\n          if (i != j && Math.abs(a[i][j]) > 0.001) {\n            condition = 1;\n          }\n        }\n      }\n    }\n    for (i = 0; i < n; i++) ev.push(a[i][i]);\n    //returns both the eigenvalue and eigenmatrix\n    return [e, ev];\n  },\n\n  rungekutta: function rungekutta(f, h, p, t_j, u_j, order) {\n    var k1, k2, u_j1, k3, k4;\n    if (order === 2) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h, u_j + k1);\n        u_j1 = u_j + (k1 + k2) / 2;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    if (order === 4) {\n      while (t_j <= p) {\n        k1 = h * f(t_j, u_j);\n        k2 = h * f(t_j + h / 2, u_j + k1 / 2);\n        k3 = h * f(t_j + h / 2, u_j + k2 / 2);\n        k4 = h * f(t_j +h, u_j + k3);\n        u_j1 = u_j + (k1 + 2 * k2 + 2 * k3 + k4) / 6;\n        u_j = u_j1;\n        t_j = t_j + h;\n      }\n    }\n    return u_j;\n  },\n\n  romberg: function romberg(f, a, b, order) {\n    var i = 0;\n    var h = (b - a) / 2;\n    var x = [];\n    var h1 = [];\n    var g = [];\n    var m, a1, j, k, I;\n    while (i < order / 2) {\n      I = f(a);\n      for (j = a, k = 0; j <= b; j = j + h, k++) x[k] = j;\n      m = x.length;\n      for (j = 1; j < m - 1; j++) {\n        I += (((j % 2) !== 0) ? 4 : 2) * f(x[j]);\n      }\n      I = (h / 3) * (I + f(b));\n      g[i] = I;\n      h /= 2;\n      i++;\n    }\n    a1 = g.length;\n    m = 1;\n    while (a1 !== 1) {\n      for (j = 0; j < a1 - 1; j++)\n      h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a1 = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  richardson: function richardson(X, f, x, h) {\n    function pos(X, x) {\n      var i = 0;\n      var n = X.length;\n      var p;\n      for (; i < n; i++)\n        if (X[i] === x) p = i;\n      return p;\n    }\n    var h_min = Math.abs(x - X[pos(X, x) + 1]);\n    var i = 0;\n    var g = [];\n    var h1 = [];\n    var y1, y2, m, a, j;\n    while (h >= h_min) {\n      y1 = pos(X, x + h);\n      y2 = pos(X, x);\n      g[i] = (f[y1] - 2 * f[y2] + f[2 * y2 - y1]) / (h * h);\n      h /= 2;\n      i++;\n    }\n    a = g.length;\n    m = 1;\n    while (a != 1) {\n      for (j = 0; j < a - 1; j++)\n        h1[j] = ((Math.pow(4, m)) * g[j + 1] - g[j]) / (Math.pow(4, m) - 1);\n      a = h1.length;\n      g = h1;\n      h1 = [];\n      m++;\n    }\n    return g;\n  },\n\n  simpson: function simpson(f, a, b, n) {\n    var h = (b - a) / n;\n    var I = f(a);\n    var x = [];\n    var j = a;\n    var k = 0;\n    var i = 1;\n    var m;\n    for (; j <= b; j = j + h, k++)\n      x[k] = j;\n    m = x.length;\n    for (; i < m - 1; i++) {\n      I += ((i % 2 !== 0) ? 4 : 2) * f(x[i]);\n    }\n    return (h / 3) * (I + f(b));\n  },\n\n  hermite: function hermite(X, F, dF, value) {\n    var n = X.length;\n    var p = 0;\n    var i = 0;\n    var l = [];\n    var dl = [];\n    var A = [];\n    var B = [];\n    var j;\n    for (; i < n; i++) {\n      l[i] = 1;\n      for (j = 0; j < n; j++) {\n        if (i != j) l[i] *= (value - X[j]) / (X[i] - X[j]);\n      }\n      dl[i] = 0;\n      for (j = 0; j < n; j++) {\n        if (i != j) dl[i] += 1 / (X [i] - X[j]);\n      }\n      A[i] = (1 - 2 * (value - X[i]) * dl[i]) * (l[i] * l[i]);\n      B[i] = (value - X[i]) * (l[i] * l[i]);\n      p += (A[i] * F[i] + B[i] * dF[i]);\n    }\n    return p;\n  },\n\n  lagrange: function lagrange(X, F, value) {\n    var p = 0;\n    var i = 0;\n    var j, l;\n    var n = X.length;\n    for (; i < n; i++) {\n      l = F[i];\n      for (j = 0; j < n; j++) {\n        // calculating the lagrange polynomial L_i\n        if (i != j) l *= (value - X[j]) / (X[i] - X[j]);\n      }\n      // adding the lagrange polynomials found above\n      p += l;\n    }\n    return p;\n  },\n\n  cubic_spline: function cubic_spline(X, F, value) {\n    var n = X.length;\n    var i = 0, j;\n    var A = [];\n    var B = [];\n    var alpha = [];\n    var c = [];\n    var h = [];\n    var b = [];\n    var d = [];\n    for (; i < n - 1; i++)\n      h[i] = X[i + 1] - X[i];\n    alpha[0] = 0;\n    for (i = 1; i < n - 1; i++) {\n      alpha[i] = (3 / h[i]) * (F[i + 1] - F[i]) -\n          (3 / h[i-1]) * (F[i] - F[i-1]);\n    }\n    for (i = 1; i < n - 1; i++) {\n      A[i] = [];\n      B[i] = [];\n      A[i][i-1] = h[i-1];\n      A[i][i] = 2 * (h[i - 1] + h[i]);\n      A[i][i+1] = h[i];\n      B[i][0] = alpha[i];\n    }\n    c = jStat.multiply(jStat.inv(A), B);\n    for (j = 0; j < n - 1; j++) {\n      b[j] = (F[j + 1] - F[j]) / h[j] - h[j] * (c[j + 1][0] + 2 * c[j][0]) / 3;\n      d[j] = (c[j + 1][0] - c[j][0]) / (3 * h[j]);\n    }\n    for (j = 0; j < n; j++) {\n      if (X[j] > value) break;\n    }\n    j -= 1;\n    return F[j] + (value - X[j]) * b[j] + jStat.sq(value-X[j]) *\n        c[j] + (value - X[j]) * jStat.sq(value - X[j]) * d[j];\n  },\n\n  gauss_quadrature: function gauss_quadrature() {\n    throw new Error('gauss_quadrature not yet implemented');\n  },\n\n  PCA: function PCA(X) {\n    var m = X.length;\n    var n = X[0].length;\n    var i = 0;\n    var j, temp1;\n    var u = [];\n    var D = [];\n    var result = [];\n    var temp2 = [];\n    var Y = [];\n    var Bt = [];\n    var B = [];\n    var C = [];\n    var V = [];\n    var Vt = [];\n    for (i = 0; i < m; i++) {\n      u[i] = jStat.sum(X[i]) / n;\n    }\n    for (i = 0; i < n; i++) {\n      B[i] = [];\n      for(j = 0; j < m; j++) {\n        B[i][j] = X[j][i] - u[j];\n      }\n    }\n    B = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      C[i] = [];\n      for (j = 0; j < m; j++) {\n        C[i][j] = (jStat.dot([B[i]], [B[j]])) / (n - 1);\n      }\n    }\n    result = jStat.jacobi(C);\n    V = result[0];\n    D = result[1];\n    Vt = jStat.transpose(V);\n    for (i = 0; i < D.length; i++) {\n      for (j = i; j < D.length; j++) {\n        if(D[i] < D[j])  {\n          temp1 = D[i];\n          D[i] = D[j];\n          D[j] = temp1;\n          temp2 = Vt[i];\n          Vt[i] = Vt[j];\n          Vt[j] = temp2;\n        }\n      }\n    }\n    Bt = jStat.transpose(B);\n    for (i = 0; i < m; i++) {\n      Y[i] = [];\n      for (j = 0; j < Bt.length; j++) {\n        Y[i][j] = jStat.dot([Vt[i]], [Bt[j]]);\n      }\n    }\n    return [X, D, Vt, Y];\n  }\n});\n\n// extend jStat.fn with methods that require one argument\n(function(funcs) {\n  for (var i = 0; i < funcs.length; i++) (function(passfunc) {\n    jStat.fn[passfunc] = function(arg, func) {\n      var tmpthis = this;\n      // check for callback\n      if (func) {\n        setTimeout(function() {\n          func.call(tmpthis, jStat.fn[passfunc].call(tmpthis, arg));\n        }, 15);\n        return this;\n      }\n      if (typeof jStat[passfunc](this, arg) === 'number')\n        return jStat[passfunc](this, arg);\n      else\n        return jStat(jStat[passfunc](this, arg));\n    };\n  }(funcs[i]));\n}('add divide multiply subtract dot pow exp log abs norm angle'.split(' ')));\n\n}(jStat, Math));\n(function(jStat, Math) {\n\nvar slice = [].slice;\nvar isNumber = jStat.utils.isNumber;\nvar isArray = jStat.utils.isArray;\n\n// flag==true denotes use of sample standard deviation\n// Z Statistics\njStat.extend({\n  // 2 different parameter lists:\n  // (value, mean, sd)\n  // (value, array, flag)\n  zscore: function zscore() {\n    var args = slice.call(arguments);\n    if (isNumber(args[1])) {\n      return (args[0] - args[1]) / args[2];\n    }\n    return (args[0] - jStat.mean(args[1])) / jStat.stdev(args[1], args[2]);\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, sides)\n  // (zscore, sides)\n  // (value, array, sides, flag)\n  ztest: function ztest() {\n    var args = slice.call(arguments);\n    var z;\n    if (isArray(args[1])) {\n      // (value, array, sides, flag)\n      z = jStat.zscore(args[0],args[1],args[3]);\n      return (args[2] === 1) ?\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)) :\n        (jStat.normal.cdf(-Math.abs(z), 0, 1)*2);\n    } else {\n      if (args.length > 2) {\n        // (value, mean, sd, sides)\n        z = jStat.zscore(args[0],args[1],args[2]);\n        return (args[3] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)* 2);\n      } else {\n        // (zscore, sides)\n        z = args[0];\n        return (args[1] === 1) ?\n          (jStat.normal.cdf(-Math.abs(z),0,1)) :\n          (jStat.normal.cdf(-Math.abs(z),0,1)*2);\n      }\n    }\n  }\n});\n\njStat.extend(jStat.fn, {\n  zscore: function zscore(value, flag) {\n    return (value - this.mean()) / this.stdev(flag);\n  },\n\n  ztest: function ztest(value, sides, flag) {\n    var zscore = Math.abs(this.zscore(value, flag));\n    return (sides === 1) ?\n      (jStat.normal.cdf(-zscore, 0, 1)) :\n      (jStat.normal.cdf(-zscore, 0, 1) * 2);\n  }\n});\n\n// T Statistics\njStat.extend({\n  // 2 parameter lists\n  // (value, mean, sd, n)\n  // (value, array)\n  tscore: function tscore() {\n    var args = slice.call(arguments);\n    return (args.length === 4) ?\n      ((args[0] - args[1]) / (args[2] / Math.sqrt(args[3]))) :\n      ((args[0] - jStat.mean(args[1])) /\n       (jStat.stdev(args[1], true) / Math.sqrt(args[1].length)));\n  },\n\n  // 3 different paramter lists:\n  // (value, mean, sd, n, sides)\n  // (tscore, n, sides)\n  // (value, array, sides)\n  ttest: function ttest() {\n    var args = slice.call(arguments);\n    var tscore;\n    if (args.length === 5) {\n      tscore = Math.abs(jStat.tscore(args[0], args[1], args[2], args[3]));\n      return (args[4] === 1) ?\n        (jStat.studentt.cdf(-tscore, args[3]-1)) :\n        (jStat.studentt.cdf(-tscore, args[3]-1)*2);\n    }\n    if (isNumber(args[1])) {\n      tscore = Math.abs(args[0])\n      return (args[2] == 1) ?\n        (jStat.studentt.cdf(-tscore, args[1]-1)) :\n        (jStat.studentt.cdf(-tscore, args[1]-1) * 2);\n    }\n    tscore = Math.abs(jStat.tscore(args[0], args[1]))\n    return (args[2] == 1) ?\n      (jStat.studentt.cdf(-tscore, args[1].length-1)) :\n      (jStat.studentt.cdf(-tscore, args[1].length-1) * 2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  tscore: function tscore(value) {\n    return (value - this.mean()) / (this.stdev(true) / Math.sqrt(this.cols()));\n  },\n\n  ttest: function ttest(value, sides) {\n    return (sides === 1) ?\n      (1 - jStat.studentt.cdf(Math.abs(this.tscore(value)), this.cols()-1)) :\n      (jStat.studentt.cdf(-Math.abs(this.tscore(value)), this.cols()-1)*2);\n  }\n});\n\n// F Statistics\njStat.extend({\n  // Paramter list is as follows:\n  // (array1, array2, array3, ...)\n  // or it is an array of arrays\n  // array of arrays conversion\n  anovafscore: function anovafscore() {\n    var args = slice.call(arguments),\n    expVar, sample, sampMean, sampSampMean, tmpargs, unexpVar, i, j;\n    if (args.length === 1) {\n      tmpargs = new Array(args[0].length);\n      for (i = 0; i < args[0].length; i++) {\n        tmpargs[i] = args[0][i];\n      }\n      args = tmpargs;\n    }\n    // Builds sample array\n    sample = new Array();\n    for (i = 0; i < args.length; i++) {\n      sample = sample.concat(args[i]);\n    }\n    sampMean = jStat.mean(sample);\n    // Computes the explained variance\n    expVar = 0;\n    for (i = 0; i < args.length; i++) {\n      expVar = expVar + args[i].length * Math.pow(jStat.mean(args[i]) - sampMean, 2);\n    }\n    expVar /= (args.length - 1);\n    // Computes unexplained variance\n    unexpVar = 0;\n    for (i = 0; i < args.length; i++) {\n      sampSampMean = jStat.mean(args[i]);\n      for (j = 0; j < args[i].length; j++) {\n        unexpVar += Math.pow(args[i][j] - sampSampMean, 2);\n      }\n    }\n    unexpVar /= (sample.length - args.length);\n    return expVar / unexpVar;\n  },\n\n  // 2 different paramter setups\n  // (array1, array2, array3, ...)\n  // (anovafscore, df1, df2)\n  anovaftest: function anovaftest() {\n    var args = slice.call(arguments),\n    df1, df2, n, i;\n    if (isNumber(args[0])) {\n      return 1 - jStat.centralF.cdf(args[0], args[1], args[2]);\n    }\n    var anovafscore = jStat.anovafscore(args);\n    df1 = args.length - 1;\n    n = 0;\n    for (i = 0; i < args.length; i++) {\n      n = n + args[i].length;\n    }\n    df2 = n - df1 - 1;\n    return 1 - jStat.centralF.cdf(anovafscore, df1, df2);\n  },\n\n  ftest: function ftest(fscore, df1, df2) {\n    return 1 - jStat.centralF.cdf(fscore, df1, df2);\n  }\n});\n\njStat.extend(jStat.fn, {\n  anovafscore: function anovafscore() {\n    return jStat.anovafscore(this.toArray());\n  },\n\n  anovaftes: function anovaftes() {\n    var n = 0;\n    var i;\n    for (i = 0; i < this.length; i++) {\n      n = n + this[i].length;\n    }\n    return jStat.ftest(this.anovafscore(), this.length - 1, n - this.length);\n  }\n});\n\n// Tukey's range test\njStat.extend({\n  // 2 parameter lists\n  // (mean1, mean2, n1, n2, sd)\n  // (array1, array2, sd)\n  qscore: function qscore() {\n    var args = slice.call(arguments);\n    var mean1, mean2, n1, n2, sd;\n    if (isNumber(args[0])) {\n        mean1 = args[0];\n        mean2 = args[1];\n        n1 = args[2];\n        n2 = args[3];\n        sd = args[4];\n    } else {\n        mean1 = jStat.mean(args[0]);\n        mean2 = jStat.mean(args[1]);\n        n1 = args[0].length;\n        n2 = args[1].length;\n        sd = args[2];\n    }\n    return Math.abs(mean1 - mean2) / (sd * Math.sqrt((1 / n1 + 1 / n2) / 2));\n  },\n\n  // 3 different parameter lists:\n  // (qscore, n, k)\n  // (mean1, mean2, n1, n2, sd, n, k)\n  // (array1, array2, sd, n, k)\n  qtest: function qtest() {\n    var args = slice.call(arguments);\n\n    var qscore;\n    if (args.length === 3) {\n      qscore = args[0];\n      args = args.slice(1);\n    } else if (args.length === 7) {\n      qscore = jStat.qscore(args[0], args[1], args[2], args[3], args[4]);\n      args = args.slice(5);\n    } else {\n      qscore = jStat.qscore(args[0], args[1], args[2]);\n      args = args.slice(3);\n    }\n\n    var n = args[0];\n    var k = args[1];\n\n    return 1 - jStat.tukey.cdf(qscore, k, n - k);\n  },\n\n  tukeyhsd: function tukeyhsd(arrays) {\n    var sd = jStat.pooledstdev(arrays);\n    var means = arrays.map(function (arr) {return jStat.mean(arr);});\n    var n = arrays.reduce(function (n, arr) {return n + arr.length;}, 0);\n\n    var results = [];\n    for (var i = 0; i < arrays.length; ++i) {\n        for (var j = i + 1; j < arrays.length; ++j) {\n            var p = jStat.qtest(means[i], means[j], arrays[i].length, arrays[j].length, sd, n, arrays.length);\n            results.push([[i, j], p]);\n        }\n    }\n\n    return results;\n  }\n});\n\n// Error Bounds\njStat.extend({\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  normalci: function normalci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.normal.inv(args[1] / 2, 0, 1) *\n                        jStat.stdev(args[2]) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  // 2 different parameter setups\n  // (value, alpha, sd, n)\n  // (value, alpha, array)\n  tci: function tci() {\n    var args = slice.call(arguments),\n    ans = new Array(2),\n    change;\n    if (args.length === 4) {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[3] - 1) *\n                        args[2] / Math.sqrt(args[3]));\n    } else {\n      change = Math.abs(jStat.studentt.inv(args[1] / 2, args[2].length - 1) *\n                        jStat.stdev(args[2], true) / Math.sqrt(args[2].length));\n    }\n    ans[0] = args[0] - change;\n    ans[1] = args[0] + change;\n    return ans;\n  },\n\n  significant: function significant(pvalue, alpha) {\n    return pvalue < alpha;\n  }\n});\n\njStat.extend(jStat.fn, {\n  normalci: function normalci(value, alpha) {\n    return jStat.normalci(value, alpha, this.toArray());\n  },\n\n  tci: function tci(value, alpha) {\n    return jStat.tci(value, alpha, this.toArray());\n  }\n});\n\n// internal method for calculating the z-score for a difference of proportions test\nfunction differenceOfProportions(p1, n1, p2, n2) {\n  if (p1 > 1 || p2 > 1 || p1 <= 0 || p2 <= 0) {\n    throw new Error(\"Proportions should be greater than 0 and less than 1\")\n  }\n  var pooled = (p1 * n1 + p2 * n2) / (n1 + n2);\n  var se = Math.sqrt(pooled * (1 - pooled) * ((1/n1) + (1/n2)));\n  return (p1 - p2) / se;\n}\n\n// Difference of Proportions\njStat.extend(jStat.fn, {\n  oneSidedDifferenceOfProportions: function oneSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 1);\n  },\n\n  twoSidedDifferenceOfProportions: function twoSidedDifferenceOfProportions(p1, n1, p2, n2) {\n    var z = differenceOfProportions(p1, n1, p2, n2);\n    return jStat.ztest(z, 2);\n  }\n});\n\n}(jStat, Math));\njStat.models = (function(){\n  function sub_regress(exog) {\n    var var_count = exog[0].length;\n    var modelList = jStat.arange(var_count).map(function(endog_index) {\n      var exog_index =\n          jStat.arange(var_count).filter(function(i){return i!==endog_index});\n      return ols(jStat.col(exog, endog_index).map(function(x){ return x[0] }),\n                 jStat.col(exog, exog_index))\n    });\n    return modelList;\n  }\n\n  // do OLS model regress\n  // exog have include const columns ,it will not generate it .In fact, exog is\n  // \"design matrix\" look at\n  //https://en.wikipedia.org/wiki/Design_matrix\n  function ols(endog, exog) {\n    var nobs = endog.length;\n    var df_model = exog[0].length - 1;\n    var df_resid = nobs-df_model - 1;\n    var coef = jStat.lstsq(exog, endog);\n    var predict =\n        jStat.multiply(exog, coef.map(function(x) { return [x] }))\n            .map(function(p) { return p[0] });\n    var resid = jStat.subtract(endog, predict);\n    var ybar = jStat.mean(endog);\n    // constant cause problem\n    // var SST = jStat.sum(endog.map(function(y) {\n    //   return Math.pow(y-ybar,2);\n    // }));\n    var SSE = jStat.sum(predict.map(function(f) {\n      return Math.pow(f - ybar, 2);\n    }));\n    var SSR = jStat.sum(endog.map(function(y, i) {\n      return Math.pow(y - predict[i], 2);\n    }));\n    var SST = SSE + SSR;\n    var R2 = (SSE / SST);\n    return {\n        exog:exog,\n        endog:endog,\n        nobs:nobs,\n        df_model:df_model,\n        df_resid:df_resid,\n        coef:coef,\n        predict:predict,\n        resid:resid,\n        ybar:ybar,\n        SST:SST,\n        SSE:SSE,\n        SSR:SSR,\n        R2:R2\n    };\n  }\n\n  // H0: b_I=0\n  // H1: b_I!=0\n  function t_test(model) {\n    var subModelList = sub_regress(model.exog);\n    //var sigmaHat=jStat.stdev(model.resid);\n    var sigmaHat = Math.sqrt(model.SSR / (model.df_resid));\n    var seBetaHat = subModelList.map(function(mod) {\n      var SST = mod.SST;\n      var R2 = mod.R2;\n      return sigmaHat / Math.sqrt(SST * (1 - R2));\n    });\n    var tStatistic = model.coef.map(function(coef, i) {\n      return (coef - 0) / seBetaHat[i];\n    });\n    var pValue = tStatistic.map(function(t) {\n      var leftppf = jStat.studentt.cdf(t, model.df_resid);\n      return (leftppf > 0.5 ? 1 - leftppf : leftppf) * 2;\n    });\n    var c = jStat.studentt.inv(0.975, model.df_resid);\n    var interval95 = model.coef.map(function(coef, i) {\n      var d = c * seBetaHat[i];\n      return [coef - d, coef + d];\n    })\n    return {\n        se: seBetaHat,\n        t: tStatistic,\n        p: pValue,\n        sigmaHat: sigmaHat,\n        interval95: interval95\n    };\n  }\n\n  function F_test(model) {\n    var F_statistic =\n        (model.R2 / model.df_model) / ((1 - model.R2) / model.df_resid);\n    var fcdf = function(x, n1, n2) {\n      return jStat.beta.cdf(x / (n2 / n1 + x), n1 / 2, n2 / 2)\n    }\n    var pvalue = 1 - fcdf(F_statistic, model.df_model, model.df_resid);\n    return { F_statistic: F_statistic, pvalue: pvalue };\n  }\n\n  function ols_wrap(endog, exog) {\n    var model = ols(endog,exog);\n    var ttest = t_test(model);\n    var ftest = F_test(model);\n    // Provide the Wherry / Ezekiel / McNemar / Cohen Adjusted R^2\n    // Which matches the 'adjusted R^2' provided by R's lm package\n    var adjust_R2 =\n        1 - (1 - model.R2) * ((model.nobs - 1) / (model.df_resid));\n    model.t = ttest;\n    model.f = ftest;\n    model.adjust_R2 = adjust_R2;\n    return model;\n  }\n\n  return { ols: ols_wrap };\n})();\n//To regress, simply build X matrix\n//(append column of 1's) using\n//buildxmatrix and build the Y\n//matrix using buildymatrix\n//(simply the transpose)\n//and run regress.\n\n\n\n//Regressions\n\njStat.extend({\n  buildxmatrix: function buildxmatrix(){\n    //Parameters will be passed in as such\n    //(array1,array2,array3,...)\n    //as (x1,x2,x3,...)\n    //needs to be (1,x1,x2,x3,...)\n    var matrixRows = new Array(arguments.length);\n    for(var i=0;i<arguments.length;i++){\n      var array = [1];\n      matrixRows[i]= array.concat(arguments[i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  builddxmatrix: function builddxmatrix() {\n    //Paramters will be passed in as such\n    //([array1,array2,...]\n    var matrixRows = new Array(arguments[0].length);\n    for(var i=0;i<arguments[0].length;i++){\n      var array = [1]\n      matrixRows[i]= array.concat(arguments[0][i]);\n    }\n    return jStat(matrixRows);\n\n  },\n\n  buildjxmatrix: function buildjxmatrix(jMat) {\n    //Builds from jStat Matrix\n    var pass = new Array(jMat.length)\n    for(var i=0;i<jMat.length;i++){\n      pass[i] = jMat[i];\n    }\n    return jStat.builddxmatrix(pass);\n\n  },\n\n  buildymatrix: function buildymatrix(array){\n    return jStat(array).transpose();\n  },\n\n  buildjymatrix: function buildjymatrix(jMat){\n    return jMat.transpose();\n  },\n\n  matrixmult: function matrixmult(A,B){\n    var i, j, k, result, sum;\n    if (A.cols() == B.rows()) {\n      if(B.rows()>1){\n        result = [];\n        for (i = 0; i < A.rows(); i++) {\n          result[i] = [];\n          for (j = 0; j < B.cols(); j++) {\n            sum = 0;\n            for (k = 0; k < A.cols(); k++) {\n              sum += A.toArray()[i][k] * B.toArray()[k][j];\n            }\n            result[i][j] = sum;\n          }\n        }\n        return jStat(result);\n      }\n      result = [];\n      for (i = 0; i < A.rows(); i++) {\n        result[i] = [];\n        for (j = 0; j < B.cols(); j++) {\n          sum = 0;\n          for (k = 0; k < A.cols(); k++) {\n            sum += A.toArray()[i][k] * B.toArray()[j];\n          }\n          result[i][j] = sum;\n        }\n      }\n      return jStat(result);\n    }\n  },\n\n  //regress and regresst to be fixed\n\n  regress: function regress(jMatX,jMatY){\n    //print(\"regressin!\");\n    //print(jMatX.toArray());\n    var innerinv = jStat.xtranspxinv(jMatX);\n    //print(innerinv);\n    var xtransp = jMatX.transpose();\n    var next = jStat.matrixmult(jStat(innerinv),xtransp);\n    return jStat.matrixmult(next,jMatY);\n\n  },\n\n  regresst: function regresst(jMatX,jMatY,sides){\n    var beta = jStat.regress(jMatX,jMatY);\n\n    var compile = {};\n    compile.anova = {};\n    var jMatYBar = jStat.jMatYBar(jMatX, beta);\n    compile.yBar = jMatYBar;\n    var yAverage = jMatY.mean();\n    compile.anova.residuals = jStat.residuals(jMatY, jMatYBar);\n\n    compile.anova.ssr = jStat.ssr(jMatYBar, yAverage);\n    compile.anova.msr = compile.anova.ssr / (jMatX[0].length - 1);\n\n    compile.anova.sse = jStat.sse(jMatY, jMatYBar);\n    compile.anova.mse =\n        compile.anova.sse / (jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.sst = jStat.sst(jMatY, yAverage);\n    compile.anova.mst = compile.anova.sst / (jMatY.length - 1);\n\n    compile.anova.r2 = 1 - (compile.anova.sse / compile.anova.sst);\n    if (compile.anova.r2 < 0) compile.anova.r2 = 0;\n\n    compile.anova.fratio = compile.anova.msr / compile.anova.mse;\n    compile.anova.pvalue =\n        jStat.anovaftest(compile.anova.fratio,\n                         jMatX[0].length - 1,\n                         jMatY.length - (jMatX[0].length - 1) - 1);\n\n    compile.anova.rmse = Math.sqrt(compile.anova.mse);\n\n    compile.anova.r2adj = 1 - (compile.anova.mse / compile.anova.mst);\n    if (compile.anova.r2adj < 0) compile.anova.r2adj = 0;\n\n    compile.stats = new Array(jMatX[0].length);\n    var covar = jStat.xtranspxinv(jMatX);\n    var sds, ts, ps;\n\n    for(var i=0; i<beta.length;i++){\n      sds=Math.sqrt(compile.anova.mse * Math.abs(covar[i][i]));\n      ts= Math.abs(beta[i] / sds);\n      ps= jStat.ttest(ts, jMatY.length - jMatX[0].length - 1, sides);\n\n      compile.stats[i]=[beta[i], sds, ts, ps];\n    }\n\n    compile.regress = beta;\n    return compile;\n  },\n\n  xtranspx: function xtranspx(jMatX){\n    return jStat.matrixmult(jMatX.transpose(),jMatX);\n  },\n\n\n  xtranspxinv: function xtranspxinv(jMatX){\n    var inner = jStat.matrixmult(jMatX.transpose(),jMatX);\n    var innerinv = jStat.inv(inner);\n    return innerinv;\n  },\n\n  jMatYBar: function jMatYBar(jMatX, beta) {\n    var yBar = jStat.matrixmult(jMatX, beta);\n    return new jStat(yBar);\n  },\n\n  residuals: function residuals(jMatY, jMatYBar) {\n    return jStat.matrixsubtract(jMatY, jMatYBar);\n  },\n\n  ssr: function ssr(jMatYBar, yAverage) {\n    var ssr = 0;\n    for(var i = 0; i < jMatYBar.length; i++) {\n      ssr += Math.pow(jMatYBar[i] - yAverage, 2);\n    }\n    return ssr;\n  },\n\n  sse: function sse(jMatY, jMatYBar) {\n    var sse = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sse += Math.pow(jMatY[i] - jMatYBar[i], 2);\n    }\n    return sse;\n  },\n\n  sst: function sst(jMatY, yAverage) {\n    var sst = 0;\n    for(var i = 0; i < jMatY.length; i++) {\n      sst += Math.pow(jMatY[i] - yAverage, 2);\n    }\n    return sst;\n  },\n\n  matrixsubtract: function matrixsubtract(A,B){\n    var ans = new Array(A.length);\n    for(var i=0;i<A.length;i++){\n      ans[i] = new Array(A[i].length);\n      for(var j=0;j<A[i].length;j++){\n        ans[i][j]=A[i][j]-B[i][j];\n      }\n    }\n    return jStat(ans);\n  }\n});\n  // Make it compatible with previous version.\n  jStat.jStat = jStat;\n\n  return jStat;\n});\n"]},"metadata":{},"sourceType":"script"}